WEBVTT

00:00:00.100 --> 00:00:04.733
ขอเสียงปรบมือให้กับอุดดี้อีกครั้งครับ

00:00:04.800 --> 00:00:06.733
โอเคครับ ก็สวัสดีทุกคนด้วยนะครับ

00:00:06.800 --> 00:00:09.733
ก็อันนี้เรียกว่าเป็น session แรกที่ผมเคย talk นะครับ

00:00:09.800 --> 00:00:12.133
ก็ต้องขอบคุณ organizer พี่ไทด้วยนะครับ

00:00:12.200 --> 00:00:13.533
ที่ให้โอกาสผมมาพูดในวันนี้

00:00:14.400 --> 00:00:18.533
เรื่องที่จะพูดต่อไปนี้
ก็มีส่วนที่เป็น web automation ด้วย

00:00:18.600 --> 00:00:20.933
แล้วก็มีส่วนที่เป็น automation อย่างอื่นด้วยนะครับ

00:00:21.000 --> 00:00:23.733
ก็จะมาเล่าให้ฟัง มันเกิดจากความ frustration

00:00:23.800 --> 00:00:26.433
ของผมกับเพื่อนในระหว่างที่เราเล่นเกม Minecraft กัน

00:00:26.500 --> 00:00:28.733
จนเราต้องเอา automation เข้ามาช่วย

00:00:28.800 --> 00:00:29.533
โอเค

00:00:29.600 --> 00:00:33.133
ขอถามก่อนมีใครในห้องนี้
ไม่เคยเล่น Minecraft บ้างครับ

00:00:34.300 --> 00:00:36.733
เฮ้ย ถามจริง

00:00:36.800 --> 00:00:38.633
อ่ะใครเคยเล่น Minecraft บ้างครับ

00:00:38.700 --> 00:00:40.333
อ๋อ โอเคทุกคนแล้วกัน

00:00:40.400 --> 00:00:42.633
งั้นเราจะ ignore คนที่ไม่เคยเล่นแล้วกันนะครับ

00:00:42.700 --> 00:00:45.033
โอเค ก็ backstory ก่อนนะครับ

00:00:45.100 --> 00:00:48.433
ก็คือใน summer นึง ผมกับเพื่อนประมาณ 3-4 คนนะครับ

00:00:48.500 --> 00:00:50.233
พวกเราได้ลงทุนประมาณ 1,000 man-hour

00:00:51.000 --> 00:00:53.733
ในการสร้างอะไรก็ไม่รู้กันขึ้นมานะครับ

00:00:54.400 --> 00:00:57.533
ก็พวกเราสนุกมากเลย ตั้งแต่เช้ายันเย็น

00:00:57.600 --> 00:01:01.833
จนกระทั่งวันนึง ก็ผมเข้าไปใน server

00:01:01.900 --> 00:01:04.032
แล้วผมก็พิมพ์ command นี้เข้าไป

00:01:04.099 --> 00:01:07.532
อ่ะ มีใครไม่เข้าใจบ้างครับ ขอซาวก่อน

00:01:08.200 --> 00:01:09.933
โอเค ไม่เข้าใจ

00:01:10.000 --> 00:01:13.333
มันคือ teleport ทุกๆ entity

00:01:13.400 --> 00:01:16.833
ในเกมไปที่ตำแหน่งที่เราอยู่ตอนนี้

00:01:16.900 --> 00:01:20.133
พูดง่ายๆ ก็คือผมทำพังทุกอย่าง

00:01:20.200 --> 00:01:22.333
แล้วต่อมาคือเพื่อนผมมันมี backup ไว้

00:01:22.400 --> 00:01:24.733
ด้วยการ backup ตัว server เกม

00:01:24.800 --> 00:01:27.133
ซึ่งเป็น binary base พวก database พวกนั้นน่ะ

00:01:27.200 --> 00:01:28.933
ด้วย Git LFS ไว้

00:01:30.000 --> 00:01:32.933
แต่ว่าก็มันก็คือ 1 อาทิตย์ก่อนนะครับที่ backup

00:01:33.000 --> 00:01:35.733
เพราะฉะนั้นก็คือ progress แบบหลายร้อยชั่วโมง

00:01:35.800 --> 00:01:40.733
ก็หายไปในไม่ถึง 30 วินาทีที่ผม
abuse administrator command นี้

00:01:41.600 --> 00:01:44.532
โอเค เพราะฉะนั้นเมื่อเรารู้ถึงปัญหาที่มันเกิดขึ้น

00:01:44.600 --> 00:01:46.733
จากความอาจจะปัญญาอ่อนนิดหน่อยของผมแล้ว

00:01:46.800 --> 00:01:48.233
ผมอยากให้เห็น workflow นิดนึง

00:01:48.300 --> 00:01:50.433
คือเนื่องจากผมกับเพื่อนเนี่ยเราเล่น Minecraft

00:01:50.500 --> 00:01:52.333
ทุกคนอาจจะเล่นแบบ version Java กัน

00:01:52.400 --> 00:01:53.833
คือ Minecraft เนี่ยมันมี 2 version

00:01:53.900 --> 00:01:57.333
version นึงเขียนด้วย C++ อีก version เขียนด้วย Java

00:01:57.400 --> 00:02:00.933
ซึ่งพวกผมเล่น version ที่เขียนด้วย C++ กัน

00:02:01.000 --> 00:02:03.933
ซึ่งวิธี host ตัว dedicated server ของมัน

00:02:04.000 --> 00:02:05.433
ให้เราเล่นเกมด้วยกันได้เนี่ย

00:02:05.500 --> 00:02:08.132
ก็ไม่มีอะไรก็คือเราโหลดตัว archive มันมา

00:02:08.199 --> 00:02:10.333
จากเว็บ Mojang แล้วก็–

00:02:10.400 --> 00:02:11.833
เว็บ Mojang คือคนที่พัฒนาเนาะ

00:02:11.900 --> 00:02:14.333
แล้วก็ไปแตกไฟล์มัน ก็จะ run ได้เลย

00:02:14.400 --> 00:02:15.933
มันก็มีอยู่ 3 อย่างเนี่ย

00:02:16.000 --> 00:02:19.333
ก็คือมีอันแรกก็แน่นอน server binary

00:02:19.400 --> 00:02:22.233
ที่เอาไว้ก็คือตัวโปรแกรมที่เอามา run server มันเนี่ย

00:02:22.300 --> 00:02:24.933
แล้วก็มีพวก ผมเรียกมันเนี่ย persistent file

00:02:25.000 --> 00:02:26.233
กับ non-persistent

00:02:26.300 --> 00:02:29.132
persistent ก็จะเป็นพวกที่แบบพวก progress

00:02:29.200 --> 00:02:32.033
ที่พวกเราเล่นไป ของที่พวกเราต้องการจะ backup เนี่ย

00:02:32.100 --> 00:02:36.233
ส่วน non-persistent เนี่ยมันเป็น version specific

00:02:36.300 --> 00:02:38.233
ก็คือเราไม่ต้องการ backup มัน

00:02:38.300 --> 00:02:40.433
เพราะเปลี่ยน version มันก็หาย เราก็เปลี่ยนไป

00:02:40.500 --> 00:02:41.533
นึกออกใช่มั้ยครับ

00:02:41.600 --> 00:02:45.033
โอเค ทีนี้ปัญหาที่ผมเจอเลยเนี่ยคือ

00:02:45.900 --> 00:02:47.632
ไอ้ version ที่พวกผมเล่นกันเนี่ย

00:02:47.700 --> 00:02:50.433
มันบังคับให้เราเล่น version ใหม่สุดตลอดครับ

00:02:50.500 --> 00:02:53.333
แล้วตัวผู้พัฒนาเกมมันก็นิสัยไม่ค่อยดี

00:02:53.400 --> 00:02:55.933
มันก็ไม่ให้ auto-update พวกเรา

00:02:56.000 --> 00:02:58.933
คือมันให้ใน client แต่มันไม่ให้ในตัว server

00:02:59.000 --> 00:03:02.632
เท่ากับว่าทุกครั้งที่มี version ใหม่อัพเดตขึ้นมา

00:03:02.700 --> 00:03:04.533
แล้วผมล็อกอินเข้าไปเล่นไม่ได้

00:03:04.600 --> 00:03:07.333
เพราะมันเตือน version mismatch กับตัว server

00:03:07.400 --> 00:03:10.033
ผมต้อง SSH เข้าไปใน VM ของผม

00:03:10.600 --> 00:03:14.933
แล้วก็นั่งมึนอยู่ประมาณ 5 นาทีว่าจะเอาไงดี

00:03:15.000 --> 00:03:18.632
แล้วก็ผมก็ copy folder ที่เป็น persistent file ออกมา

00:03:18.700 --> 00:03:20.333
แล้วก็ลบ folder เกมทิ้ง

00:03:20.400 --> 00:03:22.632
แล้วมาผมก็โหลด archive นี่มาใหม่

00:03:22.700 --> 00:03:24.533
แล้วผมก็เปิด server 1 ครั้ง

00:03:24.600 --> 00:03:29.733
แล้วผมก็ copy ไอ้อันเดิม
กลับไปใส่ในตัวที่ผมเพิ่งโหลดมา

00:03:29.800 --> 00:03:31.333
และแน่นอนครับ

00:03:31.400 --> 00:03:33.333
ผมเคยเผลอลบทุกอย่างทิ้งมันอีกแล้ว

00:03:33.400 --> 00:03:35.233
แล้วพวกเราก็ต้องเริ่มใหม่หมด

00:03:36.100 --> 00:03:39.132
เพราะฉะนั้นตอนแรกผมแก้ง่ายๆ

00:03:39.200 --> 00:03:41.333
ด้วยการที่ผมเขียน Ansible script ขึ้นมา

00:03:41.400 --> 00:03:43.833
เพื่อที่จะ automate เรื่องพวกนี้ ก็ช่วยระดับนึง

00:03:43.900 --> 00:03:46.033
อ่ะมีใครไม่รู้จัก Ansible มั้ยครับ

00:03:46.800 --> 00:03:49.233
มันเป็นเครื่องมือ devops tool ตัวนึง

00:03:49.300 --> 00:03:52.433
ที่เราใช้ในการ พูดง่ายๆ คือเหมือนเก็บ action ที่เรา

00:03:52.500 --> 00:03:55.233
จะ SSH เข้าไปทำเนี่ย อยู่ในแบบเป็น code

00:03:55.300 --> 00:03:57.533
แล้วเราก็จะได้ execute มันได้

00:03:57.600 --> 00:04:00.533
ทีนี้ปัญหาที่ 2 ที่ผมเจอคือ

00:04:00.600 --> 00:04:02.733
เนื่องจากผม host มันโดย server ที่บ้านเนาะ

00:04:02.800 --> 00:04:04.433
แล้วถ้าเกิดผมเปิดมัน 24 ชั่วโมง

00:04:04.500 --> 00:04:06.933
พ่อผมจะเอามิเตอร์มาติดที่ rack ผม

00:04:07.000 --> 00:04:08.733
แล้วบอกว่าจะคิดค่าไฟผม

00:04:08.800 --> 00:04:10.433
เพราะฉะนั้นเราก็ต้องคิดอีกว่า

00:04:10.500 --> 00:04:12.833
เอ๊ะ แล้วทำไงให้ผมแค่กดเปิด server เนี่ย

00:04:12.900 --> 00:04:15.933
แล้วตอนที่ VM มันเปิดขึ้นมา เราสามารถเล่นได้เลย

00:04:16.500 --> 00:04:18.332
วิธีแรกที่ผมคิดง่ายๆ ก็นะ

00:04:18.399 --> 00:04:21.033
เราก็ใช้ systemd ใน Linux ในการเปิดง่ายๆ เลย

00:04:21.100 --> 00:04:22.533
แต่สิ่งที่เจออีกต่อมาคือ

00:04:22.600 --> 00:04:25.133
เนื่องจากตัว server Minecraft เองเนี่ย

00:04:25.200 --> 00:04:27.233
มันเป็น interactive application

00:04:27.300 --> 00:04:29.433
คือเราสามารถเข้าไป abuse admin command

00:04:29.500 --> 00:04:31.933
เหมือนที่ผมทำในตอนต้นเนี่ยครับได้

00:04:32.500 --> 00:04:35.933
พอผมใช้ systemd ซึ่งมันไม่มี terminal attach อยู่

00:04:36.000 --> 00:04:38.433
เออ มันก็ interact ไม่ได้

00:04:39.300 --> 00:04:42.233
แล้วพอถามว่าเราจะแก้เรื่อง interact ไม่ได้ยังไง

00:04:42.300 --> 00:04:45.433
ก็ช่วงแรกๆ ผมก็ทำแบบนี้นะครับ พอจะ…

00:04:46.300 --> 00:04:49.033
ใช้ command หน่อยผมก็ปิด server แล้วก็เปิดอีก

00:04:49.100 --> 00:04:52.933
อีก session ใน terminal แล้วก็ใส่ command ปิด server

00:04:53.000 --> 00:04:55.933
แล้วก็ค่อย systemd เปิดขึ้นมาอีกรอบ

00:04:56.000 --> 00:04:57.533
จนกระทั่งมันทนไม่ไหวครับ

00:04:58.200 --> 00:05:02.233
เพื่อนผมก็เลยเขียน web interface
แบบโง่ๆ ขึ้นมานึง

00:05:02.300 --> 00:05:08.133
เพื่อเอามาดัก stdin กับ stdout
ของตัว binary เพื่อที่จะเอามาใช้

00:05:08.200 --> 00:05:09.433
ซึ่งมันก็ดีครับ

00:05:09.500 --> 00:05:13.233
มันดีแต่สุดท้าย ผมก็ยัง
auto update จริงๆ จังๆ

00:05:13.300 --> 00:05:14.832
โดยที่ผมไม่ทำพลาดไม่ได้อยู่ดี

00:05:14.900 --> 00:05:17.433
ก็เลยสรุปว่าปัญหาทั้งหมดเนี่ยมันเกิดจาก…

00:05:18.800 --> 00:05:19.533
มันไม่ได้เกิด–

00:05:19.600 --> 00:05:22.033
แบบว่าพวกเราพยายามแก้ไขปัญหาที่ปลายเหตุ

00:05:22.100 --> 00:05:23.933
แล้วที่ผมจะบอกว่าเป็น band-aid fixes เนี่ย

00:05:24.000 --> 00:05:26.433
ไม่ว่าจะเป็นการที่ผมใช้ Ansible เข้ามาช่วย

00:05:26.500 --> 00:05:28.633
ผมใช้ systemd เข้ามาช่วย

00:05:28.700 --> 00:05:30.933
ผมใช้ทำ web interface เข้ามาช่วย

00:05:31.000 --> 00:05:33.933
แต่สุดท้ายแล้วคือความผิดมันไม่ใช่ของผม

00:05:34.000 --> 00:05:35.133
มันคือของ Mojang

00:05:35.200 --> 00:05:37.332
ที่มันไม่ยอมทำให้ server update เองได้

00:05:38.100 --> 00:05:40.933
เพราะฉะนั้นผมก็เลยจะแก้ไขปัญหา
ที่ต้นเหตุจริงๆ ครับ

00:05:41.000 --> 00:05:42.832
ด้วยการซื้อ Minecraft Realm ครับ

00:05:42.900 --> 00:05:45.332
ไม่ๆ ไม่ใช่ๆๆๆ

00:05:45.400 --> 00:05:47.332
โอเค ไม่ใช่ๆ โอเค

00:05:47.400 --> 00:05:49.933
วิธีแก้ไขปัญหาผมก็เป็น project สนุกๆ

00:05:50.000 --> 00:05:50.933
ที่ผมทำขึ้นมานะครับ

00:05:51.000 --> 00:05:55.133
ที่ผมชื่อว่า Montainer คือมาจาก
Minecraft in a container

00:05:55.200 --> 00:05:57.332
เผื่อใครมีชื่อดีกว่านี้ก็บอกผมได้นะ

00:05:58.100 --> 00:06:01.332
ก็คือผมเอา server Minecraft
ทั้ง binary แบบเนี่ยเลย

00:06:01.400 --> 00:06:02.832
ไปใส่ใน Docker container

00:06:02.900 --> 00:06:06.233
แล้วต่อมาผมก็ใส่ตัว web management API

00:06:06.300 --> 00:06:07.733
ทำให้ผม interact กับมันได้

00:06:07.800 --> 00:06:10.733
เนี่ยก็เลยมี web interface แล้วก็มี player

00:06:10.800 --> 00:06:15.533
แล้วต่อมาผมก็ map volume
ให้ตัวพวก file world file config เนี่ย

00:06:15.600 --> 00:06:16.433
ไอ้ออกมา

00:06:16.500 --> 00:06:19.133
แล้วเราก็ backup ง่ายๆ บน S3 กันได้

00:06:19.900 --> 00:06:24.433
แต่ทีนี้ก็จะกลับเข้าสู่ topic ของวันนี้แล้ว
เรื่อง web automation

00:06:24.500 --> 00:06:27.933
ผมจะทำยังไงให้ทั้ง project ของผมเนี่ย

00:06:28.000 --> 00:06:30.233
มันได้ version ใหม่สุดตลอด

00:06:30.300 --> 00:06:31.233
เพราะอย่างที่ผมบอก

00:06:31.300 --> 00:06:32.832
เค้าบังคับให้เราเล่น version ใหม่สุด

00:06:32.900 --> 00:06:34.133
แต่เค้าไม่ auto-update

00:06:34.200 --> 00:06:36.133
ผมต้องไปโหลด version ใหม่สุดทุกครั้ง

00:06:36.700 --> 00:06:40.533
ง่ายๆ ครับ ผมใช้ GitHub Actions
เข้ามาช่วยในการ run cron job

00:06:40.600 --> 00:06:41.533
ทุกๆ วัน

00:06:41.600 --> 00:06:44.033
ส่วนใหญ่เวลาที่ run ก็จะเป็นแบบช่วงเที่ยงคืน

00:06:44.100 --> 00:06:46.933
ที่ผมไม่น่าเล่นเกมอยู่แล้วเพราะผมเป็นเด็กดี

00:06:49.500 --> 00:06:52.033
ลีโอๆ เราเล่นกันถึงกี่โมงนะช่วงนั้นอะ

00:06:52.900 --> 00:06:54.832
ตีสองตีสาม

00:06:54.900 --> 00:06:57.733
โอเค ก็คือมันจะเป็น cron job ทุกวัน

00:06:57.800 --> 00:07:01.533
ที่จะเอา Selenium เนี่ยครับ
ไป fetch ในเว็บ Mojang

00:07:01.600 --> 00:07:04.133
เพื่อเอาเลข version ใหม่สุดของมันออกมา

00:07:04.200 --> 00:07:07.233
ทีนี้ถ้ามันไม่มี version ใหม่สุดเราก็ช่างมันถูกมั้ย

00:07:07.300 --> 00:07:09.133
แต่พอมันมี version ใหม่สุดเนี่ย

00:07:09.200 --> 00:07:12.533
มันก็จะไป trigger GitHub Actions
อีกตัวเหมือนกัน

00:07:12.600 --> 00:07:17.233
ที่จะเอา Selenium เข้าไปกดติ๊กถูกตรงนี้ครับ

00:07:17.300 --> 00:07:19.832
ตรงที่บอกว่าเรายอมรับ agree license เนี่ย

00:07:19.900 --> 00:07:24.233
แล้วมันก็จะมีลิงก์โผล่มา
เพื่อให้เราได้ลิงก์ดาวน์โหลด server

00:07:24.300 --> 00:07:26.933
ทีนี้ก็จะเป็น GitHub Actions ตัวอื่นๆ แล้ว

00:07:27.000 --> 00:07:30.533
ที่จะคอยไปโหลดตัว binary ตัวใหม่สุด

00:07:30.600 --> 00:07:32.633
ตัว resource ทุกอย่างใหม่สุดจากเว็บมา

00:07:32.700 --> 00:07:36.433
แล้วมา build image version ใหม่
ของตัว server Minecraft

00:07:36.500 --> 00:07:37.332
ที่ผมเขียนเองครับ

00:07:38.000 --> 00:07:40.832
ประมาณนี้

00:07:40.900 --> 00:07:42.332
โอเคนี่ก็เป็น workflow คร่าวๆ นะ

00:07:42.400 --> 00:07:44.633
ก็อย่างที่ผมบอก ก็คือขั้นแรกคือทุกวันเราไป fetch

00:07:44.700 --> 00:07:45.832
version ใหม่สุดมา

00:07:45.900 --> 00:07:48.233
ถ้าไม่มี version ใหม่สุดก็คือไม่ทำอะไร

00:07:48.300 --> 00:07:50.533
ส่วนถ้ามีเราก็สร้าง version ใหม่

00:07:50.600 --> 00:07:52.033
เราก็สร้าง image version ใหม่

00:07:52.100 --> 00:07:55.332
แล้วต่อมาผมก็ deploy ตัว server ผมเนี่ยคู่กับ

00:07:56.200 --> 00:07:59.533
ตัวอีก image นึงที่ชื่อว่า Watchtower

00:07:59.600 --> 00:08:01.933
ที่จะคอยดูว่ามี version ใหม่ออกมาหรือเปล่า

00:08:02.000 --> 00:08:04.533
เวลาที่ผม push ตัวอันใหม่ขึ้น registry

00:08:04.600 --> 00:08:07.133
ทีนี้ผมก็สามารถทุกครั้งที่เปิด server

00:08:07.200 --> 00:08:08.633
หรือทุกครั้งที่มันออก version ใหม่

00:08:08.700 --> 00:08:10.332
ผมก็สามารถมีเกมเล่นได้แล้ว

00:08:10.400 --> 00:08:13.533
โดยที่ผมไม่ต้องไป update เอง
หรือว่าทำให้มันพลาดนะครับ

00:08:13.600 --> 00:08:19.133
ทีนี้ผมก็อยากจะ demo ให้ดูนิดนึง
ถึง project ที่ผมทำขึ้นมา

00:08:19.200 --> 00:08:23.832
อันนี้คือตัว example ที่ผมทำไว้นะครับ

00:08:23.900 --> 00:08:27.133
ก็ตัวอันนี้คือตัว Docker Compose

00:08:27.200 --> 00:08:29.133
ตรงนี้มีใครไม่เคยใช้ Docker มั้ยครับ

00:08:29.900 --> 00:08:32.232
โอเคทุกคนคุ้นเคยกับ Docker กันดีละ

00:08:33.000 --> 00:08:36.033
ก็อันแรกไม่มีอะไรก็คือ ผม pull image

00:08:36.100 --> 00:08:38.232
ไอ้ตัวที่เป็น server Minecraft ผมเข้ามา

00:08:38.299 --> 00:08:39.832
ซึ่งผมใส่ tag latest ไว้เนาะ

00:08:39.900 --> 00:08:42.033
เราได้ใช้กับพวก Watchtower พวกนั้นได้

00:08:42.100 --> 00:08:43.732
เราได้เล่นใหม่ latest ตลอด

00:08:43.799 --> 00:08:47.033
แล้วต่อมาผมมีอีกอันนึงด้วยก็คือตัว MinIO

00:08:47.100 --> 00:08:48.933
ที่เป็น S3 compatible storage

00:08:49.000 --> 00:08:51.033
เพราะอย่างที่ผมบอกผมทำมันพังบ่อยมาก

00:08:51.100 --> 00:08:53.333
เพราะฉะนั้นเราต้องคอย backup เป็นช่วงๆ กันไว้

00:08:55.500 --> 00:08:58.133
นี้พอผม run ตัว server ของผม

00:09:03.900 --> 00:09:08.233
เดี๋ยวรบกวนซูมกด control บวกนะครับ
จะได้เห็นกันชัดๆ

00:09:12.300 --> 00:09:17.533
คอนโทรล บวก ครับ

00:09:18.300 --> 00:09:23.133
มันมี VS Code ตรงไหนที่ทำให้กดได้ไหม

00:09:24.200 --> 00:09:27.133
มันคือ… มันชื่ออะไร size

00:09:28.100 --> 00:09:30.833
อ๋อ zoom

00:09:30.900 --> 00:09:35.033
zoom in ครับ

00:09:36.500 --> 00:09:39.633
หรือว่าถ้าใครมีแว่นขยายตอนนี้
ก็หยิบขึ้นมาส่องจอได้นะครับ

00:09:42.700 --> 00:09:44.933
ทีนี้เรามารันอันนี้กันนะครับ

00:09:45.000 --> 00:09:48.633
เดี๋ยวผม cd examples\docker

00:10:01.800 --> 00:10:03.933
ทีนี้มันก็จะเปิด 2 image ขึ้นมานะครับ

00:10:04.000 --> 00:10:06.333
image แรกก็อย่างที่ผมบอก
คือตัว server ที่ผมทำขึ้นมา

00:10:06.400 --> 00:10:09.333
ซึ่ง map port 8000 ก็คือตัว web API ของผม

00:10:09.400 --> 00:10:11.933
แล้วก็ port ที่เราไว้เล่นกันนะครับ 19132

00:10:12.100 --> 00:10:14.633
ซึ่ง map กับ MinIO ตามนี้เลย

00:10:15.500 --> 00:10:19.733
ทีนี้ ต่อไปนี้ พอเวลาเราอยากเล่น
Minecraft กับเพื่อน

00:10:20.300 --> 00:10:22.133
เราก็สามารถเล่นได้เลย

00:10:22.200 --> 00:10:26.433
ด้วยการเข้าไปที่นี่ครับ

00:10:26.500 --> 00:10:30.933
เราก็จะมี web UI สวยๆ ที่เราสามารถใช้ในการเล่นได้เลย

00:10:31.000 --> 00:10:34.133
แล้วก็พอสมมุติผมอยากจะ
abuse admin command เหมือนเดิม

00:10:34.200 --> 00:10:36.733
ผมจะ 𝚝𝚙 @𝚎 @𝚙

00:10:36.900 --> 00:10:39.133
ผมก็สามารถเขียนในนี้ได้เลยเหมือนกัน

00:10:39.700 --> 00:10:40.733
นี่แหละครับ

00:10:40.800 --> 00:10:44.333
แล้วเมื่อสมมุติว่าก่อนที่ผมจะลองทำอะไรแปลกๆ

00:10:44.400 --> 00:10:47.233
ซึ่งอาจทำให้เพื่อนทุกคนจะรุมผมได้

00:10:47.300 --> 00:10:49.833
ผมก็สามารถกด save 1 ครั้ง

00:10:49.900 --> 00:10:52.233
เพื่อมันจะหยุด server zip ทุกอย่าง

00:10:52.300 --> 00:10:54.933
แล้วก็อัปโหลดขึ้น S3 ที่เราเขียนไว้ได้เลย

00:10:55.000 --> 00:10:56.433
ทีนี้เราก็สามารถเล่นได้

00:10:56.500 --> 00:10:57.433
ทำเรื่องแปลกๆ ได้

00:10:57.500 --> 00:10:58.733
เล่นเวอร์ชันใหม่สุดได้

00:10:58.800 --> 00:11:03.133
โดยที่ไม่ต้องแบบ frustration อีกต่อไปแล้ว

00:11:03.200 --> 00:11:06.733
อันนี้ก็เป็นโปรเจคสนุกๆ ที่ผมเอา automation

00:11:06.800 --> 00:11:08.933
ไม่ว่าจะเป็นในส่วนที่ใช้ GitHub Action

00:11:09.000 --> 00:11:12.133
ในส่วนที่ใช้ Selenium ต่างๆ เข้ามาช่วยครับ

00:11:15.100 --> 00:11:20.633
ก็ขอบคุณทุกคนมากครับที่ร่วมกันฟัง talk วันนี้ของผม

00:11:21.500 --> 00:11:25.533
ก็ขอเสียงปรบมือให้กับอุดดี้ด้วยครับ

00:11:27.400 --> 00:11:32.333
สรุปก็คือเราใช้ automation ในการเข้ามารัน

00:11:32.400 --> 00:11:36.633
server Minecraft แบบ 24/7 เลยนะครับ