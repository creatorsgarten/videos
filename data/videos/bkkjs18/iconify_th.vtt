WEBVTT

00:00:02.200 --> 00:00:03.000
สวัสดีครับ

00:00:03.000 --> 00:00:04.700
ผมชื่อไท

00:00:04.700 --> 00:00:08.400
เป็น software engineer ที่ Eventpop อยู่ใต้ Opn Pro

00:00:09.300 --> 00:00:11.200
วันนี้ก็เป็น flash talk สั้นๆ

00:00:11.600 --> 00:00:13.300
วันนี้ผมจะมาขาย

00:00:13.300 --> 00:00:14.600
library ตัวนึงที่ชื่อว่า

00:00:15.000 --> 00:00:16.600
Iconify Icon Web Components

00:00:16.600 --> 00:00:18.100
อันนี้ผมไม่ได้ทำนะ ผมไปเจอมา

00:00:18.100 --> 00:00:21.200
แล้วผมใช้มาตลอดเลย แล้วชอบมากๆ

00:00:22.300 --> 00:00:25.400
ถ้าเราย้อนกลับไปสัก 10 ปี การจะเอา icon มาใช้บนเว็บ

00:00:25.400 --> 00:00:26.600
ไม่ใช่เรื่องยาก

00:00:27.200 --> 00:00:28.900
ส่วนมากถ้าเราใช้ Bootstrap มันก็จะมี

00:00:28.900 --> 00:00:31.100
พวก icon set ต่างๆ

00:00:31.100 --> 00:00:33.900
ที่แบบ built-in มาให้ เราก็แค่เอา

00:00:33.900 --> 00:00:36.100
CSS code ไปใส่ไว้ใน head ใช่ไหมครับ

00:00:36.300 --> 00:00:38.400
แล้วก็

00:00:38.400 --> 00:00:40.400
copy ตัวอย่าง code อยากจะใช้ไอคอนไหนก็

00:00:40.400 --> 00:00:41.300
ก๊อบ code มาแปะ

00:00:41.900 --> 00:00:44.400
แค่นี้ก็ใช้ได้ ไอคอนก็โผล่ใช่ไหมครับ

00:00:45.100 --> 00:00:46.100
แล้ว

00:00:46.100 --> 00:00:48.100
พอมาดูปีนี้ครับเป็นยังไงกันบ้างนะครับ

00:00:48.100 --> 00:00:51.200
ในยุคนี้วิธีการเขียนโค้ดของเราก็ค่อยๆ

00:00:51.200 --> 00:00:53.100
เปลี่ยนไปใช่ไหมครับ

00:00:53.100 --> 00:00:54.700
เมื่อก่อนเราเขียน HTML ตรงๆ

00:00:54.700 --> 00:00:56.300
เดี๋ยวนี้เราเขียนพวกเทมเพลต

00:00:56.300 --> 00:00:58.900
หรือว่าเขียน JSX กันมากขึ้นนะ

00:00:58.900 --> 00:01:01.500
เพราะว่าใช้ React กัน

00:01:01.500 --> 00:01:04.099
หรือการใส่ CSS ให้กับหน้าเว็บนะครับ

00:01:04.099 --> 00:01:08.200
เมื่อก่อนเราก็ใส่แท็ก link stylesheet ใช่ไหม

00:01:08.600 --> 00:01:11.600
แต่เดี๋ยวนี้สิ่งที่นิยมมันก็ค่อยๆ เปลี่ยนไป

00:01:11.600 --> 00:01:13.200
กลายเป็น

00:01:13.200 --> 00:01:15.200
การ npm install file CSS เข้ามา

00:01:15.200 --> 00:01:17.900
แล้วก็ bundle พร้อมกับตัวแอปเข้าไปเลยใช่ไหมครับ

00:01:18.400 --> 00:01:20.700
แถมปัจจุบันเนี่ยพวก icon set ต่างๆ เนี่ย

00:01:20.700 --> 00:01:23.800
เริ่มมีหลากหลายให้เราเลือกใช้มากขึ้นนะครับ

00:01:24.300 --> 00:01:28.000
ตัวที่ดังที่สุดก็คงจะหนีไม่พ้น Font Awesome ใช่ไหมครับ

00:01:28.000 --> 00:01:30.300
การเอา Font Awesome มาใช้ใน project React นะ

00:01:30.300 --> 00:01:34.500
ทางเว็บ Font Awesome เนี่ยก็มีคู่มืออยู่ใน docs

00:01:34.500 --> 00:01:35.900
ให้ใช้งานอยู่แล้วนะครับ

00:01:35.900 --> 00:01:37.900
ก็ install dependency 4 ตัวนี้

00:01:38.600 --> 00:01:39.600
แล้วก็

00:01:39.600 --> 00:01:41.300
import component FontAwesomeIcon

00:01:41.300 --> 00:01:43.000
แล้วก็ import icon ที่อยากจะใช้แล้วก็เอามาใช้

00:01:43.900 --> 00:01:45.300
แต่ถ้า project เราไม่ได้ใช้ React ล่ะครับ

00:01:45.300 --> 00:01:48.000
ถ้าเราใช้ Vue

00:01:48.000 --> 00:01:52.500
doc ก็มีบอกเนาะ ไม่เป็นไร ก็ import

00:01:52.500 --> 00:01:53.800
component มา

00:01:53.800 --> 00:01:56.800
เลือกว่าจะเอาใช้ Vue 2 หรือ Vue 3 นะครับ

00:01:56.800 --> 00:01:59.800
configure ว่าให้ Vue รู้จักตัว component นี้

00:02:00.200 --> 00:02:03.700
สุดท้ายก็เอามาใช้นะครับ ก็ easy นะครับ

00:02:03.700 --> 00:02:04.600
Svelte ล่ะครับ

00:02:05.600 --> 00:02:08.100
ไม่รู้ครับ doc ไม่ได้เขียน

00:02:08.100 --> 00:02:10.500
ก็ต้องไปหาวิธีกันเอาเองนะว่าจะเอามาใช้ยังไง

00:02:10.500 --> 00:02:12.700
ซึ่งก็มีหลายท่ามาก จะใช้ SVG Core

00:02:12.700 --> 00:02:16.200
หรือจะเอาไฟล์ CSS แบบเดิมมาใช้อะไรพวกนี้

00:02:17.000 --> 00:02:19.400
ไม่มีคำตอบให้ใช่ไหมใน docs

00:02:19.800 --> 00:02:23.100
อันนี้ก็จะเป็นปัญหาของการใช้งานพวก library

00:02:23.100 --> 00:02:26.200
ที่เป็น component icon ประเภทแรกนะครับ

00:02:26.200 --> 00:02:28.300
ผมมองว่ามันมี icon component

00:02:28.300 --> 00:02:29.800
อยู่ประมาณ 4 ประเภทครับ

00:02:31.400 --> 00:02:33.900
ประเภทแรกก็คือ icon components ที่พัฒนา

00:02:33.900 --> 00:02:35.600
โดยเจ้าของ icon set นะครับ

00:02:35.900 --> 00:02:38.800
ก็จะพบว่ามีปัญหาคือมัน support framework

00:02:38.800 --> 00:02:40.200
แค่บาง framework

00:02:40.700 --> 00:02:42.500
ตัวอื่นเราก็ต้องไป-

00:02:42.500 --> 00:02:45.000
เราก็ต้องไปแบบ-

00:02:45.000 --> 00:02:47.000
ศึกษาเอาเอง ว่าจะเอามันมาใช้กับ framework

00:02:47.000 --> 00:02:47.900
ของเรายังไงเนอะ

00:02:48.300 --> 00:02:50.300
มาดู set อื่นๆ กันดีกว่า

00:02:50.300 --> 00:02:52.200
Material Design Icon นะครับ

00:02:52.200 --> 00:02:54.200
ตัวนี้ก็ทำโดย Google ใช่ไหม

00:02:54.200 --> 00:02:55.400
ถ้าเราอยากจะเอา Material Design Icon

00:02:55.400 --> 00:02:57.900
มาใช้ในแอป React ล่ะ ทำยังไงครับ

00:02:57.900 --> 00:02:59.800
ไม่ได้บอกนะ

00:02:59.800 --> 00:03:02.800
ใช่ไหม docs ไม่ได้บอกเลยว่าจะเอามาใช้ใน React ยังไงนะครับ

00:03:03.100 --> 00:03:06.300
แต่ยังดีครับที่เรามีไลบรารีที่ชื่อว่า

00:03:06.300 --> 00:03:08.300
MUI หรือ Material UI นะครับ

00:03:08.300 --> 00:03:11.700
ซึ่งก็ได้ทำ Material Icon Component

00:03:11.700 --> 00:03:13.700
ไว้ให้ใช้ใน project React ได้นะครับ

00:03:13.900 --> 00:03:16.900
ถ้าจะใช้ก็ install dependency 4 ตัวนะ

00:03:16.900 --> 00:03:20.600
แล้วก็เอาไอคอนแต่ละตัวเนี่ยมาใช้ได้เลย

00:03:20.600 --> 00:03:23.100
จะเห็นว่าแต่ละไอคอนนี้เขาก็ทำเป็น React component

00:03:23.100 --> 00:03:24.900
พร้อมใช้นะครับ ก็สะดวกครับ

00:03:25.400 --> 00:03:28.400
Vue ล่ะครับ Vue ก็ไม่มี แต่ว่ามันก็จะมี library

00:03:28.400 --> 00:03:32.900
ที่ชื่อว่า Vuetify นะครับ ก็มี

00:03:32.900 --> 00:03:34.900
font icon

00:03:34.900 --> 00:03:37.900
รวบรวม icon ของ Material Design ให้ใช้เหมือนกันนะครับ

00:03:37.900 --> 00:03:40.000
วิธีใช้ก็ไปอ่าน docs กันเอาเองนะครับ

00:03:40.000 --> 00:03:43.600
อันนี้คือผมจัดให้เป็นประเภทที่ 2 คือ icon component

00:03:43.600 --> 00:03:45.200
ที่มาพร้อมกับ UI toolkit

00:03:46.700 --> 00:03:50.400
ซึ่งเดี๋ยวก็จะเจอปัญหาครับ ถ้าเกิดบางทีเนี่ย

00:03:51.500 --> 00:03:53.500
ถ้าเกิดบางทีไอคอนที่เราอยากจะใช้

00:03:53.500 --> 00:03:54.900
มันไม่ได้อยู่ใน Material Design

00:03:54.900 --> 00:03:56.800
แต่มันไปอยู่ใน Font Awesome แล้วเราจะทำยังไง

00:03:56.800 --> 00:03:59.000
เราต้องลง dependency 8 ตัวแบบนี้หรือเปล่า

00:04:00.600 --> 00:04:02.600
แล้วพอเอาไอคอนจาก 2 set มาใช้เนี่ย

00:04:02.600 --> 00:04:05.100
ก็จะเห็นว่า syntax มันแบบโห คนละเรื่องกันอีก

00:04:05.100 --> 00:04:06.400
อันหนึ่งเป็น component

00:04:06.400 --> 00:04:08.500
อันหนึ่งเป็น component กลาง

00:04:08.500 --> 00:04:09.600
แล้วเอาไอคอนมาใส่

00:04:09.600 --> 00:04:12.200
อีกอันหนึ่งมาเป็น React component สำเร็จรูปเลย

00:04:12.200 --> 00:04:13.700
แถมฟีเจอร์ก็ไม่ตรงกันอีก

00:04:13.700 --> 00:04:16.100
อย่างของ MUI เนี่ย กำหนดสี

00:04:16.100 --> 00:04:17.200
โดยอิงจากธีมได้เลย

00:04:17.200 --> 00:04:18.600
แต่ของ Font Awesome หรือของเจ้าอื่น

00:04:18.600 --> 00:04:20.899
อาจจะไม่มีฟีเจอร์แบบนี้ใช่ไหมครับ

00:04:21.300 --> 00:04:23.500
ก็เป็นปัญหาของแบบที่ 2 ครับ

00:04:24.300 --> 00:04:25.400
จริงๆ ปัญหาก็มีอีกเยอะนะ

00:04:25.400 --> 00:04:26.600
แต่เราไปต่อกันดีกว่า

00:04:27.000 --> 00:04:29.500
ต่อมาผมก็เจอไลบรารีที่ชื่อ React Icons ครับ

00:04:29.500 --> 00:04:31.000
ซึ่งดีมากเลยครับ

00:04:31.000 --> 00:04:33.200
มันรวบรวม icon set ดังๆ

00:04:33.200 --> 00:04:36.000
แล้วก็แพ็กเกจไว้เป็น npm ตัวเดียวนะครับ

00:04:36.000 --> 00:04:38.000
install ใช้ใน React ได้เลย

00:04:38.000 --> 00:04:40.800
ก็คือ import มาแล้วก็ใช้เป็น component แบบนี้นะครับ

00:04:40.800 --> 00:04:45.100
อันนี้ผมเรียกเป็นประเภทที่ 3 คือ

00:04:45.100 --> 00:04:47.100
เป็นไลบรารีรวมไอคอนเซ็ตดังๆ

00:04:47.100 --> 00:04:49.100
ที่เอาไว้ใช้กับเฟรมเวิร์คแต่ละตัวนะครับ

00:04:49.100 --> 00:04:53.500
ซึ่งของ Vue ของ Svelte ของ Solid ของ Angular

00:04:53.500 --> 00:04:54.600
พวกนี้มีให้ใช้หมดเลย

00:04:54.600 --> 00:04:57.500
ก็พิมพ์ชื่อเฟรมเวิร์คแล้วก็ตามด้วย icons นะครับ

00:04:58.800 --> 00:05:01.800
แต่ปัญหาก็ยังมีครับ คือ library แต่ละตัว

00:05:01.800 --> 00:05:03.800
ก็ maintain คนละคนกันใช่ไหม

00:05:03.800 --> 00:05:06.600
จำนวน icon ก็ไม่เท่ากัน บางอันเนี่ยแบบโห มีเยอะ

00:05:06.600 --> 00:05:10.300
บางอันนี้เยอะมาก แต่บางอันก็อาจจะมีให้เลือกแค่นิดเดียว

00:05:10.300 --> 00:05:12.000
แล้วเวลาเราอยากจะใช้เนี่ย

00:05:12.000 --> 00:05:14.600
ก็ต้องขึ้นอยู่กับ library ที่เราเลือกใช้เนาะ

00:05:14.600 --> 00:05:17.100
หรือบางทีเราอยากจะใช้ไอคอนที่มันไม่ได้อยู่ใน

00:05:17.100 --> 00:05:21.400
ไอคอนเซ็ตอะไรเลย เป็นไอคอนที่เราลากวาดใน Figma เนี่ย

00:05:22.200 --> 00:05:25.200
ทำยังไงอ่ะ อันนี้ก็บางตัวก็ไม่มีคำตอบให้นะครับ

00:05:25.200 --> 00:05:27.200
เราก็ต้องไป implement ไอคอนเอาเอง

00:05:27.200 --> 00:05:29.200
แบบ export รูปมาสร้าง tag SVG

00:05:29.200 --> 00:05:30.800
ใส่อะไรเองหมดเลย

00:05:31.200 --> 00:05:32.700
อ่า ลำบากครับ

00:05:32.700 --> 00:05:33.900
ที่ผ่านมาเนี่ย

00:05:33.900 --> 00:05:36.200
การเอาไอคอนมาใส่ในเว็บเลยเป็นเรื่องนึงที่

00:05:36.200 --> 00:05:38.400
เวลาผมเจอ ผมรู้สึกว่าแบบ โอ๊ย เหนื่อยจังเลย

00:05:38.400 --> 00:05:40.100
ขี้เกียจทำจัง ยุ่งยากจังเลย

00:05:40.100 --> 00:05:43.800
จนกระทั่งผมมาเจอโปรเจคหนึ่งที่ชื่อว่า iconify.design นะครับ

00:05:44.400 --> 00:05:47.400
ผมจัดให้อยู่ในประเภทที่ 4 ครับ คือ icon library

00:05:47.400 --> 00:05:49.000
ที่ไม่อิงกับ icon set ไหนเลย

00:05:49.000 --> 00:05:50.900
แล้วก็ไม่อิงกับ framework อะไรเลยด้วย

00:05:51.200 --> 00:05:53.900
รู้สึกว่ารอบนี้นะครับผมกับลิฟฟี่ก็จะ

00:05:53.900 --> 00:05:56.600
หัวข้อพูดก็จะมีความคล้ายๆ กัน

00:05:56.600 --> 00:06:00.300
คือเราเริ่มเจอ solution ที่มัน cross library

00:06:00.300 --> 00:06:02.100
cross framework นะครับ

00:06:03.000 --> 00:06:05.500
อันนี้คือ Iconify นะครับ เป็นโปรเจคที่รวบรวม

00:06:05.500 --> 00:06:07.300
icon กว่า 150,000 ไอคอน

00:06:07.300 --> 00:06:08.700
รวมมาให้ใช้ในที่เดียวกันนะครับ

00:06:08.900 --> 00:06:11.400
ก็ไปดูรายการไอคอนต่างๆ ได้ก็จะโคตรเยอะนะครับ

00:06:12.800 --> 00:06:14.900
แล้วไลบรารีที่ผม

00:06:14.900 --> 00:06:16.400
จะมาขายในวันนี้ครับ ชื่อว่า

00:06:16.400 --> 00:06:19.100
Iconify Icon Web Component นะครับ

00:06:19.700 --> 00:06:21.200
เนื่องจากมันเป็น web component เนี่ย

00:06:21.200 --> 00:06:23.100
มันไม่อิงกับ framework อะไรเลยครับ

00:06:23.500 --> 00:06:25.500
ต่อให้เราเขียนเว็บแบบ HTML ธรรมดาเนี่ย

00:06:25.500 --> 00:06:27.200
ไม่ใช้ framework อะไรเลยนะ

00:06:27.200 --> 00:06:29.500
ก็สามารถเอาไลบรารีนี้มาใช้ได้ครับ

00:06:29.500 --> 00:06:31.500
เริ่มจากการใส่ script tag เพื่อใส่ script

00:06:31.500 --> 00:06:33.100
ของ web component ตัวนี้เข้าไป

00:06:33.900 --> 00:06:35.900
แล้วก็ดึงมาใช้ครับ ก็จะเห็นว่าเป็น

00:06:35.900 --> 00:06:37.900
custom element ใน HTML นะครับ

00:06:37.900 --> 00:06:39.000
ก็จะได้ icon แบบนี้

00:06:39.600 --> 00:06:42.100
เรียบร้อย - Vue ล่ะครับ ถ้าอยากใช้ใน project Vue

00:06:42.100 --> 00:06:44.100
ก็ install dependency 1 ตัวนะครับ

00:06:44.100 --> 00:06:46.100
แล้วก็ import เอามาใช้นะครับ

00:06:46.100 --> 00:06:48.600
Svelte ล่ะครับ Svelte ก็เหมือนกันครับ

00:06:48.600 --> 00:06:51.400
ติดตั้งแล้วก็เอามาใช้ syntax เหมือนกันเป๊ะเลย

00:06:52.100 --> 00:06:53.100
React ล่ะครับ

00:06:53.100 --> 00:06:55.000
ก็เหมือนกันครับ import

00:06:55.000 --> 00:06:57.200
แล้วก็เอามาใช้ แต่ว่า library นี้นะครับ-

00:06:57.200 --> 00:06:58.500
React มันจะค่อนข้างเรื่องมาก

00:06:58.500 --> 00:07:00.500
เพราะว่าโดย default ของ React เนี่ย

00:07:00.500 --> 00:07:02.900
มันไม่รู้จักพวก custom element ใน HTML

00:07:03.400 --> 00:07:05.900
ปกติถ้าใช้ React กับ TypeScript นะ

00:07:05.900 --> 00:07:07.700
มันจะรู้จักแค่ React component กันเอง

00:07:07.700 --> 00:07:10.200
ถ้าเราไปใช้ custom element TypeScript มันจะบ่น

00:07:11.600 --> 00:07:14.200
คือถ้าเอามาใช้ตรงๆ มันก็จะขึ้น type error นะครับ

00:07:14.500 --> 00:07:18.100
มีหนำซ้ำไม่พอนะครับ แถมใน React เนี่ย

00:07:18.100 --> 00:07:20.100
support web component ของมันโคตรแปลก

00:07:21.100 --> 00:07:23.100
คือผมใส่ className เพื่อเปลี่ยนสีของไอคอน

00:07:23.100 --> 00:07:25.000
ให้เป็นสีเขียว แต่ใช้ไม่ได้

00:07:25.000 --> 00:07:28.500
ใช้ไม่ได้ทำไม เพราะว่าเวลาเรา render

00:07:28.500 --> 00:07:30.400
element อื่นๆ ปกติ

00:07:30.400 --> 00:07:32.300
React มันจะเปลี่ยน className เป็น class ให้

00:07:32.300 --> 00:07:34.800
ยกเว้นพวก web components มันไม่เปลี่ยนให้ไม่รู้ทำไม

00:07:35.100 --> 00:07:36.500
ครับ อ่า

00:07:36.500 --> 00:07:37.800
ก็

00:07:37.800 --> 00:07:43.300
ก็จะยุ่งยากนิดนึง ซึ่งทีม Iconify ก็ทำ wrapper มาให้

00:07:43.300 --> 00:07:45.800
ชื่อว่า @iconify-icon/react

00:07:46.200 --> 00:07:49.900
ก็ install ตัวนี้แทนนะครับ แล้วก็เอามาใช้นะครับ

00:07:49.900 --> 00:07:53.000
ก็ import แบบนี้ แล้วก็ใช้แบบข้างล่างนะครับ

00:07:53.800 --> 00:07:55.400
เบื้องหลังเนี่ย ตัว React component ตัวนี้

00:07:55.400 --> 00:07:58.000
มันจะ render เป็น web component อีกทีนึง

00:07:58.000 --> 00:07:59.700
ฉะนั้น API ต่างๆ ก็จะเหมือนกันหมด

00:07:59.700 --> 00:08:02.400
แถมมี TypeScript มาให้ด้วยนะครับ

00:08:03.500 --> 00:08:05.200
คราวนี้เนี่ย

00:08:05.200 --> 00:08:07.800
ตัวไลบรารี่เนี้ยมันขนาดแค่ 8.2 กิโลไบต์

00:08:08.500 --> 00:08:10.500
แต่ว่ามันมีไอคอนให้เลือกตั้ง 150,000 ไอคอน

00:08:10.500 --> 00:08:13.700
ถามว่ารูปไอคอนต่างๆ มันมาจากไหนครับ

00:08:14.400 --> 00:08:16.400
ดูตัวอย่างอันนี้ครับผม ลอง inspect ดู

00:08:16.400 --> 00:08:19.400
ก็พบว่าเวลาเรา render ไอคอนตัวนี้

00:08:19.400 --> 00:08:23.000
มันมีการยิง request ไปที่ API ของ iconify.design นะครับ

00:08:23.000 --> 00:08:25.200
เพื่อขอข้อมูลของไอคอนต่างๆ ที่ใช้

00:08:25.500 --> 00:08:27.900
แล้วมันก็จะ return เป็น JSON ออกมาแบบนี้นะครับ

00:08:29.000 --> 00:08:33.200
ซึ่งบางคนก็อาจจะมี concern ว่าไม่อยากให้แอป

00:08:33.200 --> 00:08:34.700
มีการยิง API ออกไปข้างนอก

00:08:34.700 --> 00:08:36.799
อยากให้ทุกอย่างมันถูก bundle หมดเลย

00:08:37.200 --> 00:08:38.100
ทำได้ไหม

00:08:38.100 --> 00:08:40.600
ก็ทำได้นะครับ เรากลับมาที่โค้ดเดิมนะ

00:08:40.600 --> 00:08:43.600
จะเห็นว่าชื่อไอคอนประกอบไปด้วยสองส่วนนะครับ

00:08:43.600 --> 00:08:47.100
ก็คืออันแรกเป็นชื่อของ icon set นะครับ

00:08:47.100 --> 00:08:49.800
icon set ทั้งหมดใน Iconify เนี่ย

00:08:49.800 --> 00:08:51.800
เขาอัปโหลดขึ้น npm ไปด้วยนะครับ

00:08:51.800 --> 00:08:54.200
ฉะนั้นก็เราสามารถ install เข้ามาได้

00:08:54.200 --> 00:08:58.000
หลังจากนั้นชื่อไอคอนเนี่ย เราก็ import เข้ามานะครับ

00:08:58.000 --> 00:09:00.100
อันนี้ก็คือ import ไอคอนที่ต้องการใช้

00:09:00.100 --> 00:09:02.700
แล้วก็แทนที่จะกำหนดชื่อไอคอนเป็น string

00:09:02.700 --> 00:09:06.800
ก็เอา object ที่ import เนี่ย ใส่เข้าไปแทนนะครับ

00:09:07.500 --> 00:09:10.600
สิ่งที่เกิดขึ้นคือตอนที่มัน render เป็น HTML นะ

00:09:10.600 --> 00:09:15.200
เดิมที่ตรง attribute icon เป็นชื่อ icon นะ

00:09:15.200 --> 00:09:18.700
มันเอาข้อมูลของ icon ยัดเข้าไปใน attribute icon เลยครับ

00:09:18.700 --> 00:09:21.700
ทำให้ตอนที่ render เนี่ย

00:09:21.700 --> 00:09:23.600
ตัว web component นี้มันมีข้อมูลพอแล้ว

00:09:23.600 --> 00:09:26.200
ก็ไม่ต้องไปเรียก API อะไรเพิ่มนะครับ

00:09:26.200 --> 00:09:29.200
แล้วก็ถ้าเราอยากจะ render icon ที่ไม่ได้อยู่ใน set พวกนี้ล่ะ

00:09:29.200 --> 00:09:31.400
อย่างพวก custom icon ต่างๆ

00:09:31.400 --> 00:09:33.500
ก็มาดู syntax เมื่อกี้กันนะครับ

00:09:33.500 --> 00:09:36.700
จะเห็นว่า icon definition ของมันคือ

00:09:36.700 --> 00:09:38.500
มี 3 key

00:09:38.500 --> 00:09:40.500
คือ มี width มี height มี body

00:09:40.500 --> 00:09:43.600
ฉะนั้นเราสามารถสร้าง icon ของตัวเอง

00:09:43.600 --> 00:09:46.800
แล้วก็ทำให้มันอยู่ใน format แบบนี้ครับ

00:09:47.200 --> 00:09:50.200
เสร็จแล้วก็เอามาใช้ได้เลยประมาณนี้ครับ

00:09:50.900 --> 00:09:53.400
ฉะนั้นเนี่ยตั้งแต่ที่ผมใช้ Iconify

00:09:53.400 --> 00:09:56.400
ผมเลยรู้สึกว่าปัญหาของการนำไอคอนมาใช้ในเว็บ

00:09:56.400 --> 00:09:58.600
ส่วนมากเนี่ย

00:09:58.600 --> 00:10:00.400
เหลือน้อยมากและแทบจะไม่ค่อยมีแล้ว

00:10:01.600 --> 00:10:03.700
จริงๆ ยังมีรายละเอียดปลีกย่อยอื่นๆ อีกมากนะครับ

00:10:03.700 --> 00:10:07.100
เช่นวิธีการเอา web components ไปใช้กับ framework

00:10:07.100 --> 00:10:09.700
ที่เป็นพวก server-side rendering เช่นพวก Next.js

00:10:10.100 --> 00:10:12.500
แล้วจะทำยังไงให้ตอน hydrate

00:10:12.500 --> 00:10:15.100
มันแสดงผลไอคอนได้อย่างรวดเร็วอะไรพวกนี้

00:10:15.400 --> 00:10:17.900
ผมไม่ได้เตรียมไว้ใน session วันนี้ครับ

00:10:17.900 --> 00:10:20.300
แต่ว่าผมเขียนเป็นโน้ตไว้ในเว็บของตัวเองแล้วครับ

00:10:20.900 --> 00:10:23.400
ก็สามารถไปอ่านได้ที่ลิงก์นี้นะครับ

00:10:23.400 --> 00:10:24.200
ก็

00:10:24.200 --> 00:10:26.400
session วันนี้ของผมมีแค่นี้ครับ ขอบคุณครับ
