WEBVTT

00:00:00.100 --> 00:00:03.200
เอ่อ สวัสดีค่ะ เจอกันอีกครั้งนะคะ แก้วนะคะ

00:00:03.200 --> 00:00:09.800
ก็เดี๋ยวรับหน้าที่เป็น Moderator ให้กับสองคนนี้นะคะ ก็คือ เอ่อ

00:00:09.800 --> 00:00:15.600
หัวข้อนี้คือหัวข้อ Decoding Data
Engineering Myth versus Reality and

00:00:16.200 --> 00:00:20.500
What are Here to Stay.
คือความเชื่อกับความจริงเนาะ

00:00:20.500 --> 00:00:26.100
ก็ก่อนอื่นให้เราได้รับเกียรติจากคุณตั้วและคุณกานต์เนาะ

00:00:26.100 --> 00:00:31.100
ก็เดี๋ยวให้คุณตั้วกับคุณกานต์เนี่ย
แนะนำตัวให้ทุกคนรู้จักนิดนึงก่อนแล้วกันค่ะ

00:00:31.100 --> 00:00:31.800
ฉันก่อนแล้วกันนะ

00:00:32.500 --> 00:00:33.000
โอเคครับ

00:00:34.300 --> 00:00:39.500
ผมดิเรก ยิ้มระบายนะฮะ เรียกว่าตั้วนะครับ
ก็อยู่ดูแลเรื่องของตัว Infra System

00:00:40.300 --> 00:00:46.400
จนมารู้ตัวว่าตลอดเวลาที่ทำมาก็คือมีเกี่ยวข้องกับพวกลักษณะของพวก Data

00:00:46.400 --> 00:00:49.000
Platform แล้วก็ลักษณะของการจัดการ
Data มาโดยตลอด

00:00:49.700 --> 00:00:53.300
แต่ทั้งๆ ที่เติบโตมาทางสาย Infra ครับ ทั้ง
System Network Security อะไรประมาณนี้

00:00:53.800 --> 00:00:56.300
แล้วตอนนี้ก็มาดูแลเทคโนโลยีที่เป็น Cloud

00:00:56.300 --> 00:01:00.300
มันเลยทำให้ความคิดนั้นเร็วขึ้น
เพราะว่า Cloud เอง

00:01:00.300 --> 00:01:04.400
การดีไซน์หรืออะไรพวกนี้ครับมันสะดวก
เราก็จะไปที่ประเด็นของพวก Data และ

00:01:04.400 --> 00:01:10.100
Data Platform ได้สะดวกขึ้น
อันนี้คือบอกเล่าการเติบโตตัวเองสั้นๆ

00:01:10.100 --> 00:01:16.300
ประมาณนี้ก่อน แล้วก็ตอนนี้คือดูแลตัว Cloud Business
ของ NTech ประมาณนี้ครับ เชิญคุณกานต์ค่ะ

00:01:16.300 --> 00:01:22.400
สวัสดีค่ะ กานต์นะคะ จริงๆ
คือพื้น Background จากคล้ายๆ คุณตั้วคือเป็นคน System

00:01:22.400 --> 00:01:26.100
Infra มาก่อนแล้วกัน
แล้วก็โชคดีได้มาจับงาน Data

00:01:26.100 --> 00:01:32.700
ทุกภาคส่วนเลยก็เลยเข้าใจว่าจริงๆ
แล้วการที่เราจะทำงาน Data ให้มันรอดเนี่ย

00:01:32.700 --> 00:01:37.800
เราต้องมีความเข้าใจกายหยาบของมันคือด้าน
Infrastructure ด้วยเช่นกัน

00:01:37.800 --> 00:01:40.400
ก็ตอนนี้ก็ปัจจุบันอยู่ NTech ค่ะ เป็น

00:01:40.400 --> 00:01:42.700
Cloud Optimization and
Optimization Consultant

00:01:42.700 --> 00:01:47.200
ค่ะ
ก็จะมาดูในเรื่องของการที่เราทำยังไงที่เราลด Operation

00:01:47.200 --> 00:01:50.100
Cost แล้วก็ Optimize Cost
ของทุกสิ่งทุกอย่างที่เราใช้

00:01:50.100 --> 00:01:56.700
เพราะว่ามันไม่จบแค่ว่าคอสถูก
แต่ว่ามันต้องดูต่อระยะยาวด้วยว่าในการ Operate ระยะ

00:01:56.700 --> 00:01:59.000
Long term เนี่ยมันจะเป็นยังไงกันบ้าง ต้องใช้

00:01:59.000 --> 00:02:02.700
Resource
พุ่งขึ้นหรือเปล่าหรืออะไรประมาณนั้นค่ะ ดู Long term ด้วยอีกทีนึง

00:02:03.800 --> 00:02:06.500
ประมาณนี้ โอเค

00:02:06.500 --> 00:02:10.199
จิ้มเข้าไปเลย โอเค ได้ยินอยู่เนาะ โอเค

00:02:10.199 --> 00:02:17.600
โอเค โอเค โอเค ก็ อ่ะ จริงๆ
สองคนทั้งสองท่านน่ะค่ะ ก็คือไม่ได้เป็น

00:02:17.600 --> 00:02:23.400
ไม่ได้มีตำแหน่งที่เป็นชื่อ Data อยู่ข้างหน้าเนาะ
เป็นจริงๆ คุณตั้วเป็น Cloud Director

00:02:23.900 --> 00:02:26.800
คุณกานต์เป็น Cloud Consultant
เนาะ ณ ปัจจุบันนี้

00:02:26.800 --> 00:02:32.900
แต่ทั้งสองคนเนี่ยก็มีประสบการณ์ในการทำ Data
Platform มาแล้วกันเนาะ อืม

00:02:33.500 --> 00:02:44.000
เอ่อ
ทีนี้เรามาพูดกันถึงหัวข้อนี้กันนิดนึงว่าทำไมเราถึงต้องมาคุยกันเรื่องความเชื่อและความจริงในงาน

00:02:44.000 --> 00:02:49.500
Data Engineer กันนะ
คือคุณสองคนไปเจออะไรกันมาเหรอคะ

00:02:49.500 --> 00:02:55.300
โอเค
งั้นเดี๋ยวผมขออนุญาตเล่าให้เห็นก่อนว่างาน Data Engineer

00:02:55.300 --> 00:03:00.800
ครับมีมาตั้งแต่อย่างน้อยเท่าที่ผมทำงานอยู่ไซต์นึง เดี๋ยวจะขอแชร์ เอ่อ

00:03:00.800 --> 00:03:05.500
เป็นการทำ Transform ใหญ่มากของระบบไฟแนนซ์ของไทยประมาณ

00:03:05.500 --> 00:03:10.300
20 ปีก่อน
ถามว่าแล้วดิเรกนี่ทำงานมานานไหม ใช่ อายุเยอะแล้วครับ

00:03:10.900 --> 00:03:15.900
เอ่อ
ในภาพเนี่ยตอนนั้นที่ทำอะครับเป็น Network System

00:03:15.900 --> 00:03:21.100
แล้วก็ในลักษณะของ Infra Architect Design ทั่วไปเลย
มองง่ายๆ ผมเป็น IT Architect มองแบบนี้

00:03:21.900 --> 00:03:27.500
งานตอนนั้นเองเนี่ยมีความรู้สึกว่าเรากำลังทำอะไรอยู่นะ ลูกค้าอยาก Transform

00:03:28.200 --> 00:03:30.700
ทุกอย่างเริ่มต้นที่ตัว Data ทั้งหมดเลยครับ

00:03:30.700 --> 00:03:33.000
เพราะว่าข้อมูลของลูกค้า พูดง่ายๆ

00:03:33.000 --> 00:03:38.200
คือของประชาชนน่ะที่ลูกค้าท่านนี้หรือองค์กรนี้ดูแลเนี่ย สำคัญที่สุดห้ามหาย

00:03:39.600 --> 00:03:43.800
ตอนที่ไปทำเราเข้าไปในฐานะที่เป็น
Infra Architect

00:03:44.500 --> 00:03:49.700
ไปดูว่าอะไรมันเชื่อมโยงกันได้
แค่นี้ก็เกี่ยวข้องกับ Data Injection ในยุคนั้นแล้ว

00:03:50.200 --> 00:03:56.000
แต่เราไม่เข้าใจ
ตอนนั้นก็มองแค่ว่าไปดึงข้อมูลมาจากแพลตฟอร์มต่างๆ Server, Database

00:03:56.000 --> 00:04:01.600
ดู Utilization เพราะว่าเคยดึงมาแล้วเขาดาวน์
เรานี่แหละเป็นคนทำให้เกิด Incident

00:04:01.600 --> 00:04:08.000
นะครับตอนทำไม่เป็นไร
ตอนเราจากไปมีปัญหาทุกทีเลย แต่ตอนนั้นคืออยู่ประมาณ

00:04:08.000 --> 00:04:10.300
7 ปี ไม่ได้ไปไหนหรอกครับ
เขาก็เรียกไปเคลียร์เนี่ยแหละ

00:04:11.100 --> 00:04:16.000
จัดถัดมาเราก็จะต้องไปคุยกับ Data Owner
เพราะจะต้องทำ Data Cut

00:04:16.500 --> 00:04:19.600
จริงๆ ตอนนั้นก็ไม่เข้าใจว่ามันคือ
Data Architect

00:04:19.600 --> 00:04:28.200
ต้องดูว่าระบบเอเนี่ยจะต้องทำ Data Cut เนี่ย
6 โมงเช้าก่อนเปิดร้านนะ 6 โมง 1 นาทีเนี่ยไม่ได้

00:04:28.200 --> 00:04:32.200
แปลว่าจะต้องทำ Data Backup
เนี่ยให้แม่นจบที่ 6 โมงเช้า

00:04:32.800 --> 00:04:36.900
2 System B จะต้องไปคัท Next day

00:04:36.900 --> 00:04:40.200
System A เนี่ยเอา 6 โมงเช้าของวันที่ 1 มองแบบนี้แล้วกัน

00:04:40.200 --> 00:04:43.300
แต่คือ System B เนี่ยต้องไปเอา Next day คือวันที่ 2 ตี 4

00:04:43.900 --> 00:04:48.100
System C เนี่ยจะต้องรอจนมัน End เท่านั้น

00:04:48.100 --> 00:04:52.000
ดังนั้นทุกอย่างผูกกันเนี่ยเลยรู้ว่าต้องตัดสิ้นเดือน

00:04:52.000 --> 00:04:58.500
อะ แล้วเดือนนั้นกุมภาไหม
เดือนนั้นมีนาคมหรือยนต์ต้องดูให้ดี ตัดให้ตรง เราก็จะหายเห็น

00:04:58.500 --> 00:05:04.900
Data Dependency ก็เพิ่งเข้าใจว่าอันนั้นน่ะคือการมอง
Data Dependency การเตรียมทำ Data Pipeline

00:05:04.900 --> 00:05:16.700
ซึ่งตอนนั้นไม่มีความรู้นั้นเลย แต่ทำอยู่กับมือ พังไหมครับไม่ต้องห่วง ไอ้คนนี้แหละครับทำพังตอนคัทครั้งแรกครับ เจ๊งเพราะว่าผมเองเนี่ยชะล่าใจ มันมีทั้งหมด

00:05:16.700 --> 00:05:19.600
dependency
เล็กสุดเนี่ยประมาณ 4 system

00:05:19.600 --> 00:05:27.100
1 2 3 เมื่อกี้ที่บอกเล่าคร่าวๆ อ่ะเรียบร้อยแล้ว system ที่ 4 ไม่มี date ชัดเจนเพราะว่า Data

00:05:27.100 --> 00:05:27.500
Owner

00:05:28.200 --> 00:05:31.000
เหลือแต่ The God
ก็คือไม่เหลือใครแล้ว ไม่มีใครทำ

00:05:31.000 --> 00:05:36.200
Document
เลยทำไงฮะ ไปนั่งเฝ้าหน้าบาร์ครับ ไปอยู่กับ User

00:05:36.700 --> 00:05:53.700
พี่จะปิดบานกี่โมง โอ้ยพี่ยังไม่เสร็จเลยลูก 3 ทุ่มแล้วนะพี่ครับ ตอนนั้นคือเกี่ยวข้องกับระบบเช็ค แปลว่าเช็คเนี่ยปิดรับเช็คของทุกแบงค์เนี่ยประมาณตอนนั้นนะครับ 18:00 น. 18:00 น. บ่าย 3 เนี่ยปิดรับประชาชน 18:00 น. ปิดรับ

00:05:53.700 --> 00:05:54.200
Corporate

00:05:54.800 --> 00:05:59.200
แล้วยังไง อ๋อเดี๋ยวพี่จะเริ่มรันตี 2 พี่เช็คที่รันตี 2 เหรอ

00:06:00.100 --> 00:06:41.900
ครับ
รันตี 2 เช็คที่เนี่ยรันตี 2 เนี่ยนับเป็นวันไหน วันนั้นคือคืนข้ามเดือน เพราะผมต้องทำตาม system C ที่บอกว่าเอ็นมันเอ็นเท่านั้น พอเลยเที่ยงคืนมันก็จะไม่เหมือนเอ็นแล้วสินะ มันจะเป็นนิว มันส์แล้ว ผมก็แบบชะล่าใจ พี่งั้นพี่นับวันไหน เอ้ยนับ นับเมื่อวานก็คือแปลว่านับมันเอ็นอยู่ รันตี 2 เสร็จ 6:00 น. เช็คหมื่นใบรันอยู่ 4 ร้านก็คือ 4 สาขา 4 4 ตึกอะนะครับ รันเสร็จปึ๊บ ตอนนั้นยังใช้วินโดว์ XP อยู่เลย รันเสร็จปึ๊บครับ คิดดูเป็นวินโดว์ XP จริงๆ เออพอรันเสร็จปุ๊บ เอาข้อมูลกลับมาทำ

00:06:41.900 --> 00:06:42.800
Reconciliation

00:06:44.200 --> 00:06:50.900
เจ๊งครับ เพราะว่า system C บอกว่าไม่ใช่มันเอ็นแล้ว ไอ้ดิเรกคนนี้ละครับโกงไปคุยกับ Data Owner

00:06:50.900 --> 00:06:57.900
ทั้ง 4 บอกว่าผมขอ change date
ได้ไหม ก็คือขอทำ ทำเหมือนแบบทำ virtual

00:06:57.900 --> 00:06:59.800
date อ่ะครับ มันเลยมีไอเดีย change

00:06:59.800 --> 00:07:08.300
date ณ วันนั้น ตอนนั้นลอง change date
ดูแล้วรันได้ ดิเรกชูมือได้เลยวันที่ทำว่าได้เนี่ยทำ Data

00:07:08.300 --> 00:07:19.900
dependency ทำ Data Pipeline
เหมือนเอเข้าบีเข้าซี คลีนคลีนซิ่งเรียบร้อยเข้าแพลตฟอร์ม วันนั้นไม่เกิดเรื่องครับ ผ่านไปทั้งหมด 10 เดือนก็คือ

00:07:19.900 --> 00:07:20.500
year end

00:07:22.400 --> 00:07:39.000
ตอนแรกคือวันนั้นก็ดีใจเนาะ ไอ้วัน 10 วินาทีที่ศูนย์ของ 10 เดือนน่ะก็คือยังไม่ได้ คือวันที่คัทเรียบร้อยฮะ พอผ่านไป 10 เดือนมีข้อมูลนึงหาย ข้อมูลที่ system C ต้องการแต่ผมไปเปลี่ยนเทรดไปเชนเดชเลยทำให้เกิด

00:07:39.000 --> 00:07:44.200
impact ของ year end
อันนั้นก็เลยเป็นที่มาว่าผมไม่มีความรู้ data

00:07:44.200 --> 00:07:52.400
end
มากพอในห้วงเวลานั้น ละเลยในความสำคัญของ date ที่เป็น time stamp ของ data ทุก record

00:07:53.500 --> 00:07:59.700
แล้วคิดว่ามันได้ เพราะวันนั้นที่ทำอะสมมุติว่าเป็นเดือน 2 แล้วกัน มันได้อะ มันจบเดือน 3

00:07:59.700 --> 00:08:02.800
reconciliation user มารีวิวทุกอย่างจบ audit

00:08:02.800 --> 00:08:06.100
ตรวจสอบเรียบร้อยครบสมบูรณ์ data owner sign

00:08:06.100 --> 00:08:12.200
off แต่อีก 10 เดือนถัดมาก็คือประมาณพฤศจิกายน ธันวาคม
ทุกคนก็จะกำลังพักร้อนพักผ่อนเนอะ

00:08:12.200 --> 00:08:18.300
ช่วงกำลังไปเที่ยวเลย
ดีเลทนี่แหละครับทำให้ทุกคนไม่ได้พักเลยฮะ แน่นอนมันมีทีมของผมแหละ

00:08:18.300 --> 00:08:24.500
แต่ผมเป็นคนตัดสินใจว่าให้ใช้วิธีนี้
นั่นเลยเป็นที่มาว่าความรู้ system network

00:08:24.500 --> 00:08:26.800
security architecture เนี่ยมีความจำเป็น

00:08:27.700 --> 00:08:31.800
แต่ทุกงานที่ผมแตะเกี่ยวข้องกับตัวดาต้าทั้งสิ้นเลย

00:08:31.800 --> 00:08:38.200
นั่นเลยเป็นที่มาว่าทำไมผมถึงอยากจะมาพูดถึงความเชื่อที่ว่า เฮ้ย ผมไม่ได้ทำ Data Platform

00:08:38.200 --> 00:08:42.600
ผมไม่รู้ ไม่เกี่ยว ไม่อยากยุ่งกับดาต้าเลย
แต่ทุกวินาทีคือแตะกันตรงนั้น

00:08:42.600 --> 00:08:45.900
สรุปง่ายๆ เลยก็คือตอนนั้นที่พี่ทำอยู่อ่ะ

00:08:46.600 --> 00:08:47.400
พี่ไม่รู้เรื่องอะไรเลย

00:08:47.400 --> 00:08:48.400
ไม่รู้เรื่องอะไรเลย

00:08:48.400 --> 00:08:51.400
ใช่ แล้วก็คิดว่าตัวเองรู้ทุกอย่างแล้ว

00:08:51.400 --> 00:08:51.900
ใช่

00:08:51.900 --> 00:08:57.600
จนกระทั่งมันเกิด impact กับลูกค้า
แล้วตอนนั้น Effect เป็น consultant เนาะ

00:08:57.600 --> 00:08:57.800
ใช่ครับ

00:08:57.800 --> 00:09:00.100
แล้วพี่ก็ทำให้คนอื่นไม่ได้นอน

00:09:00.100 --> 00:09:00.800
ใช่

00:09:00.800 --> 00:09:01.500
(หัวเราะ)

00:09:01.500 --> 00:09:04.600
แล้วตอนนั้นยังอยู่ Effect เลยแล้วไม่ย้ายบริษัทด้วย ดูหน้าท่านนะ

00:09:04.600 --> 00:09:06.400
มันก็เลย มันก็เลยเป็นที่มาว่าเฮ้ย

00:09:06.400 --> 00:09:09.500
จริงๆ
แล้วพี่ก็เลยอยากจะมาเล่าให้ทุกคนฟังว่าเฮ้ยจริงๆ

00:09:09.500 --> 00:09:13.400
แล้วมันควรจะเป็นยังไงเนาะ อืม
พี่อย่าเพิ่งร้องไห้

00:09:13.400 --> 00:09:16.100
คือมันเป็นของจริง
คือกูไม่ร้องหรอก คนอื่นมันร้องไปแล้ว

00:09:16.100 --> 00:09:18.600
หมายถึงว่าไอ้คนที่ผมทำให้ตื่นไม่ได้พักร้อนน่ะ

00:09:19.500 --> 00:09:24.300
ความเป็นจริงคือพวกคุณมีโอกาสดีมากๆ ฮะ
การเข้าใจ Data Engineer เดี๋ยวนี้

00:09:24.900 --> 00:09:30.800
หมายถึงเดี๋ยวนี้มันดีมากเลย
เพราะว่าทุกอย่างคือมันรีเลทบนดาต้าทั้งสิ้นเลย

00:09:30.800 --> 00:09:35.300
โลกใบนี้ขับเคลื่อนด้วยดาต้า
เมื่อก่อนบอกว่าดาต้าดั่งทอง ดีเลทตอนนั้นไม่เก็ต

00:09:36.100 --> 00:09:38.900
ทำเละเทะกลายเป็นไม่ใช่ทองไม่พูดแล้วกัน

00:09:38.900 --> 00:09:44.200
จริงๆ คือมันเป็นทองจริงๆ มันเป็นของมีค่า
แต่คือด้วยความไม่เข้าใจตอนนั้นมันเลยเป็นสภาพนี้

00:09:44.200 --> 00:09:45.600
โอเค

00:09:45.600 --> 00:09:46.700
เชิญลูกพี่ครับ

00:09:46.700 --> 00:09:51.800
อ่า จริงๆ จะเหมือนกันที่ดีเลทเจอค่ะ
คือ คือถ้าเกิดรู้จักกันน่ะ

00:09:51.800 --> 00:10:00.300
จะบอกเสมอว่าไม่อยากทำงานดาต้า ไม่ชอบงานดาต้า
แต่ว่าทุกครั้งที่ทำงานก็คือหนีงานดาต้าไม่พ้น

00:10:00.300 --> 00:10:04.500
มันจะตามมาหลอกหลอนค่ะ
เพราะว่าดาต้ากับอินฟราเป็นของคู่กันค่ะ

00:10:04.500 --> 00:10:11.400
คือสร้างอินฟรามาทันทีเนี่ย
อย่างแย่ที่สุดน่ะมันต้องมีการเก็บแล้วว่าเราสร้างอะไรไปมั่ง

00:10:11.400 --> 00:10:17.500
คอสเท่าไร ปั่นดาต้าให้บัญชี
คุณจะหนีสิ่งนี้ไม่พ้นค่ะ อันนี้คือทำใจตัวเองอยู่นะ

00:10:18.500 --> 00:10:28.000
โอเค เพราะฉะนั้นคือมันเลยกลับไปที่ว่ามันจะมีการที่มันปะทะกันระหว่าง infrastructure layer กับ user layer และ platform layer

00:10:28.000 --> 00:10:33.200
คือทุกเส้นทางเนี่ย
ถ้าเกิดเราบอกว่าเลเยอร์ลึกสุดน่ะมันคือ infrastructure

00:10:33.200 --> 00:10:36.900
ฮาร์ดแวร์ เน็ตเวิร์กกิ้ง
ขั้นต่อมามันจะเป็นแพลตฟอร์ม

00:10:36.900 --> 00:10:43.900
หรือทูลหรือ database อะไรก็แล้วแต่ที่ดีเวลลอปเปอร์เป็นคนใช้ พ้นตรงนี้ไปอยากจะเป็น user

00:10:43.900 --> 00:10:49.100
ซึ่งทั้งหมดเนี่ยเราควรที่จะมองเป็นเส้นเดียวกันให้ได้

00:10:49.100 --> 00:10:52.600
เพื่อที่เราจะรู้ว่าปัญหาเวลาเกิดขึ้นน่ะมันเป็นที่ส่วนใคร

00:10:52.600 --> 00:10:56.900
เพราะเวลาปัญหามันเกิดขึ้นจริงเนี่ยมันจะอาละวาดตรงไหนเราไม่รู้

00:10:56.900 --> 00:11:01.600
แต่เราต้องใช้สกิลที่เรามีในการดูว่าในเส้นทางของมันทั้งหมดเนี่ย

00:11:02.200 --> 00:11:05.200
มันไปอาละวาดอยู่ส่วนไหนจะได้แก้กันถูก

00:11:05.200 --> 00:11:07.800
และบางทีมันอาละวาด 2 ส่วนพร้อมกัน

00:11:07.800 --> 00:11:10.800
ต้องชี้ให้ออกว่าตรงนี้ผลจากฝั่งนี้

00:11:10.800 --> 00:11:15.900
ตรงนี้ผลจากฝั่งโน้น แก้คนโน้นที
แก้ตรงนี้ทีประกบกันจะไม่พังอย่างนี้ เป็นต้น

00:11:15.900 --> 00:11:16.500
ขอเติม

00:11:17.000 --> 00:11:21.500
ไอ้ที่กานต์บอกครับว่าที่สุดมันจะอาละวาด
ของผมเห็นไหมอาละวาดช้า 10 เดือน

00:11:21.500 --> 00:11:23.400
แปลว่าตอนนั้นผมไม่เห็นไปข้างหน้าเลย

00:11:23.400 --> 00:11:27.000
มันเลยเป็นที่มาว่าเนี่ยมันเลยต้องเติมความรู้เรื่องพวกนี้

00:11:27.000 --> 00:11:29.900
แล้วก็มองเพื่อมองความเสี่ยงด้วยครับ

00:11:29.900 --> 00:11:37.100
เมื่อกี้พูดถึงแบบว่าคุณกานต์พูดถึงเรื่องคำว่าเส้นเนาะ ก็จะคิดถึงพวกแบบ Data Pipeline เนาะ

00:11:37.100 --> 00:11:40.800
ที่เป็นท่อ เป็นเส้น
การลำเลียง Data อะไรอย่างนี้ ก็

00:11:40.800 --> 00:11:46.500
ก็อยากจะเริ่ม เริ่มที่แบบหัวข้อที่ทุกคนดี
ทุกคนน่าจะคุ้นเคยคือเรื่อง Data Pipeline กันก่อน

00:11:47.100 --> 00:11:49.600
เอาจริงๆ เนี่ย ถ้าพูดถึง Data Pipeline เนี่ย

00:11:49.600 --> 00:11:55.300
ทุกคนในที่นี้นึกถึงอะไร
หรือเข้าใจว่า Data Pipeline คืออะไร

00:11:56.400 --> 00:12:01.300
ลอง ลอง
มีใครแบบอยากตอบไหมว่า Data Pipeline คืออะไรนะ

00:12:02.100 --> 00:12:03.300
พี่ตั้วให้ 3,000

00:12:03.300 --> 00:12:04.000
หลอกๆ

00:12:04.600 --> 00:12:07.400
จริงเปล่าครับ พี่ตั้วให้ 3--
ครูโยกมือก่อนเลย

00:12:07.400 --> 00:12:14.600
(หัวเราะ) มีใครอยากลองไหม เออ

00:12:15.300 --> 00:12:21.500
ในนี้ DE น่าจะครึ่งนึงนะจริงๆ
แล้วอะ กดดัน โอเคไม่เป็นไร

00:12:21.500 --> 00:12:26.200
อะ พี่ตั้วอยากเฉลยไหมว่า เฮ้ย จริงๆ
แล้วอะ Data Pipeline ที่เราทำๆ

00:12:26.200 --> 00:12:28.300
กันอยู่เนี่ย จริงๆ มันคืออะไรกันแน่

00:12:28.300 --> 00:12:28.700
โอเค

00:12:29.800 --> 00:12:33.100
ตอนที่ผมเพิ่งมีความรู้แล้วกันจากวันนั้นอะนะ

00:12:34.400 --> 00:12:40.600
มันคือการทำ Data Pipeline ในความ
ในความเข้าใจผมที่คิดว่าเหมาะสมแล้วเนี่ย

00:12:41.200 --> 00:12:45.300
คือการทำในลักษณะที่ว่ารู้ว่าไปหยิบอะไรจากไหน

00:12:45.300 --> 00:12:51.000
แต่ก่อนไปหยิบอะครับต้องเข้าใจก่อนว่าที่จะไปหยิบคือ Data Source ละกัน มอง เอ่อ

00:12:51.000 --> 00:12:56.100
เข้าใจคนดูแลหรือแม้กระทั่งเข้าใจระบบด้วยว่าที่จะไปแตะเขาเนี่ย

00:12:56.100 --> 00:12:59.700
เขาไหวใช่ไหม
ไม่ใช่ยูทิไลซ์เขปริ่ม 90% 95%

00:12:59.700 --> 00:13:02.900
แล้วไปแตะในวันหรือเวลาที่เขาแบบไม่พร้อมอะ

00:13:03.700 --> 00:13:10.300
ขอ Time period ขออะไรพวกนี้ด้วย
Data Pipeline คือต้องแคร์ตั้งแต่ต้นก็คือ Empathy system อะ

00:13:10.300 --> 00:13:14.000
ก็คือเห็นใจระบบด้วย
แน่นอนคือเรา Empathy มนุษย์อยู่แล้ว

00:13:14.000 --> 00:13:17.100
แต่คือเราควรที่จะเข้าใจตั้งแต่ต้นทางว่าเราหยิบอะไร

00:13:17.700 --> 00:13:18.000
หยิบ-

00:13:18.000 --> 00:13:25.900
อันนี้หมายถึง Database เนาะ
สมมติว่า DE เราจะต้องไปดึงข้อมูลจาก Database ของแอปพลิเคชันหรือเซอร์วิสอะไรอย่างนี้อยู่แล้ว

00:13:25.900 --> 00:13:30.200
ซึ่งซึ่งมันก็โดนโดนใช้งานด้วยเซอร์วิสหนักมากอยู่แล้วเนาะ

00:13:30.200 --> 00:13:35.300
แล้วก็จะมีปาร์ตี้ Data Pipeline ที่ไปดึงโคตรใหญ่เลยอะไรอย่างนี้ถูกไหม

00:13:35.300 --> 00:13:40.400
แล้วก็ทำให้ยูทิไลซ์
สเตชั่นของ Database มันปริ่มอย่างที่พี่ตั้วบอกเนาะ

00:13:40.400 --> 00:13:46.800
ใช่ ขอบคุณมาก
เพราะว่าถ้าสมมติพอยท์ไปที่ Database ตัวเขาเองเนี่ยมีการ Read/Write อยู่แล้ว

00:13:46.800 --> 00:13:48.700
IOPS ก็คือแบบโอ๊ย กูแน่นแล้ว เฮ้ย

00:13:48.700 --> 00:13:52.900
CPU ไม่ขึ้นไม่เป็นไรหรอก
นี่พอ Database ก็เดินเข้าไปก็คือไปหยิบมาเลยอย่างนี้ไม่ได้

00:13:52.900 --> 00:13:58.500
แปลว่าต้องดูภาพรวมด้วย
Data Pipeline ก็คือควรจะดูตั้งแต่ Source ว่าเขาไหวไม่ไหวเท่าไหน

00:13:58.500 --> 00:14:00.500
ช่วงเวลาไหนที่เขายูทิไลซ์ต่ำสุด

00:14:00.500 --> 00:14:07.500
เราไปหยิบตรงนั้นได้ไหม เพราะเวลาเราดึงมาทีเนี่ยแรกๆ
ไม่ได้ดึงดิฟแทบจะ Restore เลยมั้งพี่

00:14:07.500 --> 00:14:14.600
ก็คือหมายถึงว่ากว่าเราจะมีการดึงแบบดิฟเนี่ยมันจะเป็นยุคนี้ ยุคที่พวกคุณมีตอนนี้แล้วอะนะ

00:14:14.600 --> 00:14:18.000
ขอเสริมนิดนึงว่ามันจะมีความบันเทิงอย่างงี้

00:14:18.000 --> 00:14:26.000
คือถ้าไอ้คนดึง Data จากระบบ Database ของแอปกับคนที่ดูแล Database ของแอปไม่ได้คุยกัน

00:14:26.000 --> 00:14:31.900
สิ่งที่เกิดขึ้นคือ Database มันร่วงปุ๊บ
ไอ้คนดูแอปก็จะงงว่าช่วงนี้คนใช้เยอะเหรอวะ

00:14:31.900 --> 00:14:33.000
อืม อืม

00:14:33.000 --> 00:14:35.800
แล้วถ้าเกิดไม่คุยกันเนี่ยหายก็หาไม่เจอค่ะ

00:14:35.800 --> 00:14:36.700
อืม ใช่

00:14:36.700 --> 00:14:38.100
เป็นปริศนาต่อไปนะคะ

00:14:38.100 --> 00:14:45.000
โอเค เห็นด้วย
ดังนั้น Data Pipeline ลำดับคือให้วางแผนลงเอกสารหรือกระดาษก่อน

00:14:45.000 --> 00:14:50.700
ทำเป็น Manual ก่อน เรียกคนที่เกี่ยวข้องในทุกท่อน
ไม่ว่าจะตั้งแต่ System admin ที่ดูแลระบบ

00:14:50.700 --> 00:14:53.600
Network admin เพราะบางทีแบนด์วิดเขาเต็มอยู่แล้วครับ

00:14:53.600 --> 00:14:58.100
เพราะว่า Network เนี่ยเป็นเหมือนถนนชาวบ้านชาวเมืองก็ใช้มากกว่าแค่ตัว Database Server เมื่อครู่ด้วย

00:14:58.800 --> 00:15:02.600
มองว่าเอามาทำอะไรเพื่อ Convince คนที่เป็น System admin

00:15:02.600 --> 00:15:05.600
Database เอ่อ
Network admin หรือแม้กระทั่ง Data owner อะ

00:15:05.600 --> 00:15:09.600
ให้เห็นด้วยว่าทำไปเพื่ออะไร
ในมุมของการมาดึง Data Pipeline นี้

00:15:09.600 --> 00:15:14.200
แล้วก็การทำ Cleaning ต้องเห็นก่อนว่าเราทำไปเพื่ออะไรนะ

00:15:14.200 --> 00:15:18.000
เพราะไม่ใช่มาปุ๊บ Data Pipeline คือหยิบมาวางที่ Destination มันไม่ใช่แค่นั้น

00:15:18.000 --> 00:15:23.300
หมายถึงว่าหยิบจาก Source ไปวางแพลตฟอร์มเนี่ยมันทำแบบนั้นอะมันเอาเอาตัวเองเป็นหลักเกินไป

00:15:23.300 --> 00:15:25.600
ดังนั้นคือควรจะมองด้วยว่าภาพใหญ่คืออะไร

00:15:25.600 --> 00:15:33.100
เพื่อไปพูดคุยให้กับทั้งคนที่ดูแลระบบแล้วก็เข้าใจตัวระบบว่าเขาไหวแค่ไหน

00:15:33.100 --> 00:15:35.700
แล้วก็จะได้ทำซ้ำได้อันนี้สำคัญ

00:15:35.700 --> 00:15:38.800
ตอนที่ผมทำในยุคก่อนทำซ้ำไม่ได้นะครับ

00:15:38.800 --> 00:15:44.100
ไอ้เมื่อกี้ที่บอกว่า Data Clutch น่ะทำได้ครั้งเดียว
พอครั้งถัดไปปุ๊บก็ต้องมาคิดใหม่

00:15:44.100 --> 00:15:49.500
ทำวางแผนใหม่ ซึ่งจริงๆ
ไม่ต้องคิดใหม่วางแผนใหม่ครับมันทำซ้ำได้แต่ความรู้ตอนนั้นไม่พอ

00:15:49.500 --> 00:15:53.000
ดังนั้นความรู้การทำ Data Pipeline ควรทำซ้ำได้

00:15:53.000 --> 00:15:59.700
Tracking ได้ Traceability ได้
และที่สำคัญทำให้มัน Re-run ได้ด้วยเคยเหมือนกัน

00:15:59.700 --> 00:16:03.500
ทำ Data Pipeline แทบตายเลย ดูเท่มากเลย
เฮ้ย ตั้ว Re-run ดิ๊

00:16:05.100 --> 00:16:06.900
เออ...

00:16:07.600 --> 00:16:11.100
ครับผม ขอ Pipeline ที่สองเดี๋ยวทำ Restore

00:16:11.100 --> 00:16:15.000
เป็นอย่างงี้ไปซะงั้น
นั่นคือภาพของ Data Pipeline คือควรคิดให้จบ

00:16:15.000 --> 00:16:19.300
รียูสได้แล้วก็สามารถรีรันได้ tracking ได้ประมาณนี้

00:16:19.300 --> 00:16:25.200
เสริมว่าจริงๆ เมื่อกี้มันเป็นเรื่องของการ
คุยกันข้ามกันนะว่า เราจะเอา data

00:16:25.200 --> 00:16:32.100
ไปใช้ยังไง ใช้แบบไหน ปัญหาที่เกิดขึ้นจริงคือ
มันจะมีจริงๆ คือทีมต้นทางที่เขาบอกว่า

00:16:32.100 --> 00:16:37.700
นี่ไงเราก็ให้ data คุณเป็น API ไปแล้ว
แต่ไอ้คนต้องใช้อะ ต้องขุด data

00:16:37.700 --> 00:16:45.600
ย้อนไประดับพระเจ้าเขาอะค่ะ API เนี่ยทำให้ได้นะ แต่ API
Server แห่ก่อนแต่ได้เบสหลังบ้าน อ้วกก่อน

00:16:46.400 --> 00:16:50.400
คือถ้าเกิดเราคุยกันดีๆ ตรงนี้เนี่ย
อาจจะอะลุ่มอล่วยเป็นว่า

00:16:50.400 --> 00:16:55.200
โอเคเดี๋ยวแบบคุณไปเจาะหลังบ้านเราทุกๆ
เท่านี้ขุดออกมาอะไรอย่างเงี้ย

00:16:55.200 --> 00:16:58.200
มันจะประหยัดทั้งเงินและรีซอร์สกว่าด้วยซ้ำ

00:16:58.200 --> 00:17:04.300
แปลว่าจะไม่เกิดคอขวดดีไม่ดีคือ restore
ก้อนใหญ่มาก่อนแล้วค่อยให้ data API ดึงดิฟมา ประมาณนี้

00:17:04.300 --> 00:17:06.500
ถูกต้อง เพราะว่าปัญหาโลกแตกคือ คือ

00:17:06.500 --> 00:17:10.300
API มันก็ส่ง data ได้เหมือนกัน
แต่ว่ามันไม่ได้เกิดมาเพื่อส่ง

00:17:10.300 --> 00:17:14.598
data ระดับเป็นรถบรรทุกอะ มันจะส่งแบบระดับคันนึง
สองคันอะไรอย่างเงี้ย ประมาณนั้น

00:17:14.598 --> 00:17:18.098
แต่คือถ้าเกิดคุณจะขุดเป็นรถคอนเทนเนอร์ขนจากท่าเรืออะไรอย่างงี้ไป

00:17:18.098 --> 00:17:18.900
อาจจะใช้ท่าอื่น

00:17:18.900 --> 00:17:19.800
ประมาณนั้น

00:17:19.800 --> 00:17:24.000
เพราะเป็นข้อจำกัดของ HTTP
โปรโตคอลที่อาจจะมี MTU จำกัดเท่านั้นเท่านี้

00:17:24.000 --> 00:17:24.400
ถูกต้อง

00:17:24.400 --> 00:17:28.800
ไปไปไปไกลแล้วกลับมากันมาๆ
(เสียงตัดพูดคราวต่อเนื่อง) อะ เดี๋ยวเดี๋ยวสรุปสรุปสรุป

00:17:28.800 --> 00:17:34.000
ก็คือจริงๆ แล้วอะ การทำ Data Pipeline
อันนึงเนี่ย จริงๆ เราก็ต้องรู้เนาะว่า source

00:17:34.000 --> 00:17:37.700
ที่เราจะไปดึงอะมันคืออะไร มันอาจจะเป็น
database ก็ได้ หรือเป็น API

00:17:37.700 --> 00:17:42.600
ก็ได้
เพราะฉะนั้นวิธีการดึงอะมันก็ไม่เหมือนกันละกัน แล้วเราก็ต้อง

00:17:42.600 --> 00:17:46.500
เอ่อ
ประเมินว่าเราควรจะดึงแบบไหนที่จะไม่กระทบกับ source system

00:17:46.500 --> 00:17:48.800
ส่วน-- แล้วเราก็ต้องรู้ด้วยว่า
destination ของเราอะ

00:17:48.800 --> 00:17:53.300
เราจะใช้เพื่ออะไร เพื่อที่เราจะได้ทำ
transform ได้ถูกต้อง

00:17:53.300 --> 00:17:53.700
ถูกต้องเลยครับ

00:17:53.700 --> 00:17:58.600
อ่าแล้วก็ตรงระหว่างทางที่ทำทรานส์ฟอร์มเนี่ย
ตัว Pipeline ของเราก็ควรจะ

00:17:58.600 --> 00:18:03.800
reusable ได้ ทำ backfill ได้
รันซ้ำได้ ไม่ใช่ว่า

00:18:03.800 --> 00:18:07.600
เพิ่ม Pipeline ใหม่ไปเรื่อยๆ
เพื่อรีรันอะไรแบบนี้เนาะ

00:18:08.100 --> 00:18:11.800
โอเค
อันนี้ก็ทุกคนก็น่าจะพอเห็นภาพ Data Pipeline

00:18:11.800 --> 00:18:17.200
มากขึ้นแล้วเนาะ แต่ทีนี้เนี่ย พอเราทำ data
pipeline เสร็จแล้ว ขึ้นเสร็จได้แล้ว

00:18:17.800 --> 00:18:23.600
แต่พอใช้ใช้ไปแล้วมีปัญหาที่คนน่า--
ทุกคนน่าจะเคยเจอเลยก็คือ Pipeline พังอะ

00:18:24.900 --> 00:18:27.900
แบบอะถ้าง่ายๆ ก็เจอจุดแดงใน Airflow อย่างเงี้ย

00:18:27.900 --> 00:18:34.200
flow อย่างเงี้ย
หรือบางทีแดงก็แดงแล้วนะแต่เราไม่รู้อะว่ามันแดงอะแล้วจน user

00:18:34.200 --> 00:18:42.500
มาทักว่า เอ๊ย ทำไมวันนี้ data ไม่มา report
พี่ไม่ขึ้น dashboard ไม่ขึ้น ทำยังไง

00:18:42.500 --> 00:18:47.700
เอาอย่างี้จริงๆ
อะมันจะมีปัญหาหนึ่งคือ data มันพังอะ

00:18:47.700 --> 00:18:54.200
โอเค system
รู้วันนี้ฉันพังแล้วประเด็นคือมีใครรู้กับ system บ้างว่ามันพัง ถ้าเราโชคดี

00:18:54.200 --> 00:19:00.100
engineer เขาจะไปตั้ง alert เอาไว้ว่า ถ้า Pipeline
พังส่ง alert ใน Slack อะไรก็ว่ากันไป

00:19:00.700 --> 00:19:04.000
แต่อย่าประมาท stakeholder
หรือเจ้าของ Pipeline

00:19:04.000 --> 00:19:07.400
ที่ไม่อ่านแชทอันนี้ค่ะ เพราะเขาจะกด
mute เอาไว้ค่ะ มีจริง

00:19:08.500 --> 00:19:10.700
เพราะงั้นคือสุดท้ายมันคือแบบที่ว่า

00:19:10.700 --> 00:19:16.300
เนี่ยระบบมีให้คุณแล้วทุกอย่างมีให้ดูสัญญาณชีพแล้ว
คุณเข้าไปดูและ action มันหรือเปล่า

00:19:17.000 --> 00:19:20.500
จะกลับไปที่ว่าเป็น culture ของการ

00:19:20.500 --> 00:19:23.200
collaborate
ร่วมกันด้วยว่าเราจะแก้ปัญหากันยังไง

00:19:23.200 --> 00:19:27.800
เพราะว่าในการแก้ปัญหาเอาแบบง่ายที่สุดเลยคือ ปัญหาคุณไม่ใช่ปัญหาเรา

00:19:28.500 --> 00:19:31.500
แต่ในความเป็นจริงแล้วเนี่ย
เราต้องควรจะช่วยกัน

00:19:31.500 --> 00:19:34.500
เพราะว่าบางทีแก้ที่เราไวกว่า แก้ด้วยคนไวกว่า

00:19:34.500 --> 00:19:42.600
เรามาแค่มาดูกันว่างานไหนแก้ที่ใคร เราคล่องตัวที่สุด
อย่าไปมองว่า เอ้ย งานนี้ฉันทำเยอะ เธอทำน้อย

00:19:42.600 --> 00:19:44.800
สุดท้ายคือทุกคนมีงานเท่ากัน

00:19:44.800 --> 00:19:51.300
เราแค่ว่าทำยังไงให้เราแต่ละคนออกแรงน้อยที่สุดแล้วแก้ปัญหาไปด้วยกันได้

00:19:51.300 --> 00:19:55.000
ขอเติมของกานต์ เมื่อกี้คือเข้า Slack แล้ว mute
ใช่ไหมครับ อันนี้คือเป็นระดับ enterprise

00:19:55.000 --> 00:19:57.300
คือขึ้นจอเลยครับ ขึ้นจอมีขึ้นแดงนะฮะ

00:19:58.300 --> 00:20:03.100
Admin เอ่อ Operation Lead ชิพนั้นกด Accept

00:20:03.800 --> 00:20:08.700
done ให้เลย
เพราะว่าเขามองว่าถ้าเกิดไม่มีเขียวแปลว่าตัว KPI เขาดี

00:20:09.500 --> 00:20:14.100
ความหมายตรงนี้อะครับ
คือจะบอกว่าในภาพของการทำ Data Pipeline

00:20:14.100 --> 00:20:17.500
เสร็จแล้วเนี่ยจะต้องให้คนที่เกี่ยวข้องทั้งหมดตั้งแต่

00:20:18.000 --> 00:20:20.300
system คนดูแลระบบ คนดูแลเน็ตเวิร์ก

00:20:21.000 --> 00:20:21.700
data owner

00:20:22.300 --> 00:20:27.200
คนนำไปใช้หรือแม้กระทั่งคนดูแล
data platform เนี่ย

00:20:27.200 --> 00:20:32.900
รับหน้าที่ร่วมกันว่า เฮ้ย
ถ้ามีจุดแดงแม้แต่นิดเดียวหรือมีปัญหาเนี่ย หน้าที่ของทุกคนนะ

00:20:34.000 --> 00:20:40.000
ผมขอลองเล่า use case
นึงของงานที่ผมทำอันนั้นแหละ ไอ้เจ้านานหลายปีนะครับ

00:20:40.500 --> 00:20:46.900
เอาขึ้น dashboard เรียบร้อย คราวนี้ทางฝั่งของ system
เนี่ย เขาบอกว่าวันนี้ระบบเขาจะมี change

00:20:46.900 --> 00:20:50.700
นะครับ
เขาจะขอดาวน์ไทม์ช่วงนี้ ช่วงนี้แจ้งแล้วล่วงหน้าเข้า change

00:20:50.700 --> 00:20:59.100
cap เรียบร้อย คือเข้า cap commit
ตีเรียบร้อย เสร็จจากนั้นไม่ได้มาอัปเดต หรือคิดว่าทางฝั่งของคุณดูแล

00:20:59.100 --> 00:21:03.600
Data platform ไม่ต้องเข้า cap
นั้นก็คือไม่ต้องเข้าตัว advisory เอ่อ cap advisory board

00:21:03.600 --> 00:21:06.800
ก็เลยไม่ได้เชิญแล้วไม่ได้มาอัปเดต operation

00:21:06.800 --> 00:21:14.600
ทีมใหญ่ด้วย ไม่ได้มาอัปเดตทีม monitor อะครับ แต่บอกทีม
monitor แค่ว่าเดี๋ยววันนี้จะมี change

00:21:14.600 --> 00:21:23.200
ทำอัปเกรด system database
ตัวนี้นะ ช่วงเวลานี้ ถ้าเกิดเจอแดงอะ ให้ ignore ได้เลย แม่เจ้า

00:21:23.200 --> 00:21:29.000
ครับ มันสนุกตรงนั้นแหละ
จินตนาการที่เกิดขึ้นเป็นตามนั้นในหัวเลยครับ

00:21:29.000 --> 00:21:32.500
ก็คือตอนทำ change data
ถูกดึงแล้วถูก interrupt

00:21:33.200 --> 00:21:37.000
วันนั้นไม่มี data
ก้อนนั้นแปลว่าเมื่อกี้ที่ยกตัวอย่าง A, B,

00:21:37.700 --> 00:21:44.900
C ที่เงื่อนไข A, B, C, D
เนี่ย มันต้องร้อยกันเนี่ยหายไป แล้วช่วงนั้นเป็น quarterly

00:21:44.900 --> 00:21:48.900
คือมันเป็น quarter end อะ
ก็คือมันปิดเดือน 3 เดือน 6 เดือน 9

00:21:50.100 --> 00:21:51.300
ความหมายคือว่า

00:21:52.100 --> 00:21:59.300
report ของคิวนั้นไม่มีไปเลยครับ
ดังนั้นวิธีการทำก็คือจะต้องไป next queue

00:21:59.300 --> 00:22:03.800
ต้องคุยกับ audit ต้องต่อรองกับ BOT
หรืออะไรก็ตามเพื่อขอให้เกิดเหตุนั้น

00:22:03.800 --> 00:22:06.900
business impact เยอะมาก
ถอยกลับมาที่ operation

00:22:06.900 --> 00:22:10.500
operation กด ignore
เขียวกรีนแล้วก็มาร์คไปแค่ว่ามี change

00:22:11.100 --> 00:22:14.400
copy change number แปะจบ เช้าวันถัดมา

00:22:14.400 --> 00:22:17.800
user
ไม่ได้รีพอร์ตเหมือนที่เมื่อกี้คุณแก้วบอกเลย ร้องไห้เลยครับ เพราะว่า

00:22:17.800 --> 00:22:19.700
user เองจะต้องเอาไปชี้แจง audit

00:22:20.800 --> 00:22:29.300
มันเป็นเรื่องของการทำธุรกรรมการฟอกเงินประจำควอเตอร์ว่ามีบริษัทไหน เพราะที่สุดคือบริษัทที่เป็น

00:22:29.300 --> 00:22:33.700
corporate ทั้งหมดจะต้องเอา report นี้ที่เป็น
report ของแต่ละบริษัทอะเอาไป

00:22:33.700 --> 00:22:40.200
declare audit
ของตัวเองว่าเขาเนี่ยไม่ได้ฟอกเงินนะ รูปแบบของ transaction ที่วิ่งเข้าวิ่งออกโปร่งใสแบบนี้

00:22:40.200 --> 00:22:42.300
มีใครแบบนี้ ปปง. ไม่ต้องมาลง

00:22:44.100 --> 00:22:47.800
ลงหมดเลยก็คือ คือหนึ่งเดียวที่ change

00:22:47.800 --> 00:22:51.400
กด ignore
ดังนั้นคือในลักษณะของการที่ทำ data pipeline

00:22:51.400 --> 00:22:54.300
อะไรพวกนี้เสร็จแล้วเนี่ยต้องมอง
operation ด้วย

00:22:54.900 --> 00:22:57.100
แล้วก็จะต้องหาวิธีการว่า operation

00:22:57.100 --> 00:23:02.000
จะเกิด incident เอ้ย โทษที จะเกิดเคสแปลกๆ
แบบเนี้ยได้มากน้อยแค่ไหน อันนี้เป็นแค่เคสนึง

00:23:02.000 --> 00:23:06.000
คือ คือสรุปคือแค่กดจุดเขียวอันเดียว

00:23:06.000 --> 00:23:06.300
ใช่ครับ

00:23:06.300 --> 00:23:07.500
ปปง. ลงเลย

00:23:07.500 --> 00:23:13.000
ปปง. ลงของทุก corporate นะครับ เพราะว่า corporate
เนี่ย ปกติ 6 โมงเช้าเนี่ยจะต้องได้รีพอร์ตชิ้นนี้

00:23:13.000 --> 00:23:13.600
เออ

00:23:13.600 --> 00:23:19.000
ที่เป็นรีพอร์ตไม่กี่หน้าครับ
แต่คือบอก transaction ที่มีความเสี่ยงหรือไม่มีความเสี่ยง

00:23:19.000 --> 00:23:20.400
โอเค (หัวเราะ)

00:23:20.400 --> 00:23:23.400
5 บริษัท 6 บริษัท อะครับ
ธนาคารก็แบบต้องรับผิดชอบร่วม

00:23:23.400 --> 00:23:27.200
คือ คือมันฟังดูคริติคอลมากเลยนะ ที่แบบว่าการที่เราทำ data

00:23:27.200 --> 00:23:31.800
pipeline แค่อันเดียวอะ
แต่มันทำให้ไปโยงไปถึงกฎหมาย

00:23:31.800 --> 00:23:33.700
และฉิบหายได้กันขนาดนั้น

00:23:33.700 --> 00:23:34.400
ใช่ ถูกต้องเลยฮะ

00:23:34.400 --> 00:23:40.000
เพราะคือเท่าที่แก้วฟังก็คือเพราะว่าแบบเหมือนกับว่าเรา เราเหมือนแบ่งส่วนกันทำงานอะ

00:23:40.000 --> 00:23:43.600
เหมือน data ก็อะคุณรับผิดชอบ
data คุณก็คุณก็ทำ

00:23:43.600 --> 00:23:44.000
ใช่

00:23:44.000 --> 00:23:50.200
อะไรอย่างเงี้ย
โดยที่เราไม่ได้สื่อสารผ่านทีมด้วยกันเนาะ ว่าจริงๆ แล้วการที่คุณทำแบบนี้

00:23:50.200 --> 00:23:55.900
การที่ data อันนี้มันหายไปอะ
มันมีผลกระทบอะไรกับ business หรือ impact อะไร

00:23:56.500 --> 00:23:58.700
ซึ่งในกรณีนี้มันไปถึงกฎหมาย

00:23:58.700 --> 00:23:58.800
ครับ

00:23:58.800 --> 00:24:01.700
compliance อะไรอย่างนี้ด้วย
เพราะฉะนั้นจริงๆ อะ

00:24:01.700 --> 00:24:08.000
แกว่าประเด็นมันคือแบบว่าเหมือนเวลาเราคืองาน data
อะ แบบว่าทุกคนอาจจะชอบมาว่า เอ้ย

00:24:08.000 --> 00:24:12.200
ทีม data
อะ ชื่อคือเอาเป็นว่าตำแหน่งไหนอะมี data นำหน้าอะ

00:24:12.200 --> 00:24:12.500
อืม

00:24:12.500 --> 00:24:16.800
คุณรับผิดชอบอะ แต่ว่าจริงๆ
แล้วอะ มันไม่ใช่มันคือการทำ

00:24:16.800 --> 00:24:19.300
maintenance operation
ระหว่างทีมกันด้วยอย่างงี้ใช่มั้ย

00:24:19.300 --> 00:24:20.400
เกี่ยวกันหมด ใช่เลยครับ

00:24:20.400 --> 00:24:28.700
อืม
คือตรงเนี้ยมันจะมีความบันเทิงตรงที่ว่า...ส่วนมากอะค่ะ คนที่ขึ้น pipeline อะ ขึ้นจริงนะ

00:24:28.700 --> 00:24:33.600
แต่อาจจะไม่ได้อยู่นานจนถึงมันรันจริงๆ
แล้วมันอาละวาดในเดือน 3

00:24:33.600 --> 00:24:37.700
เดือน 4 หรือ 1 ปีแค่ไหนก็ว่ากันไป
เพราะฉะนั้นก็คือมันมีการที่เราขาด

00:24:37.700 --> 00:24:44.300
feedback long term จากระบบอยู่
ซึ่งเป็นจุดที่สำคัญ เพราะว่าถ้าเราไม่เคยเจอสิ่งนี้แบบย้อนกลับเราอะ

00:24:44.300 --> 00:24:47.600
เราจะไม่รู้เลยว่าเราต้องเขียนหรือแพลนโครงสร้าง

00:24:47.600 --> 00:24:48.000
pipeline

00:24:48.000 --> 00:24:53.600
ยังไงให้มัน plan
ความชิบหายที่เกิดขึ้นในอนาคตซึ่งเป็นปัญหาใหญ่มากๆ เพราะว่าทุกวันนี้คือ

00:24:54.100 --> 00:24:58.600
คือเหมือนทำก็ทำไปแล้วคนทำก็ออกไป
ไอ้คนทำมาต่อก็แบบยังไง

00:24:58.600 --> 00:25:01.700
เลิกละแล้วเอออย่างนี้ยังไง doc
ดึกอะไรทิ้งไว้ไม่พออะไรอย่างเงี้ย

00:25:01.700 --> 00:25:04.300
ก็กลายเป็นว่ามีแต่พระเจ้าที่รู้สินะ

00:25:04.300 --> 00:25:04.900
เดี๋ยวมันจะเข้า-

00:25:04.900 --> 00:25:07.700
เรื่อง doc นี่มาหลาย session แล้วนะ

00:25:07.700 --> 00:25:12.600
(หัวเราะ) แบบว่าตั้งแต่ session
แรกจนถึงตอนนี้ก็คือเขียน doc กันด้วยนะ

00:25:13.100 --> 00:25:13.800
(หัวเราะ) อะไรอย่างงี้

00:25:14.800 --> 00:25:21.700
โอเค
คือเท่าที่ฟังมามันแบบว่าตั้งแต่คำถามแรกจนถึงเมื่อกี้มันมีทั้งแบบหลายจุดมากๆ

00:25:21.700 --> 00:25:26.000
เนาะแบบของการทำ data pipeline
แค่อันเดียวมันมีแบบต้องมีความรู้ infra

00:25:26.600 --> 00:25:34.300
มีความรู้ architect
ต้องคุยข้ามทีมต้องทำนู่นทำนี่ ปัญหามันเยอะขนาดเนี้ย

00:25:34.300 --> 00:25:38.000
มัน pipeline
ทุกจุดเลยอะมันแตกตรงไหนก็ได้ถูกไหม

00:25:38.000 --> 00:25:38.400
ใช่ครับ

00:25:38.400 --> 00:25:42.500
แล้วคนที่ทำ data engineer
มันไม่ได้ต้องรู้ทุกอย่างเลยเหรอ

00:25:42.500 --> 00:25:47.500
หรือว่าแบบหรือมันจะมีคำๆ นึงที่แบบชอบโผล่ขึ้นมาก็คือแบบว่าเอ้ย เราต้องเป็น

00:25:47.500 --> 00:25:49.400
end to end data engineer หรือเปล่านะ

00:25:50.200 --> 00:25:52.500
พี่ตั้วกับกานต์คิดว่ายังไงบ้างคะ

00:25:52.500 --> 00:25:55.200
งั้นเดี๋ยวผมขอแชร์ก่อน จากเมื่อครู่ครับ

00:25:55.200 --> 00:26:00.500
วิธีการแก้เป็นแบบนี้ ที่สุดต้องเห็น end to
end จริงๆ แต่ไม่ใช่หนึ่งคน

00:26:01.300 --> 00:26:07.200
อันนี้คือขอร้องเลยต้องเป็นกลุ่มคนส่ง
ownership ของ system

00:26:07.700 --> 00:26:12.000
network หรือจะตีว่าเป็น infra
ก็ได้ที่ดูแลพาร์ทนั้นน่ะครับ

00:26:12.600 --> 00:26:13.600
ที่เป็น data owner

00:26:14.200 --> 00:26:15.300
ที่เป็น change committee

00:26:16.200 --> 00:26:19.800
ที่เป็น Data Admin, Data Admin เลยนะ หรือ
Data Engineer ก็ได้แล้วแต่

00:26:20.900 --> 00:26:26.200
เพื่อมาร่วมกันว่า เออ
มีใครจะทำอะไรแล้วไม่บอกกันไหม

00:26:26.200 --> 00:26:31.500
บอกกันหน่อยซิตะโกนมาก็ได้
ไอ้สี่ห้าคนเนี่ยมานั่งด้วยกัน เฮ้ยเฮ้ยเดี๋ยวมันนี่คืนนี้ว่างๆ

00:26:33.000 --> 00:26:38.000
Shut down เครื่อง อัพเกรดแรมดีกว่า เดี๋ยวมึงคุยกับกูก่อน
ได้ยินแว่วๆ มันเป็นอย่างนี้จริงๆ ครับ

00:26:38.000 --> 00:26:40.800
ดังนั้นคือในลักษณะของการที่จะเป็น data eng

00:26:40.800 --> 00:26:46.400
ที่เติบโตขึ้นพวกคุณน่ะจะเจ็บปวดอย่างเมื่อครู่ที่ผมเล่านี่แหละ แล้วคุณจะค่อยๆ เห็น

00:26:46.400 --> 00:26:54.200
แล้วคุณก็จะเห็นว่าโอเคคุณจะสามารถต้องเห็นภาพรวมก่อน
relate ของ Impact ว่าแต่ละคนทำงานและ

00:26:54.200 --> 00:26:57.600
Impact อะไรดังนั้นถ้าเกิดจะมองว่าอยากมี Data

00:26:58.200 --> 00:27:00.500
Engineer ที่ดูแลแบบ end to end จริงๆ อะ

00:27:01.100 --> 00:27:04.100
คุณเป็นคนที่มองภาพรวมได้ แต่ถ้าเกิดจะ

00:27:04.100 --> 00:27:08.300
end to end แบบ operate หรือใช้งานได้จริงแบบ
proper อะ เป็นกลุ่มคนเท่านั้น

00:27:09.000 --> 00:27:15.600
อันนี้คือตอนแก้ปัญหาครับ
ก็เลยนัดคุยกันว่าทุกคนไม่ว่าจะเกี่ยวข้องกับ cap เอ่อโทษที change

00:27:16.400 --> 00:27:21.100
จะเกี่ยวข้องกับ change
ใดหรือไม่เกี่ยวขอให้เข้ามานั่งก่อนอย่างน้อยสัก 1 ปี

00:27:21.800 --> 00:27:23.000
เพื่อที่จะได้ให้เห็นทุก

00:27:23.600 --> 00:27:24.900
use case เท่าที่เป็นไปได้

00:27:25.700 --> 00:27:31.600
แล้วก็ค่อยๆ จัดเป็น committee
แยกที่อาจจะเป็นลักษณะของ Data Platform Committee

00:27:31.600 --> 00:27:36.000
ทำ Data Impact หรืออื่นๆ
เพราะว่าไม่อย่างนั้นมันจะเกิดเหตุแบบเมื่อกี้ทำ

00:27:36.000 --> 00:27:37.900
change นิดเดียวจริงๆ ครับ อัพเกรด

00:27:38.400 --> 00:27:43.100
database version นิดเดียวกับเพิ่มแรม
เพิ่มซีพียูใน vmware

00:27:43.100 --> 00:27:47.900
แต่จริงๆ คือ impact
เยอะมากเพราะไม่มีคนเห็นภาพรวมหรือไม่มีคนเห็น end to end เช่นกัน

00:27:47.900 --> 00:27:51.800
อ่าค่ะ จริงๆ
ตรงนี้มันจะกลับมาที่ว่าโดยธรรมชาติของคนเราเนี่ย

00:27:51.800 --> 00:27:58.600
ถ้าเราเก่งด้านนึงได้อะจะเป็นเรื่องดี
แล้วถ้าเราเก่งมากขึ้นกว่านี้ เราคงถนัด 2 อย่างพร้อมกัน

00:27:58.600 --> 00:27:58.800
อืม

00:27:58.800 --> 00:28:02.300
แต่ในความเป็นจริงอะค่ะ เราไม่สามารถหรือทำได้

00:28:02.300 --> 00:28:08.200
แต่มันจะยากมากในการที่เราจะถือหมวก 2 ใบแล้วก็นั่ง
process พร้อมกันว่าคือเหมือนอะไรวะ

00:28:08.200 --> 00:28:11.300
เหมือนคนนึงเป็นคนโจมตี คนนึงเป็นคนตั้งรับอะ

00:28:11.300 --> 00:28:15.800
มันจะวางเกมยังไงให้มันคลาน 2 ฝ่ายกันได้อย่างไม่บ้ง

00:28:15.800 --> 00:28:21.100
ซึ่งมันยากมากในการที่เราจะสับโหมดไปมากับการเลยไปที่ว่าทำไมเราถึงต้องมี committee

00:28:21.100 --> 00:28:24.600
แต่ละคนแยก คือแต่ละคนน่ะใส่หมวกแยก
เค้าอาจจะมีสกิลคล้ายๆ

00:28:24.600 --> 00:28:29.200
กันก็ได้
แต่ว่าเค้าเลือกยืนธงว่าโอเควันนี้ฉันอยู่ฝั่ง platform

00:28:29.200 --> 00:28:32.500
วันนี้ฉันอยู่ฝั่งคนใช้งาน
วันนี้ฉันอยู่ฝั่ง infra

00:28:32.500 --> 00:28:38.200
สลับหมวกกันมาช่วยกันคิดว่าพอเราคิดในมุมนี้เราเจออะไรได้มั่ง แล้วเราจะแก้ปัญหากันยังไง

00:28:38.200 --> 00:28:45.400
ที่สำคัญจริงๆ มากกว่าคือ
อ่าการที่เราไม่สามารถเห็นทุกอย่างพร้อมกันในขณะเดียวกันได้เนี่ย

00:28:45.400 --> 00:28:51.200
ไม่ใช่เรื่องผิด
แค่ว่าเราควรจะรู้ว่าเราจะหาใครมาเติมเต็มส่วนตรงนี้

00:28:51.200 --> 00:28:56.000
ในขณะเดียวกัน ถ้าเรามอง overview อะ
มันมองสลับกัน 3-4 อย่าง มันมองได้แหละ

00:28:56.000 --> 00:28:59.700
แต่ว่าพอเราต้องไปนั่งลงหน้างานทำงานจริงอะ

00:28:59.700 --> 00:29:03.800
มันยากมากที่จะนึกสภาพนะ
วันนึงปุ๊บมาถึงเข็ด infra

00:29:03.800 --> 00:29:09.900
VPC security แล้วต่อไปปุ๊บขึ้น database ขึ้น
platform deploy airflow ขึ้น kubernetes

00:29:09.900 --> 00:29:15.000
วันต่อมาปุ๊บไปนั่งเขียน pipeline ลง
kubernetes วันต่อมาคือไปนั่ง debug infra

00:29:15.000 --> 00:29:17.100
กลับมาปุ๊บ debug pipeline ต่ออย่างเงี้ย

00:29:17.100 --> 00:29:23.900
มันจะสับไปมาแบบรถไฟเหาะมากซึ่งมันจะเบลอกันก่อนแล้วคนจะทำได้ไม่นานเพราะว่ามันสับเยอะเกิน

00:29:23.900 --> 00:29:26.900
เพราะงั้นคือเอ็นทูเอ็นที่ว่าเนี่ยมีอยู่จริงไหม

00:29:26.900 --> 00:29:28.900
มีอยู่จริงและไม่มีอยู่จริงใน case

00:29:28.900 --> 00:29:31.800
ที่ว่าในบางบริบทมันจะเป็นได้

00:29:31.800 --> 00:29:37.300
แต่ไม่ใช่ทุกบริบทที่เราจะ end-to-end ได้แล้วไม่เหนื่อยหรือตายไปก่อน

00:29:37.300 --> 00:29:38.900
ขอเติมอันสุดท้าย (หัวเราะ) เออใช่

00:29:38.900 --> 00:29:44.600
แค่ฟังเมื่อกี้ก็เหนื่อยแล้วอะ
แค่ฟังนะยังไม่ได้ทำนะ (หัวเราะ) แค่ฟังเมื่อกี้

00:29:44.600 --> 00:29:48.700
เพราะว่าที่สุดแล้วเมื่อครู่ที่ทั้งตั้วแล้วก็กานต์บอกครับมันจะมีของแลก

00:29:49.600 --> 00:29:53.900
งานของพี่จะช้าลงนะแต่จะไม่เกิดปัญหา
ปปง. ลงพี่เลือกอะไร

00:29:54.700 --> 00:30:01.900
จริงๆ บางอย่างมันต้องแลกจริงๆ ครับ แน่นอนมี committee
มีอะไรพวกนี้มันใช้เวลาในการคุย change

00:30:01.900 --> 00:30:08.400
บางทีจะผ่านยากขึ้น แปลว่าก่อนที่คุณจะมาเข้า cap
แล้วบังคับทำ change เนี่ยคุณก็ไปคุยกับแต่ละกับ

00:30:08.400 --> 00:30:13.200
owner ก่อน มันจะทำให้งานไม่ได้ล่กจนเละอะ

00:30:13.200 --> 00:30:17.000
แต่ว่าโอเคบางที business user
อยากเร็วอะเนอะ อยากได้เมื่อวานอยากได้

00:30:17.000 --> 00:30:19.300
พี่อยากได้เมื่อวานพี่ change date ปะล่ะ

00:30:19.300 --> 00:30:24.000
เออ ก็ทำวันนี้แต่พี่ทำเป็นเดทพรุ่งนี้เมื่อวานปะล่ะ มันไม่ได้ มันต้องมีการแลก

00:30:24.000 --> 00:30:28.800
ขอเสริมว่าจริงๆ
อะ ปัญหาโลกแตกคืออยากได้ตั้งแต่เมื่อวานไม่ใช่เรื่องผิด

00:30:28.800 --> 00:30:36.500
แค่ว่ามันต้องบาลานซ์กันระหว่างบางช่วงคุณไปไวได้
แต่ว่าเราต้องเผื่อเวลาให้ทีมมาซักตรงนี้นะ

00:30:36.500 --> 00:30:39.800
เพราะถ้าเกิดซากมันทับไปเรื่อยๆ อะ กลายเป็นว่า

00:30:39.800 --> 00:30:42.600
custom ไปทุก case ค่ะ
อย่างเงี้ยมันจะไม่จบไม่สิ้นเลย

00:30:42.600 --> 00:30:47.100
เข้าใจละ แปลว่าลกได้ ลกรีบได้ แล้วก็ต้องมี
period ให้เขามาทำความสะอาดด้วย

00:30:47.100 --> 00:30:51.100
การลกไม่ใช่เรื่องผิด
เพราะบางทีมันจำเป็นต้องลกเพื่อให้เห็น

00:30:51.100 --> 00:30:55.100
use case จริงๆ
หน้างาน แต่ถ้าเกิดว่ามันเป็นอย่างนี้สะสมไปเรื่อยๆ

00:30:55.100 --> 00:31:00.800
อะ มันจะกลายเป็นซากที่มันทับถมแล้วมันจะทำให้เดินคล่องตัวลำบากเหลือเกิน

00:31:00.800 --> 00:31:04.800
เพราะงั้นคือเราควรจัดหาเวลามาเพื่อคลายปมเหล่านี้ให้มันเดินได้อย่าง

00:31:04.800 --> 00:31:07.500
smooth ที่สุดแล้วกัน มันต้องมีการลงทุนแน่ๆ

00:31:07.500 --> 00:31:13.500
แต่ว่าอันนี้คือเป็นเรื่องของว่าคือเหมือนเหมือนจ่ายมากได้เร็วแต่ว่าจ่ายช้าแต่ว่าได้นานๆ

00:31:13.500 --> 00:31:14.100
งั้นอะ

00:31:14.100 --> 00:31:15.500
โอเค

00:31:15.500 --> 00:31:19.300
วิธีแก้คือทำใหม่ ไม่รู้เรื่องอะไรเลย ทำใหม่

00:31:19.300 --> 00:31:21.000
ทำใหม่ที่ว่าคือกี่ปีนะคะ กี่ปีเสร็จนะคะ

00:31:21.000 --> 00:31:21.500
หลอก หลอก หลอก

00:31:22.100 --> 00:31:23.200
(หัวเราะ)

00:31:23.200 --> 00:31:26.800
โอเค โอเค ก็เดี๋ยวจะเป็นคำถามสุดท้ายแล้ว

00:31:26.800 --> 00:31:34.800
เพราะเรา เราก็คุยกันมาเยอะพอสมควรแล้ว ทีนี้อยากให้กานต์กับพี่ตั้ว เอ่อ สรุปเนี่ย

00:31:34.800 --> 00:31:38.500
จริงๆ แล้วอะ อะไรที่สำคัญกับการเป็น DE

00:31:39.000 --> 00:31:46.500
จริงๆ ณ ตอนนี้แบบช่วยสรุปเป็น key takeaway สั้นๆ
ให้ทุกคนหน่อย เพราะเราคุยกันมาเยอะมากเลย แบบหลายๆ

00:31:46.500 --> 00:31:52.500
ถ้าเปของผมเมื่อครู่จากสาย system network
security เรียกว่าสาย infra แล้วกัน

00:31:53.100 --> 00:31:57.600
แตะ network แตะ security แตะ system
เนี่ยมี data อยู่ทั้งสิ้น

00:31:58.400 --> 00:32:02.200
ไม่ว่าจะเป็น system log
หรืออะไรพวกนี้หรือแม้กระทั่งตัว database system

00:32:03.700 --> 00:32:08.600
ภาพของผมความหมายคือในทุกอาชีพอะครับ
ในทุกบทบาทหน้าที่อะ

00:32:09.500 --> 00:32:12.200
ถ้าเกิดมาปุ๊บคุณมีพื้นฐาน infra

00:32:12.800 --> 00:32:18.900
ก็สามารถเข้าใจว่า infra
คิดยังไงแล้วไปเติมเต็มความรู้ทาง data ได้ก็คือไปเติมความรู้ด้าน DE

00:32:19.500 --> 00:32:23.500
ว่าโอเค pipeline ที่แท้จริงเป็นยังไง
หรือถ้าคุณไม่เคยมีพื้นฐาน infra เลย

00:32:24.400 --> 00:32:30.000
อย่างน้อยต้องเข้าใจว่างานพวกเขาคืออะไร เหมือนกับเข้าใจงานเขาอะ เพราะมันต้องทำงานด้วยกัน

00:32:30.800 --> 00:32:32.500
เข้าใจภาษาเค้าว่าต้องคุยยังไง

00:32:33.200 --> 00:32:39.100
มาปุ๊บจะไปดึงข้อมูลพี่ โอเคครับพี่
งั้นคำถามผมง่ายมากเลย utilize พี่ตอนไหนสะดวกบ้าง

00:32:39.100 --> 00:32:44.000
ผมจะต้องดึง data ประมาณ 1 กิกะไบต์ต่อชั่วโมง
อันนี้สมมตินะครับ หรือ 10 กิกะไบต์ต่อชั่วโมง

00:32:44.500 --> 00:32:49.200
พี่พอมีรูมให้ผมลองดึงมั้ย
อ่ะ แล้วน้องดึงเท่าไหร่ เอาร้อยกิ๊ก

00:32:49.200 --> 00:32:52.000
ผมใช้ประมาณเท่านี้ชั่วโมง bandwidth
ใช้ประมาณเท่านี้

00:32:53.300 --> 00:32:56.700
คำคุยของ data engineer ที่เป็นแบบเนี้ย
system และ network จะชอบมากๆ

00:32:57.300 --> 00:33:03.600
ถัดมาก็บอก permission ผมเนี่ยไม่ต้องขอเป็นสิทธิสูงก่อน
ไม่ต้องให้ ขอสิทธิ์นี้เท่านั้น เล็กๆ

00:33:04.600 --> 00:33:09.600
system เอ้ย security ก็จะชอบและ
เพราะไม่งั้นจะคุยยากมากเลย มาปุ๊บพี่ผมขอดึง

00:33:09.600 --> 00:33:12.500
data พี่นะ ต้องการตอนนี้ data ใหญ่ๆ

00:33:12.500 --> 00:33:19.500
แล้วก็ เอ่อ ขอสิทธิสูง
แอดมินเลย เดี๋ยวใครจะให้แอดมินกูยังต้องเบิกเลย หืม อยู่ใน strong room

00:33:19.500 --> 00:33:25.200
มีกูก็บ้าแล้ว เออพี่แต่ผมมีแล้ว โอ้โห เส้นใหญ่
คราวนี้ก็จะไม่มีใครอยากคุยด้วย ดังนั้นคือเราต้อง

00:33:25.200 --> 00:33:28.900
empathy คนดูแลระบบเนอะ แล้วก็
empathy system ด้วย

00:33:28.900 --> 00:33:33.000
เห็นใจพวกระบบด้วย
ไม่ไหวแล้ว กูรัน 95% utilize ตลอด

00:33:33.000 --> 00:33:35.100
พี่ครับ system ครับ ไปอัปเกรดก่อนเดี๋ยว data

00:33:35.100 --> 00:33:39.600
pipeline
เส้นนี้ยังไม่ทำ พวกเนี้ยจะทำให้คุณเติบโตเป็น data eng

00:33:39.600 --> 00:33:45.700
ที่เห็นภาพรวมได้ แล้วทำให้เกิด end-to-end
ได้แท้แท้จริงเพราะว่าทำกับกลุ่มคนเช่นกันครับ

00:33:45.700 --> 00:33:48.800
จริงๆ keyword คือเห็นภาพรวมเนาะ จริงๆ

00:33:48.800 --> 00:33:54.800
ตรงเนี้ยมันยากเหมือนกันเพราะว่าเราก็จะอยู่ตั้งธงจากฝั่งที่เราเห็นและเรารู้จักมา

00:33:54.800 --> 00:34:01.200
แต่บางทีเนี่ยเราอาจจะต้องขยับออกมานิดนึงแล้วก็ถอยไปดูว่าเอ้ยเพื่อนบ้านเราอะทำงานกันยังไงบ้าง

00:34:01.200 --> 00:34:08.100
สุดท้ายคือมันเลยกลายเป็นที่ว่าคนที่พร้อมทำความเข้าใจเพื่อนบ้านใกล้เคียงและทีมอื่นๆ

00:34:08.100 --> 00:34:22.300
และพร้อมสื่อสารและคุยเพื่อให้งานมันเดินน่ะจะไปได้ไกล เพราะสุดท้ายคือโลกเกิดนวัตกรรมเพราะว่าคนที่ทำงานคนละส่วนมันจับมือคุยกันและพามันไปถึงที่ใหม่ๆ

00:34:22.800 --> 00:34:31.000
แต่เราไม่ได้จมปลักอยู่กับที่เดิมและเห็นแต่แค่ของตัวเอง เพราะการที่เราเห็นแค่ของตัวเองเนี่ยมันกลายเป็นว่าเราอาจจะไม่ไปมองรอบข้างจริงๆ

00:34:31.000 --> 00:34:34.900
อ่ะ
มันมีการทำอันตรกิริยากันจากสภาพแวดล้อมกันหมดเลย

00:34:34.900 --> 00:34:38.600
แต่พอเราไม่สนรอบข้างมันกลายเป็นว่าเราอาจจะหาไม่เจอด้วยซ้ำว่าจริงๆ

00:34:38.600 --> 00:34:41.100
อ่ะ บัคทางอื่นมันไม่ใช่บัคทางเราด้วยซ้ำ

00:34:41.100 --> 00:34:44.000
แล้วเดี๋ยวพอเราเพื่อนน้อยอ่ะ
(เสียงกระแอม) งานเราก็จะไม่เสร็จ

00:34:44.800 --> 00:34:50.199
พอมีปัญหาปุ๊บคนจะซัพพอร์ตเราน้อยลง
ดังนั้นคือถ้าเกิดเราแบบใจกว้าง ช่วยเหลือ

00:34:50.199 --> 00:34:53.800
เดี๋ยวมีคนมาช่วยรุม เอ้ย มีคนมาช่วยเราเองครับ

00:34:53.800 --> 00:34:55.699
ช่วยรุมนี่คือช่วยส่วนข้างใช่มั้ยคะ

00:34:55.699 --> 00:34:57.400
ช่วยรุมแก้ไขปัญหา

00:34:57.400 --> 00:34:59.600
อ๋อ ก็แบบเอ้ยอีบ้านี่ทำไมทำงี้ไม่

00:35:00.100 --> 00:35:01.700
บ้ารึเปล่าใครเขาทำอย่างงี้กัน

00:35:01.700 --> 00:35:06.400
กราบเค้าก่อนเลย ครับมาช่วยกูด้วยอะไรประมาณนี้ฮะ
(หัวเราะ) ใครว่าเรา เราไม่ว่าหรอกครับ

00:35:06.400 --> 00:35:07.100
ช่วยกูก่อน

00:35:07.100 --> 00:35:10.000
ครับผม เราไม่สู้คนฮะ เราสู้งาน

00:35:10.000 --> 00:35:10.500
โอเค

00:35:10.500 --> 00:35:11.300
โอเค (หัวเราะ)

00:35:12.100 --> 00:35:14.300
ไม่รู้จะสรุปยังไงนะคะ ตามนั้นเลย

00:35:14.300 --> 00:35:15.900
โอเค (หัวเราะ)

00:35:15.900 --> 00:35:20.300
ก็ จริงๆอะแบบว่ามันมี
มันมี 2 ประเด็นแล้วกันที่แก้วจับได้ก็คือการ

00:35:20.300 --> 00:35:25.000
การที่เรามองภาพรวมเนาะ
คือเราไม่ได้แค่โฟกัสอยู่ที่งาน Data Engineer

00:35:25.000 --> 00:35:30.800
อย่างเดียวเพราะว่าจริงๆ แล้วงาน Data Engineer มัน
มันเกี่ยวข้องกับเพื่อนบ้านกับทีมอื่นด้วยอะ

00:35:30.800 --> 00:35:38.000
แบบว่าอาจจะถ้าจะบอกก็คือตั้งแต่อินฟราเน็ตเวิร์กหรือจะเป็น User ที่เป็น DS, DA, MLE

00:35:38.000 --> 00:35:44.100
ก็ได้ คือเราจริงๆ
เราต้องมองเขาด้วยเนาะแล้วก็ไปกราบเขาให้มาช่วยเรา อะไรประมาณนี้

00:35:44.100 --> 00:35:45.100
ด้วยภาษาเขา

00:35:45.100 --> 00:35:52.000
ใช่ เห็นภาพรวมแล้วก็คุยกับคนอื่นๆ ให้มากขึ้น
เข้าใจคนอื่นให้มากขึ้นแล้วกัน อืม

00:35:52.000 --> 00:35:52.600
ใช่ครับ

00:35:52.600 --> 00:36:00.100
ก็น่าจะมีเวลาเหลืออยู่สำหรับ เอ่อ Q&A ค่ะ
มีใครมีคำถามอะไรอยากจะถามพี่ตั้วกับกานต์มั้ยคะ

00:36:00.100 --> 00:36:03.100
อย่าถามว่าไซต์ไหนกูไหว้ละ (หัวเราะ)

00:36:03.900 --> 00:36:05.000
แค่นี้ก็แบบครับ

00:36:05.600 --> 00:36:07.600
จ้ะ

00:36:07.600 --> 00:36:11.800
คำถามก็คือ
ถามว่าอยากถามในเรื่องของการเทสต์ Pipeline

00:36:11.800 --> 00:36:14.600
ว่ามี Tool อะไรที่จะมาช่วยในการเทสต์ Pipeline

00:36:14.600 --> 00:36:19.500
(เสียงออกจากไมค์)

00:36:19.500 --> 00:36:25.100
อ๋อ ใครคือคนที่มาทำการเทสต์ Pipeline หรือมี Tool
ไหนที่จะมาช่วยในการเทสต์ Pipeline บ้างไหม

00:36:25.100 --> 00:36:32.300
โอเค แยกกันก่อนเรื่องคน
คือสุดท้ายอะมันจะกลับไปที่ว่าคนที่ทำฟีเจอร์คือ Pipeline

00:36:32.300 --> 00:36:39.700
อะควรจะรู้สิ่งนั้นดีที่สุด
เพราะงั้นตามหลักการเขาควรจะดีไซน์ Test ของตัวเองด้วยแล้วกัน

00:36:39.700 --> 00:36:40.300
เป็น Dev ถูก

00:36:40.300 --> 00:36:46.800
ใช่
แต่ทีเนี้ยเรื่องเครื่องมืออะล้านแปดมีตั้งแต่สำเร็จรูป GUI Framework อะไรก็ได้ ระบบเอง

00:36:46.800 --> 00:36:47.800
มีเยอะแยะมากมาย อืม

00:36:47.800 --> 00:36:52.300
เพราะงั้นคือลองไปดูว่า
อะคือขั้นต้นน่ะอาจจะลองไป

00:36:52.300 --> 00:36:58.400
explore Framework ดูก่อน
แล้วดูว่าอะไรที่ตอบโจทย์ของเรา เพราะว่าแต่ละ Tool อะมันจะมี Target

00:36:58.400 --> 00:37:00.600
Use case ไม่เหมือนกัน ลองไปดูตรงนี้ก่อน

00:37:00.600 --> 00:37:07.000
แล้วที่สำคัญตรงนี้คือ อ่าการเทสต์ Data
Pipeline เนี่ยต้องแยกกัน 2 เลเยอร์

00:37:07.000 --> 00:37:10.200
ระหว่างการเทสว่าท่อทำงานปกติไหม

00:37:10.200 --> 00:37:10.300
อืม

00:37:10.300 --> 00:37:12.300
กับการเทสกับ Data จริง

00:37:12.300 --> 00:37:12.500
อืม

00:37:12.500 --> 00:37:17.200
เพราะว่างาน Data Pipeline
เนี่ยมันจะมีเรื่องของคาแรกเตอร์ Data

00:37:17.200 --> 00:37:24.100
ด้วยที่มันมีผลกับการเทส
เพราะฉะนั้นคือไปเทส 2 อย่างนี้แยก เพราะว่าถ้าเกิดว่าเราเทสต์กับ Data

00:37:24.100 --> 00:37:27.500
จริงทุกครั้งใน CI อะไรอย่างเงี้ย
คือรอกัน 3 ชาติไม่จบหรอก

00:37:27.500 --> 00:37:27.600
ใช่

00:37:27.600 --> 00:37:30.700
แล้วมันจะเปลืองตังค์ด้วย
เพราะฉะนั้นคือไปทำเทสเป็น 2 ชั้น

00:37:30.700 --> 00:37:35.900
คือเทสท่อปกติ แล้วก็เป็นเทสต์กับ Data
จริงอันเนี้ยกี่ที ค่อยตกลงกันอีกทีนึงประมาณนั้น

00:37:35.900 --> 00:37:39.700
ขอบคุณมากครับ ขอเติมตรงนี้
มันเหมือนที่เราจะเทสใน Unit test ก่อน

00:37:39.700 --> 00:37:42.200
Data Pipeline ตอนเราเทสอาจจะทีละท่อน

00:37:42.200 --> 00:37:48.400
แต่พอเต็ม Loop เนี่ย เราอาจจะเทสแบบ Data ที่มีก่อน เทสต์
Data จริงอะให้ทำ ให้ทำตอน Deploy นั่นแหละ

00:37:49.000 --> 00:37:52.100
แล้วตกลงกันเลยว่าพี่เดี๋ยวเรามีการเทส

00:37:52.900 --> 00:37:56.100
Fail case
แล้วนะว่าสามารถรีรันได้หรือรีสตอร์ได้

00:37:56.100 --> 00:38:00.400
แล้วก็คือจะได้ไปเทสต์ Data จริง
เพราะจะได้เห็นของจริงด้วยครับ

00:38:02.000 --> 00:38:04.700
ขอบคุณมากครับสำหรับคำถาม

00:38:04.700 --> 00:38:06.700
มีคำถามอื่นอื่นเพิ่มเติมไหมคะ

00:38:07.800 --> 00:38:12.200
เดี๋ยว แก้วทวนคำถามนิดนึงนะคะก็คือ เอ่อ

00:38:12.200 --> 00:38:18.700
คนถามเนี่ยบอกว่าเท่าที่เคยเจอมาเนี่ย การเป็น DE
อะส่วนใหญ่จะเป็น DE โดยอุบัติเหตุ

00:38:18.700 --> 00:38:25.000
Accidentally become DE
เออแบบว่าเหมือน เหมือนแบบว่าไม่มีใครที่จะพร้อมอะเป็น DE

00:38:25.000 --> 00:38:28.900
เค้าก็เลยต้องจับตำแหน่งข้างเคียงเช่นอย่างงี้ก็คือ Software Engineer

00:38:28.900 --> 00:38:36.600
มาทำ DE เนาะ คำถามก็คือในมุมของพี่ตั้วอะค่ะ
แบบการ การเป็น DE ที่ดีอะ

00:38:36.600 --> 00:38:45.500
เอ่อมัน มันอยู่มันเราจะวัดยังไงนะหรือมี KPI
อันไหนไหมที่จะบอกได้ว่าเอ้ยคนเนี้ยคือ DE ที่ดีแล้ว

00:38:45.500 --> 00:38:51.000
งั้นขอพูดแค่พาร์ทเดียวก่อน เพราะจริงๆ DE มีหลาย
หลายริทึ่มมาก แล้วเดี๋ยวค่อยไปที่ Networking

00:38:51.000 --> 00:38:58.100
กันตอน Section Networking นะ DE
ที่ดีเนี่ยในมุมตั้วเนี่ยขอให้มีอยู่ 3 เรื่องเป็นหัวใจสำคัญเลย

00:38:58.100 --> 00:39:01.500
จริงๆ Software Engineer
หรืออะไรพวกเนี้ย 3 เรื่องเนี้ยสามารถ Apply ได้

00:39:02.100 --> 00:39:07.500
อันที่หนึ่งคือมองความเสี่ยงไปข้างหน้าเท่าที่ประสบการณ์เรามีอะให้ไกลที่สุด

00:39:08.100 --> 00:39:10.300
แต่ตอนนั้นผมมองไม่เห็นไอ้ 10 เดือนข้างหน้า

00:39:10.300 --> 00:39:12.800
แต่คือนั่นแหละ ด้วยความประมาทด้วย

00:39:12.800 --> 00:39:18.500
เพื่อที่จะไปอันที่สองคือรับ Feedback
ได้ทันที ด่าได้ พี่ว่าได้เลย แต่ขอ

00:39:18.500 --> 00:39:21.200
Solution กันด้วย Discuss กันว่าแก้ยังไง

00:39:22.200 --> 00:39:25.300
อันที่สามมองภาพรวมได้มากขึ้นเรื่อยๆ

00:39:25.300 --> 00:39:28.500
เมื่อกี้คืออันแรกคือมองไปข้างหน้าเพื่อเห็นความเสี่ยงได้มากขึ้น

00:39:28.500 --> 00:39:31.100
อันที่สามจะทำให้คุณมองเห็นภาพรวมได้มากขึ้นเรื่อยๆ

00:39:31.800 --> 00:39:34.800
สามอย่างนี้พื้นฐานคือ Communication

00:39:34.800 --> 00:39:40.300
และความเข้าใจคนที่อยู่แวดล้อมในสิ่งที่เราจะไปแตะนี่แหละ Surprise

00:39:40.300 --> 00:39:43.000
Manager หรือ Surprise DE อะโดยอุบัติเหตุเนี่ย

00:39:43.700 --> 00:39:47.400
ปกติสามเรื่องนี้เราไม่เคยมีประสบการณ์ใน DE อยู่แล้ว

00:39:48.900 --> 00:39:53.900
ความที่จะเป็น DE
ที่ดีในพาร์ทที่หนึ่งเนี่ย จะเรียกว่าจะไม่มีทางวัดผลได้

00:39:53.900 --> 00:39:56.900
แต่ถ้าเกิดคุณมีการสื่อสารได้ รับ Feedback ได้

00:39:57.400 --> 00:39:58.900
เห็นความเสี่ยงเผื่อเพื่อนได้เนี่ย

00:39:59.900 --> 00:40:05.900
นี่คือพื้นฐาน DE ที่ดีที่สุดเท่าที่ผมเห็นเลย
เพราะมันจะทำให้ทุกสายอาชีพเลยนะครับ System

00:40:05.900 --> 00:40:10.300
Network อะไรพวกนี้ หรือ DE เนี่ย
ถ้ามีพื้นฐานนี้ ผมคิดว่าเป็น DE ที่ดีแล้ว

00:40:11.000 --> 00:40:12.900
เพราะมันจะเติบโตไปในสาย DE

00:40:13.400 --> 00:40:14.500
ที่โตขึ้นได้

00:40:15.100 --> 00:40:23.400
แล้วก็จะสามารถคุยจน User เนี่ยปรับพฤติกรรมทำให้ Data
ขาเข้าเนี่ยเป็นไปตามที่เราอยากได้ ได้

00:40:24.200 --> 00:40:28.400
เพราะบางทีคือ User
เองไม่กล้าปรับพฤติกรรมตัวเอง เพราะเขาก็เหนื่อยมากแล้ว

00:40:28.400 --> 00:40:33.900
แต่พอเราเข้าใจจนแบบ โหพี่ถ้าทำแค่นี้พี่จบเลย เขาจะสบายขึ้นด้วยซ้ำ

00:40:33.900 --> 00:40:39.400
นี่คือ DE ที่ดีใน
ในพาร์ทที่สอง เพราะว่าเราไปแตะขาเข้าใช่มั้ยฮะ

00:40:39.400 --> 00:40:41.700
เราไปแนะนำจนขาเข้าเขาทำงานได้ลีนขึ้น

00:40:42.200 --> 00:40:43.500
หรือแม้กระทั่งตัว Database System

00:40:43.500 --> 00:40:48.500
ก็ได้บอกพี่เราไม่แตะมาสเตอร์ตอนนี้ เป็นคลาวด์หรือไม่คลาวด์ก็ได้ ทำ Replica ให้หน่อย

00:40:49.400 --> 00:40:51.200
หรือเอามาวางให้หน่อยอะไรประมาณนี้

00:40:51.900 --> 00:40:54.900
DE ที่ดีก็คือมีความเห็น เห็น เห็นภาพรวม

00:40:55.600 --> 00:40:56.300
รับ Feedback ได้

00:40:57.300 --> 00:41:02.300
ตรงนี้เป็นพาร์ทที่หนึ่งที่ถือว่าเติบโตแน่นอนครับ ขอบคุณครับ

00:41:02.300 --> 00:41:07.800
โอเคค่ะ
ก็ขอบคุณสำหรับคำถามนะคะ แล้วก็หมดเวลาแล้วด้วย ก็ เอ่อ

00:41:07.800 --> 00:41:11.300
Session
นี้ขอขอบคุณพี่ตั้วกับกานต์มากนะคะที่มา

00:41:11.300 --> 00:41:15.600
Discuss
กันอย่างเมามันส์ แล้วก็แชร์ความรู้ให้กับทุกคน

00:41:15.600 --> 00:41:19.700
ก็สามารถเจอกับพี่ตั้วกับกานต์ได้ต่อใน Networking นะคะ

00:41:19.700 --> 00:41:26.700
ถ้าเกิดว่าใครมีคำถามอะไรที่สงสัยและอยากจะถามต่อเนี่ย ก็เจอกันตอน Networking ได้ค่ะ

00:41:26.700 --> 00:41:27.500
ขอบคุณมากครับ

00:41:27.500 --> 00:41:30.400
ขอบคุณค่ะ

00:41:30.400 --> 00:41:31.500
ครับ
