WEBVTT

00:00:03.300 --> 00:00:09.600
โอเคครับทุกคน สวัสดีครับทุกคน

00:00:09.600 --> 00:00:12.300
อ่า ก็จะแนะนำตัวนะครับผม

00:00:12.300 --> 00:00:15.200
ผมริฟฟี่ จาก Creatorsgarten นะครับผม

00:00:15.200 --> 00:00:20.700
session นี้จะเป็น session
co-host กับพี่ไทปังนะครับผม

00:00:20.700 --> 00:00:22.700
ก็จาก Creatorsgarten เหมือนกันครับ

00:00:22.700 --> 00:00:30.000
วันเนี้ย คือตาม title ของ speaker

00:00:30.000 --> 00:00:31.500
title ของ session

00:00:31.500 --> 00:00:32.900
นี้เลยครับผม ยาวๆ เลยครับผม

00:00:32.900 --> 00:00:33.600
วันนี้จะมา

00:00:33.600 --> 00:00:35.600
พามาดูกันเนาะ ว่าแบบ

00:00:35.600 --> 00:00:37.400
ระบบหลังบ้านของ Creatorsgarten

00:00:37.400 --> 00:00:39.400
เราทำอะไรกันบ้าง

00:00:39.400 --> 00:00:41.200
ซึ่งตรงนี้เราจะแบ่ง

00:00:41.200 --> 00:00:42.900
session เป็น 2 อย่าง

00:00:42.900 --> 00:00:43.400
ก็คือ

00:00:43.400 --> 00:00:46.200
part แรก เดี๋ยวผมจะเล่าเรื่อง

00:00:46.200 --> 00:00:46.800
process

00:00:46.800 --> 00:00:50.300
การทำวิดีโอของตัวงานให้ฟังกัน

00:00:50.300 --> 00:00:53.100
ว่าเรา simplify process อะไรอย่างยังไง

00:00:53.100 --> 00:00:58.900
และใน session ที่สองเนี่ย ก็จะเป็น
session ของพี่ไท ที่จะพาดู Contentsgarten

00:00:58.900 --> 00:01:00.300
ซึ่งเป็นระบบ-

00:01:00.300 --> 00:01:03.900
ซึ่งเป็นระบบ wiki engine หลังบ้าน
ที่เราทำกันเอง แล้วก็ใช้

00:01:03.900 --> 00:01:08.300
แล้วก็ utilize ระบบหลายอย่างของ GitHub เยอะมาก

00:01:08.300 --> 00:01:09.200
ก็

00:01:09.200 --> 00:01:10.200
เกริ่นก่อนเลยละกัน

00:01:10.200 --> 00:01:13.100
ก็ Creatorsgarten เนี่ย

00:01:13.100 --> 00:01:14.400
เราฟอร์มมาแบบ

00:01:14.400 --> 00:01:16.300
officially ก็ประมาณ

00:01:16.300 --> 00:01:17.800
1 ปี 2 เดือนแล้ว

00:01:17.800 --> 00:01:21.700
อ่า ก็ในช่วงนี้นะครับผม เราก็

00:01:21.700 --> 00:01:24.600
จัดมาหลาย event อยู่

00:01:24.600 --> 00:01:25.900
แล้วนอกจากจัดหลาย event

00:01:25.900 --> 00:01:26.500
แล้วเนี่ย

00:01:26.500 --> 00:01:27.400
ทุกๆ

00:01:27.400 --> 00:01:28.900
event ที่เรา live stream

00:01:28.900 --> 00:01:31.200
เราเก็บเป็น archive ไว้ด้วย

00:01:31.200 --> 00:01:33.400
ซึ่งอีก purpose หนึ่งที่เราเก็บ

00:01:33.400 --> 00:01:33.800
archives

00:01:33.800 --> 00:01:34.100
เนี่ย

00:01:34.100 --> 00:01:35.900
เพราะว่าเราก็จะเอาไป publishing

00:01:35.900 --> 00:01:37.000
ใน YouTube

00:01:37.000 --> 00:01:38.200
เป็น public archives

00:01:38.200 --> 00:01:39.600
เพื่อเวลา

00:01:39.600 --> 00:01:41.000
เวลาคนอื่นเนี่ย

00:01:41.000 --> 00:01:42.100
สนใจ

00:01:42.100 --> 00:01:43.600
interesting ใน topic

00:01:43.600 --> 00:01:44.200
ของ session

00:01:44.200 --> 00:01:46.200
ก่อนๆ ที่เราพูดกันมาเนี่ย

00:01:46.200 --> 00:01:48.300
เมื่อก่อนเราไม่ค่อยมี

00:01:48.300 --> 00:01:49.000
event community

00:01:49.000 --> 00:01:50.800
ที่ไล่ทำแบบนี้กันเท่าไหร่

00:01:50.800 --> 00:01:55.200
เพราะว่าของแต่ละอย่างมันจะกระจัดกระจาย
ของ Creatorsgarten

00:01:55.200 --> 00:01:56.900
เราก็เลยมีการทำ trimming

00:01:56.900 --> 00:01:58.500
trim วิดีโอแต่ละ session

00:01:58.500 --> 00:01:59.200
post processing

00:01:59.200 --> 00:01:59.500
นิดหน่อย

00:01:59.500 --> 00:02:00.900
แล้วก็อัปโหลดขึ้นไปใน YouTube

00:02:00.900 --> 00:02:02.500
ด้วย

00:02:02.500 --> 00:02:04.800
แต่ก่อนที่จะเริ่มทำ stream ได้เนี่ย

00:02:04.800 --> 00:02:05.300
เราก็ต้อง

00:02:05.300 --> 00:02:06.800
set up อุปกรณ์ก่อนใช่ไหมครับผม

00:02:06.800 --> 00:02:09.400
อย่างเมื่อกี้ที่เกิดขึ้นเมื่อประมาณ

00:02:09.400 --> 00:02:11.000
1 ชั่วโมงที่แล้ว

00:02:11.000 --> 00:02:14.400
ซึ่งค่อนข้างเป็นของที่ระยงระยางอยู่

00:02:14.400 --> 00:02:16.200
คือการทำ archiving เนี่ย

00:02:16.200 --> 00:02:17.500
เป็นสิ่งที่ยากจริงๆ

00:02:17.500 --> 00:02:19.200
เพราะว่าเรามีอุปกรณ์หลายอย่างใช่ไหม

00:02:19.200 --> 00:02:23.300
ที่เราแบบไม่สามารถคาดคะเนได้

00:02:23.300 --> 00:02:24.700
เรามีคอมพิวเตอร์ speaker

00:02:24.700 --> 00:02:28.200
ที่อาจจะมีแค่สไลด์อย่างเดียว

00:02:28.200 --> 00:02:29.700
หรือว่าบาง speaker

00:02:29.700 --> 00:02:32.600
เนี่ย อาจจะต้องเล่นเสียงวิดีโอด้วย

00:02:32.600 --> 00:02:34.500
เราก็ไม่รู้ใช่ไหมว่าแบบ

00:02:34.500 --> 00:02:35.800
เอ

00:02:35.800 --> 00:02:37.700
เขาจะใช้หรือเปล่า อะไรอย่างนี้

00:02:37.700 --> 00:02:40.400
แล้วคราวนี้ เรื่องไมโครโฟนของ

00:02:40.400 --> 00:02:41.800
เรื่องไมโครโฟนที่ speaker

00:02:41.800 --> 00:02:43.000
ที่จะเอาไว้ใช้พูดอีก

00:02:43.000 --> 00:02:45.600
เพราะว่าถ้าเกิดในที่ Cleverse เนี่ย

00:02:45.600 --> 00:02:47.700
เราจัด Cleverse มาเยอะมากๆ

00:02:47.700 --> 00:02:49.600
ถ้าเคสแบบนี้ เรารู้และ

00:02:49.600 --> 00:02:51.700
เราชินแล้วว่าแบบ เออ

00:02:51.700 --> 00:02:53.200
set up ที่เนี่ย หน้าตาเป็นยังไง

00:02:53.200 --> 00:02:57.200
แต่เมื่อไหร่ก็ตาม เวลาเราย้ายไป venue อื่น
ที่สถานที่อื่นๆ

00:02:57.200 --> 00:02:59.200
อันนี้ เป็นสิ่งที่เรียกว่า

00:03:02.400 --> 00:03:03.500
uncharted space และ

00:03:03.500 --> 00:03:06.500
ก็คือว่า เราไม่รู้ว่าพื้นที่เขาอะ
มีอะไร provide ไว้ให้บ้าง

00:03:06.500 --> 00:03:08.000
ซึ่งมันก็จะเป็นความเสี่ยงของเราอีก

00:03:08.000 --> 00:03:09.300
ถ้าเกิดเขาไม่มีไมค์ให้ อ้าว

00:03:09.300 --> 00:03:10.500
แล้วเราจะหาไมค์จากไหน

00:03:10.500 --> 00:03:12.300
เราจะหาทันไหม อะไรยังไง

00:03:12.300 --> 00:03:14.100
แล้วอีกอย่างหนึ่งก็คือว่า

00:03:14.100 --> 00:03:15.200
เราจะ full control ได้ไหม

00:03:15.200 --> 00:03:15.900
ถ้าเกิดว่าแบบ

00:03:15.900 --> 00:03:18.300
ผมพูดดังเกินไป อะไรแบบนี้ครับ

00:03:18.300 --> 00:03:19.200
มันเป็น

00:03:19.200 --> 00:03:20.900
คือเราไม่สามารถ control เสียง

00:03:20.900 --> 00:03:21.500
เราไม่สามารถ control

00:03:21.500 --> 00:03:23.700
เสียง output ได้

00:03:23.700 --> 00:03:25.000
คำตอบคืออะไร?

00:03:25.000 --> 00:03:29.900
คำตอบของการแก้ปัญหานี้ คือการใช้เงิน

00:03:29.900 --> 00:03:33.600
เรา Creatorsgarten เนี่ย

00:03:33.600 --> 00:03:35.000
แต่ละ session แต่ละ event เนี่ย

00:03:35.000 --> 00:03:37.800
เรารับเงิน sponsor

00:03:37.800 --> 00:03:39.500
มาจากหลายเจ้ามาก ซึ่ง

00:03:39.500 --> 00:03:44.000
เราก็ใช้กันเกือบหมดแหละ

00:03:44.000 --> 00:03:46.700
แต่อันไหนเราใช้ไม่หมด เราก็เก็บ

00:03:46.700 --> 00:03:48.800
เราก็เก็บ sum เอาไว้ แล้ว

00:03:48.800 --> 00:03:52.900
sum เป็น pool เราก็เอางบประมาณตรงนี้มา

00:03:52.900 --> 00:03:53.700
improve

00:03:53.700 --> 00:03:55.300
ระบบ workflow ของเรา

00:03:55.300 --> 00:04:01.100
ก็เราก็ simplify ทุกอย่างเลยครับผม
ตัววิดีโอเนี่ย เราก็ feed เข้าไปในตัว ATEM Mini

00:04:01.100 --> 00:04:04.400
ซึ่งตัว ATEM เนี่ย เราก็

00:04:04.400 --> 00:04:10.000
output มาทั้งวิดีโอ
ภาพที่ออกโปรเจคเตอร์บนจอแบบนี้

00:04:10.000 --> 00:04:15.600
และเสียงที่ไหลเข้าซอฟต์แวร์
บน Mac Mini ครับผม

00:04:15.600 --> 00:04:16.000
เอ่อ

00:04:16.000 --> 00:04:19.600
แต่ว่าบางทีเนี่ย solution ที่เราออกแบบมาดีแล้วอะ

00:04:19.600 --> 00:04:21.600
บางทีอาจจะดีไม่พอ

00:04:21.600 --> 00:04:23.000
เพราะว่าเรารับเสียง

00:04:23.000 --> 00:04:27.700
ไป stream ได้ใช่ไหม-
เอ้ย เรารับเสียงออกลำโพง venue ได้

00:04:27.700 --> 00:04:29.700
แต่ว่าบางทีอะ เขาไม่มีอุปกรณ์

00:04:29.700 --> 00:04:32.100
เพื่อแบบ feed เข้าคอมฯ ได้

00:04:32.100 --> 00:04:35.100
บางทีก็แบบ- (หัวเราะ)

00:04:35.100 --> 00:04:38.200
บางทีก็

00:04:38.200 --> 00:04:38.900
hotfix

00:04:38.900 --> 00:04:41.200
เราก็ hotfix ไป

00:04:41.200 --> 00:04:43.200
คือมันใช้งานได้ไหม ใช้งานได้ แต่มันดีไหม

00:04:43.200 --> 00:04:44.200
ไม่ดี แต่ว่า

00:04:44.200 --> 00:04:45.200
Ain’t broke, don’t fix

00:04:45.200 --> 00:04:49.200
ถ้ามันใช้งานได้ ก็ไม่ต้องไปแก้

00:04:49.200 --> 00:04:52.000
แล้วคราวนี้

00:04:52.000 --> 00:04:54.800
เวลาเราไปแต่ละ venue เนี่ย
เราก็มีการ logging ไว้ด้วยว่า

00:04:54.800 --> 00:04:59.600
การไปใช้สถานที่นี้ เขามีอุปกรณ์อะไรให้เราบ้าง
เพราะเวลาเราไปจัดที่ไหนซ้ำๆ

00:04:59.600 --> 00:05:02.800
เราก็จะได้ไม่ต้องไปถามเขาอีกว่ามีอุปกรณ์อะไรบ้าง

00:05:02.800 --> 00:05:03.600
โอเค

00:05:03.600 --> 00:05:10.000
คราวนี้ พอเรา record session live stream
เสร็จแล้วเนี่ย live stream หนึ่ง
ก็อาจจะแบบ 3 ชั่วโมง

00:05:10.000 --> 00:05:16.300
อาจจะแบบ 3-5 ชั่วโมง
ซึ่งไฟล์ที่ออกมาจาก OBS อะ มันใหญ่มากๆ
แบบ 32 GB ซึ่งไซส์เนี้ย

00:05:16.300 --> 00:05:22.800
มันไม่สามารถที่จะเอาเข้าไปตัดใน Final Cut ได้ตรงๆ
เพราะว่าถ้าเกิดยัดเข้าไปใน Final Cut อะ ค้างแน่นอน

00:05:22.800 --> 00:05:24.800
แปลว่าเราก็ต้องเอาไปนั่ง

00:05:24.800 --> 00:05:26.300
เราก็ต้องมานั่ง optimize ก่อน

00:05:26.300 --> 00:05:28.500
ซึ่งคำตอบตรงนี้

00:05:28.500 --> 00:05:30.900
เรามี preset command ffmpeg

00:05:30.900 --> 00:05:32.000
ที่เป็น

00:05:32.000 --> 00:05:33.800
preset แบบเสร็จสมบูรณ์แล้ว

00:05:33.800 --> 00:05:35.100
เรา re-encode

00:05:35.100 --> 00:05:36.000
จาก

00:05:36.000 --> 00:05:40.400
archive ที่เป็น H.264 ไป H.265

00:05:40.400 --> 00:05:43.500
ขนาดลงจาก 32 GB เหลือ 5 GB

00:05:43.500 --> 00:05:45.000
ซึ่งเป็นขนาดที่ sustainable

00:05:45.000 --> 00:05:47.200
พอที่เราสามารถเอาไปตัดใน

00:05:47.200 --> 00:05:48.700
Final Cut ได้

00:05:48.700 --> 00:05:50.800
แล้วก็ archive ไว้ใน

00:05:50.800 --> 00:05:51.800
physical NAS ด้วย

00:05:51.800 --> 00:05:54.500
เผื่อใน event วันไหนเกิดขึ้นว่า

00:05:54.500 --> 00:05:56.300
เพจ Creatorsgarten

00:05:56.300 --> 00:05:58.400
กลายเป็นช่อง

00:05:58.400 --> 00:06:01.900
live stream Elon Musk แทน

00:06:01.900 --> 00:06:03.100
เราก็มีเคสสำรอง

00:06:03.100 --> 00:06:04.300
เราก็มีเคสฉุกเฉิน

00:06:04.300 --> 00:06:05.400
โอเค

00:06:05.400 --> 00:06:08.400
เราอัดวิดีโอแล้ว

00:06:08.400 --> 00:06:09.800
เราตัดวิดีโอแล้ว

00:06:09.800 --> 00:06:11.400
คราวนี้เราอัปโหลดขึ้น YouTube

00:06:11.400 --> 00:06:13.400
แต่พออัปโหลดเสร็จแล้วเนี่ย

00:06:13.400 --> 00:06:15.700
เราก็ต้องมานั่ง manage content

00:06:15.700 --> 00:06:16.600
อีกใช่ไหมครับผม

00:06:16.600 --> 00:06:17.500
ซึ่งการ manage

00:06:17.500 --> 00:06:20.300
ก็เป็นสิ่งที่ยากกว่าเดิมอีก

00:06:20.300 --> 00:06:21.900
ยากกว่าหลายๆ

00:06:21.900 --> 00:06:22.800
อย่างที่ผมพูดเล่ามา

00:06:22.800 --> 00:06:23.800
เพราะว่าอะไร?

00:06:23.800 --> 00:06:27.100
เพราะว่าในวิดีโอที่เราทำ

00:06:27.100 --> 00:06:28.300
มันจะมี consistency

00:06:28.300 --> 00:06:32.200
ในตัวเอง ก็คือว่าตัววิดีโอ

00:06:32.200 --> 00:06:36.000
มันจะมี consistency ในตัววิดีโอ title
ว่าเราขึ้นต้นด้วย session

00:06:36.000 --> 00:06:42.500
แล้วตามด้วย speaker หรือบางทีถ้าเป็น stream
ก็เป็นอีก format หนึ่ง

00:06:42.500 --> 00:06:48.500
ถ้าเกิดว่าเป็น session แบบหลายๆ คน

00:06:48.500 --> 00:06:53.500
เราก็ไม่สามารถใส่ชื่อหลายคนในวิดีโอได้
แล้วก็ต้องใส่ไว้อีกเป็นอีก format หนึ่ง

00:06:53.500 --> 00:06:54.800
ซึ่งของอะไรแบบนี้

00:06:54.800 --> 00:06:57.800
จริงๆ ของพวกนี้ เราอาจจะ manage

00:06:57.800 --> 00:06:59.400
ทำเองด้วยมือก็ได้ใช่ไหม

00:06:59.400 --> 00:07:00.900
แต่ว่ามันอาจจะลำบากเกินไป

00:07:00.900 --> 00:07:02.100
แล้วคราวนี้

00:07:02.100 --> 00:07:03.300
แล้วถ้าเกิดมี subtitle

00:07:03.300 --> 00:07:04.900
มาอีกอะ อ้าว โอ้โห

00:07:04.900 --> 00:07:06.700
แล้วเราจะจัดการยังไง

00:07:06.700 --> 00:07:07.900
โอเค เราก็เลย

00:07:07.900 --> 00:07:10.300
พี่ไทก็เลย

00:07:10.300 --> 00:07:11.200
ก็เลย ก็เลย

00:07:11.200 --> 00:07:11.800
craft tooling

00:07:11.800 --> 00:07:13.800
ขึ้นมาอันหนึ่งใน repo ของเราชื่อว่า

00:07:13.800 --> 00:07:14.900
videos ครับผม

00:07:14.900 --> 00:07:18.900
ซึ่งตัวนี้ ก็คือว่าเราสามารถจัดการ

00:07:18.900 --> 00:07:21.600
เราจะจัดการ

00:07:21.600 --> 00:07:23.200
video

00:07:23.200 --> 00:07:24.700
metadata ทั้งหมดผ่าน

00:07:24.700 --> 00:07:27.600
repository ได้เลย

00:07:27.600 --> 00:07:30.900
แล้วตัว bot ก็จะไป take effect แทน

00:07:30.900 --> 00:07:33.500
ก็เวลาเรา manage- หูว-

00:07:33.500 --> 00:07:34.200
เวลาเรา manage

00:07:34.200 --> 00:07:36.300
แต่ละ session เนี่ยครับผม

00:07:36.300 --> 00:07:38.000
เราก็สามารถสร้างเป็นไฟล์ markdown

00:07:38.000 --> 00:07:40.200
ที่มีข้อมูลเป็น YAML

00:07:40.200 --> 00:07:40.900
metadata

00:07:40.900 --> 00:07:42.900
ได้ว่าแบบ title

00:07:42.900 --> 00:07:44.500
เป็น title นี้

00:07:44.500 --> 00:07:46.400
เป็น speaker คนนี้

00:07:46.400 --> 00:07:47.600
effect กับ YouTube ID

00:07:47.600 --> 00:07:48.900
นี้ หน้าตาเป็นยังไง

00:07:48.900 --> 00:07:50.100
แล้วก็ video description

00:07:50.100 --> 00:07:52.500
อะไรเนี่ยก็ใส่ไป

00:07:52.500 --> 00:07:53.400
แล้วเวลา

00:07:53.400 --> 00:07:54.200
บางวิดีโอ

00:07:54.200 --> 00:07:57.200
ที่แบบเป็นเคสพิเศษ

00:07:57.200 --> 00:07:58.700
อย่างเช่น แบบเป็น session

00:07:58.700 --> 00:07:59.200
hackathon

00:07:59.200 --> 00:07:59.600
อะไรอย่างนี้

00:07:59.600 --> 00:08:03.200
เราก็สามารถเขียน code เพื่อ

00:08:03.200 --> 00:08:04.300
เพื่อดักเฉพาะ type

00:08:04.300 --> 00:08:07.100
แล้วก็ take effect video title

00:08:07.100 --> 00:08:10.400
ที่หน้าตาต่างกันได้

00:08:10.400 --> 00:08:12.900
ส่วนตัว subtitle

00:08:12.900 --> 00:08:14.800
การ manage subtitle เนี่ย

00:08:14.800 --> 00:08:16.800
เราไม่จำเป็นต้องมานั่งเก็บไฟล์เอง

00:08:16.800 --> 00:08:19.800
เก็บไฟล์ local เอง หรือว่าเก็บ
หรือว่าฝากกับ YouTube ไว้ตลอดเวลา

00:08:19.800 --> 00:08:20.900
เราอาจจะแบบ-

00:08:20.900 --> 00:08:23.700
ซึ่งในเคสนี้ ใน repo videos เนี่ย

00:08:23.700 --> 00:08:24.800
เราก็สามารถอัปโหลด

00:08:24.800 --> 00:08:26.500
ไฟล์ subtitle

00:08:26.500 --> 00:08:27.700
ที่เป็น format VTT

00:08:27.700 --> 00:08:29.100
ซึ่งเป็น

00:08:29.100 --> 00:08:30.600
global standard เนี่ย

00:08:30.600 --> 00:08:31.500
ใส่เข้าไป

00:08:31.500 --> 00:08:34.000
แล้วก็ป้อนออกมาเป็น subtitle

00:08:34.000 --> 00:08:36.600
ได้เลย

00:08:36.600 --> 00:08:38.600
คราวนี้อีกอย่างหนึ่งก็

00:08:38.600 --> 00:08:40.700
อีกระบบหนึ่งที่เรามี

00:08:40.700 --> 00:08:47.800
ที่สังเกตเรื่อง consistency ไม่ได้มีแค่เรื่องแบบ
video title และ description อย่างเดียว

00:08:47.800 --> 00:08:49.200
แต่ว่ามีในส่วนของ

00:08:49.200 --> 00:08:50.300
video thumbnail ด้วย

00:08:50.300 --> 00:08:52.900
ก็คือตอนแรกๆ เมื่อก่อนนะครับผม

00:08:52.900 --> 00:08:55.000
thumbnail ตั้งใจว่าแบบว่า

00:08:55.000 --> 00:09:01.100
จะทำให้แต่ละ event หน้าตาไม่เหมือนกัน
เราจะได้แยกออกว่า event นี้คือ event นี้

00:09:01.100 --> 00:09:07.400
แต่ว่าพอไปๆ มาๆ ครับผม พี่ไทก็แนะนำว่า
เราทำให้มันแบบมี consistency

00:09:07.400 --> 00:09:12.400
เหมือนกับช่องสอนวิดีโอเกมมิ่งของ Sakurai นะครับผม

00:09:12.400 --> 00:09:13.200
ก็

00:09:13.200 --> 00:09:17.000
solutions ที่ได้มาครับผม
ไม่ได้เป็นการ automate อะไรฮะ แต่ว่า

00:09:17.000 --> 00:09:17.900
เราเป็นการใช้

00:09:17.900 --> 00:09:20.900
ระบบ templating ของ Figma ครับผม

00:09:20.900 --> 00:09:23.000
ก็คือแต่ละวิดีโอ

00:09:23.000 --> 00:09:25.700
เรามีเป็น preset template อยู่แล้วว่า

00:09:25.700 --> 00:09:26.700
เราสามารถ-

00:09:26.700 --> 00:09:29.500
เรามี header ข้างบนนี้

00:09:29.500 --> 00:09:31.400
เราใส่ภาพวิดีโอเข้าไปด้านหลัง

00:09:31.400 --> 00:09:33.700
แล้วก็ตัว-

00:09:33.700 --> 00:09:35.500
แล้วเราก็ใส่ text catch แล้วก็ใส่

00:09:35.500 --> 00:09:37.700
text เอาไว้แบบว่าเหมือนเป็น

00:09:37.700 --> 00:09:40.800
เขาเรียกว่า catchphrase สักสองบรรทัดอะไรประมาณนี้

00:09:40.800 --> 00:09:43.100
ซึ่งบวกกับระบบ Figma

00:09:43.100 --> 00:09:45.300
เป็นระบบที่แบบว่า

00:09:45.300 --> 00:09:46.400
versatile

00:09:46.400 --> 00:09:47.200
มากๆ

00:09:47.200 --> 00:09:51.700
ในระดับที่ว่าเราสามารถสร้าง header ข้างบนเป็น component ได้

00:09:51.700 --> 00:09:53.100
แล้วเวลาเราเข้าไปแก้

00:09:53.100 --> 00:09:54.200
component อะไรสักอย่าง

00:09:54.200 --> 00:09:55.900
แล้วเวลาเราเข้าไปแก้ component

00:09:55.900 --> 00:09:57.200
เนี่ย มันก็จะ take effect

00:09:57.200 --> 00:09:59.000
กับทุกวิดีโอเลยทีเดียว

00:09:59.000 --> 00:10:00.400
เราไม่จำเป็นต้องมา

00:10:00.400 --> 00:10:02.100
เราไม่จำเป็นต้องมานั่งแก้

00:10:02.100 --> 00:10:04.500
header ของทีละอันๆ

00:10:04.500 --> 00:10:08.500
แล้วพอไฟล์ทั้งหมดนี้ครับผม

00:10:08.500 --> 00:10:12.300
พอไฟล์ทั้งหมดนี้เราคลุกกันเสร็จแล้ว

00:10:12.300 --> 00:10:13.000
เราก็จะ run

00:10:13.000 --> 00:10:14.000
event เราก็จะ

00:10:14.000 --> 00:10:17.600
run event ใน GitHub Actions

00:10:17.600 --> 00:10:19.100
ซึ่ง event GitHub Actions

00:10:19.100 --> 00:10:20.300
ก็จะไป take effect ใน YouTube

00:10:20.300 --> 00:10:21.200
อีกทีหนึ่ง

00:10:21.200 --> 00:10:22.700
คราวนี้เราทำระบบ

00:10:22.700 --> 00:10:24.700
ไปทั้งหมดเนี่ย

00:10:24.700 --> 00:10:27.700
คือทำไปทำไม

00:10:27.700 --> 00:10:29.200
นั่นสินะ

00:10:29.200 --> 00:10:35.900
แต่ว่าเราทำไป เพราะว่าเรื่องเกี่ยวกับ ownership

00:10:35.900 --> 00:10:42.000
คือ Creatorsgarten เราเป็นกลุ่มที่
เราเรียกว่าเป็นกลุ่มที่ open source หลายอย่างมาก

00:10:42.000 --> 00:10:46.600
ขนาด financial ว่าเราใช้เงินยังไงอะ เราก็ open source

00:10:46.600 --> 00:10:47.800
มีเว็บอยู่

00:10:47.800 --> 00:10:50.600
แต่ว่าการ open source content

00:10:50.600 --> 00:10:52.100
พวกนี้ เราไม่สามารถที่จะแบบ

00:10:52.100 --> 00:10:53.000
grant

00:10:53.000 --> 00:10:54.100
grant คนดูทุกคน

00:10:54.100 --> 00:10:54.800
เป็น

00:10:54.800 --> 00:10:55.900
owner ช่อง

00:10:55.900 --> 00:10:57.700
Creatorsgarten ได้ใช่ไหม

00:10:57.700 --> 00:11:03.800
เราไม่สามารถให้ ownership ในระดับนั้นได้
แต่สิ่งที่เราทำได้คือ เราเอา repo videos เนี่ย
ไปเป็น open source

00:11:03.800 --> 00:11:10.800
แล้วเวลาใครอยากจะ make change อะไรในวิดีโอ
ก็สามารถส่ง pull request ขึ้นมา

00:11:10.800 --> 00:11:15.800
เพื่อที่จะแก้ไข content ในช่อง YouTube ได้จริงๆ

00:11:15.800 --> 00:11:18.300
อันนี้คือ concept ของตัว

00:11:18.300 --> 00:11:19.500
repo ของ videos

00:11:19.500 --> 00:11:21.700
แต่จริงๆ แล้ว

00:11:21.700 --> 00:11:22.900
เรา utilize

00:11:22.900 --> 00:11:24.400
GitHub กับอีก feature หนึ่งด้วย

00:11:24.400 --> 00:11:25.900
ก็คือ channel banner

00:11:25.900 --> 00:11:27.700
channel banner ของ YouTube

00:11:27.700 --> 00:11:28.900
ซึ่ง banner ของ YouTube

00:11:28.900 --> 00:11:29.600
เนี่ย

00:11:29.600 --> 00:11:32.100
ผมตั้งใจว่าจะให้มัน adapt

00:11:32.100 --> 00:11:33.500
ไปตามแต่ละ event

00:11:33.500 --> 00:11:34.800
ก็คือว่าพอมี event นี้ก็จะ

00:11:34.800 --> 00:11:36.400
adapt ก็จะ adapt ไปอีกสไตล์หนึ่ง

00:11:36.400 --> 00:11:36.800
อะไรอย่างนี้

00:11:36.800 --> 00:11:37.400
แต่ว่าตอนนี้

00:11:37.400 --> 00:11:38.700
concept ยังไม่เสร็จ

00:11:38.700 --> 00:11:40.600
แต่ว่า

00:11:40.600 --> 00:11:42.200
เราจะใช้ Affinity

00:11:42.200 --> 00:11:42.900
หรือ Photoshop

00:11:42.900 --> 00:11:44.800
มานั่งลาก

00:11:44.800 --> 00:11:45.100
event

00:11:45.100 --> 00:11:49.100
ใหม่ใส่เข้าไปตลอดเวลาไม่ได้

00:11:49.100 --> 00:11:50.400
มันเสียเวลา

00:11:50.400 --> 00:11:53.000
เราเป็นสายขี้เกียจ

00:11:53.000 --> 00:11:54.400
อืม เพราะฉะนั้น

00:11:55.400 --> 00:11:57.500
เราก็มีอีก repo หนึ่ง

00:11:57.500 --> 00:11:59.300
ที่ชื่อว่า banner

00:11:59.300 --> 00:12:02.600
ซึ่ง concept ง่ายๆ เลยก็คือว่า
เว็บข้างในอะ เรารันเป็น SvelteKit

00:12:02.600 --> 00:12:04.200
เสร็จแล้ว พอเวลา

00:12:04.200 --> 00:12:06.200
trigger event วันเนี้ย

00:12:06.200 --> 00:12:10.100
ก็ Puppeteer ก็เข้าไป

00:12:10.100 --> 00:12:12.600
fetch เป็นหน้าเว็บ

00:12:12.600 --> 00:12:20.400
capture ทั้งหน้าเว็บ กลายเป็นรูปภาพ เสร็จแล้ว
ก็เอารูปนั้นอัปขึ้นไปใน YouTube ใน API ของ YouTube

00:12:20.400 --> 00:12:25.500
ซึ่ง action ตัวเนี้ย
ก็รัน consistency อยู่เรื่อยๆ

00:12:25.500 --> 00:12:34.200
อันเนี้ย ก็จะเป็นตัวอย่างการใช้งาน
เอ่อ การใช้งานของเราเหมือนกัน
ก็เดี๋ยวพาดูอะไรเล็กน้อย

00:12:34.200 --> 00:12:35.200
โอเค

00:12:35.200 --> 00:12:37.000
ก็ตัวนี้ครับผม

00:12:37.000 --> 00:12:38.300
ก็จะมีอย่างตัวนี้ครับผม

00:12:38.300 --> 00:12:39.600
ตัววิดีโอ

00:12:39.600 --> 00:12:41.400
thumbnails ของวิดีโอเนาะ

00:12:41.400 --> 00:12:43.800
ก็เวลาเราแบบ จะสร้าง

00:12:43.800 --> 00:12:44.600
thumbnail

00:12:44.600 --> 00:12:45.700
ของ event ใหม่อะไรอย่างเงี้ย

00:12:45.700 --> 00:12:46.600
สิ่งที่ผมทำได้เนี่ย

00:12:46.600 --> 00:12:47.500
ผมก็แบบ อาจจะ

00:12:47.500 --> 00:12:50.000
ก๊อบ-วาง เพื่อแบบ align

00:12:50.000 --> 00:12:50.900
grid

00:12:50.900 --> 00:12:52.400
align grid มาก่อนใช่ไหม

00:12:52.400 --> 00:12:54.900
แล้วก็อยากได้ header

00:12:54.900 --> 00:12:56.700
อันนี้สักอันหนึ่ง

00:12:56.700 --> 00:12:58.200
พอเสร็จแล้ว

00:12:58.200 --> 00:13:00.200
สิ่งที่ผมทำได้คือ ผม

00:13:00.200 --> 00:13:06.000
detach ตัวนี้ออกไป

00:13:06.000 --> 00:13:09.800
เป็นการ full demo

00:13:09.800 --> 00:13:11.100
เอ๊ะ ปุ่มลบเขา-

00:13:11.100 --> 00:13:15.900
เขาย้ายปุ่มลบทิ้งไปเหรอ

00:13:15.900 --> 00:13:19.500
ช่างมันแล้วกันครับ

00:13:19.500 --> 00:13:26.000
ช่างมันแล้วกันครับ เราไม่สร้างใหม่ก็ได้
แต่สิ่งที่โชว์ให้ดูได้คือการ edit แบบเมื่อกี้ครับผม

00:13:26.000 --> 00:13:33.600
ก็คือตัวอย่าง Side Projects Showdown
เราอาจจะเปลี่ยนใหม่ กลายเป็น Code Golf Party

00:13:33.600 --> 00:13:36.100
ก็ถ้าเกิดเรายิ่งมีวิดีโอเยอะครับผม

00:13:36.100 --> 00:13:38.200
ก็จะเห็นว่าเวลาเราแก้…

00:13:39.300 --> 00:13:40.200
เวลาเราแก้

00:13:40.200 --> 00:13:41.000
component ไปทีเดียว

00:13:41.000 --> 00:13:42.700
มันก็ take effect กับทุกที่เลย

00:13:42.700 --> 00:13:44.600
สิ่งที่ผมต้องทำที่เหลือ แค่นี้

00:13:44.600 --> 00:13:45.900
ตอนนี้ก็แค่แบบ

00:13:45.900 --> 00:13:47.700
หยิบเฟรมนี้ออกมา

00:13:47.700 --> 00:13:48.700
export มา

00:13:49.700 --> 00:13:51.800
เป็นเฟรม เสร็จแล้วก็ได้

00:13:51.800 --> 00:13:52.500
result

00:13:52.500 --> 00:13:55.800
เสร็จแล้วก็ได้ result เป็น thumbnail
ที่พร้อมที่จะไป publish แล้ว

00:13:55.800 --> 00:13:58.800
ก็พอผมได้ไฟล์แบบนี้มาใช่ไหม
ก็ตัวอย่างเช่น ตัว

00:13:58.800 --> 00:14:01.200
repo ของ repo video

00:14:01.200 --> 00:14:05.000
สิ่งที่ผมทำได้ก็คือว่า เนี่ยฮะ ผมก็

00:14:05.000 --> 00:14:05.800
ผมก็เข้าไปใน

00:14:05.800 --> 00:14:08.300
repo video

00:14:08.300 --> 00:14:16.400
แล้วคราวนี้ เวลาไฟล์ของ session ไหน
ที่ผมต้องการจะอัปเดต

00:14:16.400 --> 00:14:17.000
thumbnail

00:14:17.000 --> 00:14:19.700
ผมก็เอาไฟล์ JPEG นี้

00:14:19.700 --> 00:14:21.200
ทับเข้าไป

00:14:21.200 --> 00:14:22.300
เสร็จแล้วก็

00:14:22.300 --> 00:14:23.500
push ขึ้นไปใหม่

00:14:23.500 --> 00:14:25.000
action trigger 1 นาที

00:14:25.000 --> 00:14:25.900
แล้วก็ take change

00:14:25.900 --> 00:14:27.300
ใน YouTube ทันที

00:14:27.300 --> 00:14:28.700
ก็อะไรประมาณนี้

00:14:28.700 --> 00:14:31.100
ครับผม

00:14:31.100 --> 00:14:35.900
ออกกลับมาก่อน

00:14:35.900 --> 00:14:37.600
ก็อันนี้คือ process

00:14:37.600 --> 00:14:39.900
ทำวิดีโอของเราแบบสั้นๆ เนาะ

00:14:39.900 --> 00:14:44.800
แต่ตอนนี้ เราจะเป็นส่วนของ part ที่ 2 แล้ว
เกี่ยวกับว่าเรา manage content-

00:14:44.800 --> 00:14:47.300
เรา manage content ใน

00:14:47.300 --> 00:14:47.800
wiki engine

00:14:47.800 --> 00:14:49.900
ของ Creatorsgarten ยังไง ซึ่ง

00:14:49.900 --> 00:14:54.200
ซึ่งตัว session นี้ ผมก็จะอัญเชิญพี่ไทขึ้นมา
ขึ้นมาอธิบายครับผม

00:14:54.200 --> 00:14:55.400
เชิญเลยฮะ

00:14:55.400 --> 00:14:56.900
ครับ

00:14:56.900 --> 00:14:57.700
ครับ

00:14:57.700 --> 00:14:59.200
ขอบคุณน้องริฟฟี่นะครับ

00:14:59.200 --> 00:15:02.300
ก่อนผมจะเริ่มนะ ขอเสียงปรบมือให้น้องริฟฟี่ดังๆ นะครับ

00:15:02.300 --> 00:15:04.900
เพราะว่า content ใน channel ตลอด

00:15:04.900 --> 00:15:06.000
2-3 หลายๆ

00:15:06.000 --> 00:15:08.900
เดือนที่ผ่านมา น้องริฟฟี่เป็นคน manage เอง

00:15:08.900 --> 00:15:15.000
เกือบทั้งหมดเลย ก็คือผมก็ set ระบบไว้
ทำพวก Figma ทำอะไรพวกนี้

00:15:15.000 --> 00:15:19.000
แล้วก็น้องริฟฟี่ก็คือ ทำงานที่เขาเรียกว่าค่อนข้างถึกแล้วกัน

00:15:19.000 --> 00:15:23.400
คอยตัดคลิปออกมา คอยเช็กเสียงว่าเสียงมันโอเคไหม อะไรพวกนี้

00:15:23.400 --> 00:15:28.900
แล้วก็อัปโหลดขึ้น YouTube ทำ thumbnail อะไรพวกนี้
คือแบบ ถึงเรามี automation

00:15:28.900 --> 00:15:31.300
แต่ก็ต้องยอมรับว่างานพวกนี้มันถึกมากๆ

00:15:31.300 --> 00:15:32.500
ก็

00:15:32.500 --> 00:15:32.800
channel

00:15:32.800 --> 00:15:34.400
เราจะไม่โตขนาดนี้ถ้าไม่มีริฟฟี่

00:15:34.400 --> 00:15:35.400
ครับ ก็ต้องขอบคุณ

00:15:35.400 --> 00:15:36.700
ริฟฟี่มากๆ

00:15:36.700 --> 00:15:37.200
ครับ

00:15:37.200 --> 00:15:39.100
แล้วใครยังไม่ได้ไป subscribe

00:15:39.100 --> 00:15:40.600
channel Creatorsgarten นะครับ

00:15:40.600 --> 00:15:41.900
รบกวนช่วยไป subscribe

00:15:41.900 --> 00:15:42.600
กันด้วยนะครับ

00:15:42.600 --> 00:15:43.400
เราอยากจะมี-

00:15:43.400 --> 00:15:46.100
เราอยากจะให้ content ของเราได้

00:15:46.100 --> 00:15:48.300
ได้แบบมีคนดูกันนะครับ

00:15:48.300 --> 00:15:49.400
อะไรนะครับ?

00:15:49.400 --> 00:15:53.300
อ้า อยากได้โล่ - ตอนนี้เรามี
ประมาณ 200 กว่าคนแล้ว

00:15:53.300 --> 00:15:54.000
ฮ่าๆๆๆ

00:15:54.000 --> 00:15:58.700
400 แล้วใช่ไหมครับ อ่า ครับ
ก็คืออันนี้ก็เป็น-

00:15:58.700 --> 00:16:04.800
อีกเรื่องหนึ่ง ก็คือนอกจากเราแบบ run event
แล้ว live งานของเราเองเนี่ย

00:16:04.800 --> 00:16:08.700
เราก็แบบมี partner กับ organizer

00:16:08.700 --> 00:16:09.800
เจ้าอื่นๆ นะครับ

00:16:09.800 --> 00:16:11.300
อย่างรอบนี้ของ Microsoft

00:16:11.300 --> 00:16:13.400
ใช่ไหม Spark Tech ใช่ไหมครับ

00:16:13.400 --> 00:16:16.200
ก็เนี่ย เราก็มา

00:16:16.200 --> 00:16:17.800
เราก็มาช่วย live แล้วก็มา

00:16:17.800 --> 00:16:20.000
grow channel นะครับ งั้นก็

00:16:20.000 --> 00:16:22.400
ก็หวังว่าจะเป็นประโยชน์ครับ

00:16:22.400 --> 00:16:23.600
คราวนี้

00:16:23.600 --> 00:16:26.100
สำหรับหัวข้อ part

00:16:26.100 --> 00:16:30.900
part หลังนะครับ จะเป็นเกี่ยวกับตัวเว็บไซต์
Creatorsgarten นะครับ ที่เรา

00:16:30.900 --> 00:16:31.900
อ่า

00:16:31.900 --> 00:16:33.100
ที่เรามีนะครับ

00:16:33.100 --> 00:16:35.400
อันนี้จะเป็นเว็บ Creatorsgarten นะครับ

00:16:35.400 --> 00:16:37.000
creatorsgarten.org นะครับ

00:16:37.000 --> 00:16:39.100
ก็ให้ดู feature คร่าวๆ ก่อนนะ

00:16:39.100 --> 00:16:40.100
ก็จะมีหน้าหลัก

00:16:40.100 --> 00:16:43.600
มีหน้าที่รวบรวม event ต่างๆ นะครับ

00:16:43.600 --> 00:16:45.700
แล้วก็มีสิ่งที่เรียกว่า

00:16:45.700 --> 00:16:46.200
wiki

00:16:46.200 --> 00:16:49.100
wiki เนี่ย ก็จะเหมือนเป็นคลังความรู้ของเรา

00:16:49.100 --> 00:16:50.100
ที่แบบ

00:16:50.100 --> 00:16:52.500
อะไรก็ตามที่เป็นความรู้ที่เรา

00:16:52.500 --> 00:16:56.700
สามารถ public ได้เนี่ย เราก็จะพยายามเอามาใส่ไว้ที่ตรงนี้นะครับ

00:16:56.700 --> 00:17:01.400
อย่างเช่น เรื่องการ set up streaming เนี่ย

00:17:01.400 --> 00:17:09.200
อ่า ก็คือเมื่อก่อนเนี่ย ก็จะมีผมกับริฟฟี่ช่วยกันทำ
แต่ตอนนี้ เราก็เริ่มถ่ายทอดความรู้ให้หลายๆ คน

00:17:09.200 --> 00:17:11.500
จะได้มาช่วยกัน stream งานต่างๆ

00:17:11.500 --> 00:17:12.500
นะครับ เนี่ย

00:17:12.500 --> 00:17:15.300
ริฟฟี่เขาก็เขียนใน wiki ไว้ว่าวิธีการเตรียม

00:17:15.300 --> 00:17:15.800
อ่า

00:17:15.800 --> 00:17:18.200
พวก set up OBS อะไรต่างๆ เนี่ยทำยังไง

00:17:18.200 --> 00:17:19.700
พวกนี้ก็อยู่ใน wiki นะครับ

00:17:19.700 --> 00:17:21.500
ซึ่งระบบ wiki เนี่ย

00:17:21.500 --> 00:17:23.800
อ่า ก็จะเป็นหัวข้อของ talk อันนี้นะครับ

00:17:23.800 --> 00:17:30.400
เพราะว่าเว็บ Creatorsgarten เนี่ย
เราเขียนระบบ custom wiki system ไว้ใช้เองนะครับ

00:17:30.400 --> 00:17:32.100
คำถามคือ เออ

00:17:32.100 --> 00:17:32.600
จริงๆ

00:17:32.600 --> 00:17:34.000
ของพวกนี้มันก็มีเยอะอยู่แล้วนะ

00:17:34.000 --> 00:17:37.800
ทำไมเราถึงต้องเขียนใช้เองด้วยนะครับ

00:17:37.800 --> 00:17:39.800
โอเค คือ

00:17:39.800 --> 00:17:41.200
กว่าเราจะมาถึงจุดนี้นะ

00:17:41.200 --> 00:17:43.400
เราก็ได้ลองดูหลายๆ

00:17:43.400 --> 00:17:44.300
solution นะครับ

00:17:44.300 --> 00:17:46.600
เราจะไปจัด solution ที่เก่าแก่

00:17:46.600 --> 00:17:49.400
จนถึง solution ที่ modern สุด

00:17:49.400 --> 00:17:52.200
อย่างแรกก็คือ พวกโปรแกรมที่เป็น

00:17:52.200 --> 00:17:54.400
wiki software แบบ classic นะครับ

00:17:54.400 --> 00:17:55.700
อย่างเช่น MediaWiki

00:17:55.700 --> 00:17:56.500
DokuWiki

00:17:56.500 --> 00:17:59.400
PMWiki อะไรพวกนี้นะครับ

00:17:59.400 --> 00:18:00.500
โปรแกรมพวกนี้

00:18:00.500 --> 00:18:01.300
อย่างแรกคือ

00:18:01.300 --> 00:18:02.700
มันแก้ง่าย

00:18:02.700 --> 00:18:04.400
อันนี้เป็นจุดที่ผมชอบมากๆ เลย

00:18:04.800 --> 00:18:06.800
คือถ้าเราอยากจะแก้เพจ เพจไหนนะ

00:18:06.800 --> 00:18:08.200
เรากดปุ่ม edit

00:18:08.200 --> 00:18:12.100
พิมพ์ แล้วก็ save ได้เลย

00:18:12.100 --> 00:18:13.500
มันมีสิ่งที่เรียกว่า the wiki way ครับ

00:18:14.000 --> 00:18:16.000
เขาบอกว่า

00:18:16.000 --> 00:18:17.200
จิตวิญญาณของ wiki

00:18:17.200 --> 00:18:19.900
หรือว่า ทางของ wiki

00:18:19.900 --> 00:18:21.900
คือเราพยายามทำให้

00:18:21.900 --> 00:18:22.900
bad edits

00:18:22.900 --> 00:18:24.100
easy to correct

00:18:24.100 --> 00:18:25.300
ถ้าเราแก้อะไรผิดเนี่ย

00:18:25.300 --> 00:18:26.500
เราแก้กลับง่าย

00:18:26.500 --> 00:18:28.000
แทนที่จะ

00:18:28.000 --> 00:18:31.000
ป้องกันไม่ให้เกิดความผิดพลาดขึ้น

00:18:31.000 --> 00:18:34.200
มันจะได้เกิดการเปลี่ยนแปลงบ่อยๆ

00:18:34.200 --> 00:18:36.100
ถี่ๆ นะครับ

00:18:36.100 --> 00:18:37.300
ซึ่งโปรแกรม

00:18:37.300 --> 00:18:37.800
MediaWiki

00:18:37.800 --> 00:18:38.500
เนี่ย ก็ทำให้

00:18:38.500 --> 00:18:39.900
edit ได้ง่ายมากนะครับ

00:18:39.900 --> 00:18:41.500
อย่างที่สองที่ผมชอบคือ

00:18:41.500 --> 00:18:42.100
ตัว wiki

00:18:42.100 --> 00:18:42.800
ซอฟต์แวร์พวกนี้

00:18:42.800 --> 00:18:44.800
มันเป็น format แบบ plaintext

00:18:44.800 --> 00:18:45.500
plaintext ดียังไง

00:18:45.500 --> 00:18:47.100
คือเวลาผมจะแก้เนี่ย

00:18:47.100 --> 00:18:48.700
บางทีผมสามารถก๊อบข้อความพวกนี้

00:18:48.700 --> 00:18:50.200
ไปแก้ใน VS Code

00:18:50.200 --> 00:18:50.900
แล้วก็ใช้

00:18:50.900 --> 00:18:52.100
text editor ที่ผมชอบ

00:18:52.100 --> 00:18:53.100
พอเสร็จ

00:18:53.100 --> 00:18:54.700
ก็ก๊อบแปะกลับเข้าไป แล้วก็กด

00:18:54.700 --> 00:18:55.700
save

00:18:55.700 --> 00:18:56.900
เป็นเรื่องหนึ่งที่ผมชอบ

00:18:56.900 --> 00:18:59.100
ก็คือ plaintext นะครับ

00:18:59.100 --> 00:19:00.700
อีกอย่างหนึ่งก็คือ

00:19:00.700 --> 00:19:02.800
ระบบมันค่อนข้าง flexible ครับ อย่างเช่น

00:19:02.800 --> 00:19:03.600
wiki

00:19:03.600 --> 00:19:06.400
ตัวนี้ชื่อว่า TV Tropes นะครับ

00:19:06.400 --> 00:19:07.900
มันเอา PMWiki มาโม

00:19:07.900 --> 00:19:10.000
จนมันกลายเป็นเว็บของตัวเอง

00:19:10.000 --> 00:19:12.300
มี feature อะไรก็ไม่รู้เต็มไปหมดเลย

00:19:12.300 --> 00:19:16.000
ซึ่งเป็น wiki หนึ่งที่ผมชอบมากๆ

00:19:16.000 --> 00:19:21.200
หรือตัว MediaWiki เองเนี่ย extension มันมีเป็นร้อยเลยครับ เราสามารถเอามาติดตั้งเพื่อ customize wiki

00:19:21.200 --> 00:19:23.300
ของเราได้นะครับ

00:19:23.300 --> 00:19:25.800
อันนี้ก็คือเรื่องที่ผมชอบเกี่ยวกับพวกโปรแกรม

00:19:25.800 --> 00:19:28.800
wiki นะ แต่ว่า

00:19:28.800 --> 00:19:29.700
แต่มันก็จะมี

00:19:29.700 --> 00:19:30.600
pain point

00:19:30.600 --> 00:19:32.800
อย่างแรกก็คือ

00:19:32.800 --> 00:19:38.400
โปรแกรมพวกนี้ ส่วนมากจะเขียนเป็น PHP
ฉะนั้นเวลาเราจะ deploy เราก็ต้องเช่า server

00:19:38.400 --> 00:19:39.300
มา แล้วก็

00:19:39.300 --> 00:19:40.600
set up database อะไรพวกนี้

00:19:40.600 --> 00:19:43.300
มันไม่ค่อยมีแบบที่ทำเป็น container มันยัง

00:19:43.300 --> 00:19:43.700
เรียกว่า

00:19:43.700 --> 00:19:46.500
tech stack มันไม่ได้เป็นแบบ cloud native

00:19:46.500 --> 00:19:48.000
เท่าไหร่นะครับ

00:19:48.000 --> 00:19:48.600
อ่า

00:19:48.600 --> 00:19:58.800
อีกอย่างหนึ่งก็คือ ผมไม่ค่อยชอบ syntax ของมัน
ที่มันไม่ใช่ Markdown ครับ
อย่างของ MediaWiki เนี่ย ถ้าเราจะทำตัวหนา
ให้เราใช้ single quote สามอัน

00:19:58.800 --> 00:20:05.000
ซึ่งถ้าคนที่เขียน Markdown ก็งงไง
ว่าแบบ เออ พอมาเขียน wiki ต้องเปลี่ยน syntax

00:20:05.000 --> 00:20:06.600
ก็อาจจะไม่ชอบ

00:20:06.600 --> 00:20:08.500
อีกอย่างหนึ่งก็คือ

00:20:08.500 --> 00:20:11.200
พวก wiki พวกนี้ มันมาทั้ง package

00:20:11.200 --> 00:20:14.800
ฉะนั้นมันจะมาพร้อม theme พร้อมอะไรต่างๆ

00:20:14.800 --> 00:20:17.900
ซึ่งก็จะเขียนเป็นแบบ template PHP

00:20:17.900 --> 00:20:19.500
แล้วก็ใช้พวก jQuery

00:20:19.500 --> 00:20:20.100
ใช้ CSS

00:20:20.100 --> 00:20:23.200
ธรรมดาครับ ทำให้ถ้าเราอยากจะ customize ด้วย

00:20:23.200 --> 00:20:24.900
Tailwind หรือ React

00:20:24.900 --> 00:20:27.400
มัน integrate ค่อนข้างยากครับ

00:20:27.400 --> 00:20:28.900
อันนี้ก็

00:20:28.900 --> 00:20:35.000
ก็เลยทำให้ไม่ได้เลือกใช้ซอฟต์แวร์ที่เป็น wiki สำเร็จรูปนะครับ

00:20:35.000 --> 00:20:36.000
option ที่ 2 ก็คือ

00:20:36.000 --> 00:20:38.000
static site generator

00:20:38.000 --> 00:20:40.400
มันเพิ่งมาบูมในยุคประมาณ

00:20:40.400 --> 00:20:42.500
10 กว่าๆ

00:20:42.500 --> 00:20:43.200
ก่อนหน้านะครับ

00:20:43.200 --> 00:20:45.700
ก็จะมีพวก Jekyll, Eleventy,

00:20:45.700 --> 00:20:47.600
Hugo, VitePress อะไรพวกนี้

00:20:47.600 --> 00:20:49.100
สิ่งที่ผมชอบก็คือ มันเป็น

00:20:49.100 --> 00:20:50.700
plaintext เป็น Markdown เนาะ

00:20:50.700 --> 00:20:52.900
แล้วก็ content ต่างๆ อยู่ใน Git

00:20:52.900 --> 00:20:54.700
แก้ไขง่าย

00:20:54.700 --> 00:20:56.500
แถมพอ generate เป็น static file

00:20:56.500 --> 00:20:57.600
เนี่ย เราอัปโหลดขึ้น

00:20:57.600 --> 00:20:58.600
hosting ได้เลย

00:20:58.600 --> 00:21:01.600
ไม่ต้องดูแล server ด้วย อ่า

00:21:01.600 --> 00:21:03.800
ก็จะมี GitHub Pages ที่สามารถ

00:21:03.800 --> 00:21:05.800
host พวก static site พวกนี้

00:21:05.800 --> 00:21:06.700
รวมถึงเจ้าอื่นๆ

00:21:06.700 --> 00:21:07.800
เช่น Netlify, Vercel,

00:21:07.800 --> 00:21:08.700
Cloudflare Pages

00:21:08.700 --> 00:21:10.700
อะไรพวกนี้ เต็มไปหมดเลยครับ

00:21:10.700 --> 00:21:12.000
แต่

00:21:12.000 --> 00:21:14.800
ข้อเสียที่ผมเจอ เวลาทำเว็บด้วย

00:21:14.800 --> 00:21:16.800
static site generator คือ

00:21:16.800 --> 00:21:18.100
การจะ contribute

00:21:18.100 --> 00:21:20.000
มันค่อนข้างยากครับ

00:21:20.000 --> 00:21:21.400
เพราะ traditional wiki

00:21:21.400 --> 00:21:23.200
ทั่วไปนะ เรากด edit

00:21:23.200 --> 00:21:24.300
แก้ save

00:21:24.300 --> 00:21:25.000
จบ

00:21:25.000 --> 00:21:26.300
เห็นผลทันที

00:21:26.300 --> 00:21:27.000
แต่พอมาเป็น

00:21:27.000 --> 00:21:28.000
static site generator

00:21:28.000 --> 00:21:29.800
พวกนี้ ผมต้อง fork repo

00:21:29.800 --> 00:21:30.800
แก้ แล้วก็

00:21:30.800 --> 00:21:33.200
run dev server แล้วก็เช็ก

00:21:33.200 --> 00:21:34.600
เสร็จแล้วก็ commit

00:21:34.600 --> 00:21:37.100
push ขึ้นไป เปิด PR รอให้คนมารีวิว

00:21:37.100 --> 00:21:37.400
PR

00:21:37.400 --> 00:21:39.700
แล้วมันถึงค่อยขึ้นบนเว็บใช่ไหม

00:21:39.700 --> 00:21:41.600
อย่างอันนี้ ผมลอง contribute

00:21:41.600 --> 00:21:42.300
ไปที่

00:21:42.300 --> 00:21:44.200
documentation ของ Next.js เนี่ย

00:21:44.200 --> 00:21:46.500
จะเห็นว่าผมแก้

00:21:46.500 --> 00:21:48.700
doc แค่สองบรรทัด

00:21:48.700 --> 00:21:53.000
แต่ผมต้องอธิบายว่าผมแก้อะไร
อีกเกือบสิบบรรทัด

00:21:53.000 --> 00:21:54.100
ประมาณเนี้ยครับ

00:21:54.100 --> 00:21:58.400
อ่า มันก็ทำให้การแก้เนี่ย มันค่อนข้างยุ่งยาก

00:21:58.400 --> 00:22:02.500
มันเป็นคนละทางกับ the wiki way
ที่บอกว่า แก้ง่ายๆ

00:22:02.500 --> 00:22:05.100
revert ง่ายๆ

00:22:05.100 --> 00:22:07.500
แถมเวลาจะแก้ที ผมต้อง

00:22:07.500 --> 00:22:10.500
clone repo มา แล้วก็ run dev

00:22:10.500 --> 00:22:12.100
server

00:22:12.100 --> 00:22:13.800
มันก็ไม่ค่อยสะดวก

00:22:13.800 --> 00:22:15.900
แถมพอแก้เสร็จ push เสร็จ

00:22:15.900 --> 00:22:17.000
ยังไม่เห็นผลทันที

00:22:17.000 --> 00:22:18.800
ต้องรอให้เว็บ rebuild

00:22:18.800 --> 00:22:20.100
แล้วก็รอให้มัน redeploy

00:22:20.100 --> 00:22:23.000
มันถึงจะได้ content ใหม่

00:22:23.000 --> 00:22:26.100
ก็เลยทำให้ตัดสินใจไม่ได้ใช้

00:22:26.100 --> 00:22:29.600
static site generator

00:22:29.600 --> 00:22:31.700
แต่ว่าพอเรามาอยู่ในยุคนี้นะ

00:22:31.700 --> 00:22:33.800
มันจะมี tool หนึ่ง ที่ใน

00:22:33.800 --> 00:22:35.300
4-5 ปีที่ผ่านมาเนี่ย มัน

00:22:35.300 --> 00:22:37.100
บูมมากๆ ก็คือ Notion

00:22:37.100 --> 00:22:37.700
ครับ

00:22:37.700 --> 00:22:39.300
ซึ่งจริงๆ เนี่ย เราก็ใช้ Notion

00:22:39.300 --> 00:22:40.400
กันเยอะมากๆ

00:22:40.400 --> 00:22:41.500
ตั้งแต่ปี 2019

00:22:41.500 --> 00:22:42.300
เราใช้ Notion

00:22:42.300 --> 00:22:45.100
สำหรับเก็บพวกองค์ความรู้ สำหรับงานต่างๆ

00:22:45.100 --> 00:22:46.700
เต็มไปหมดเลยนะครับ

00:22:46.700 --> 00:22:47.400
ซึ่ง Notion

00:22:47.400 --> 00:22:48.900
เราชอบมาก ตรงที่ว่า

00:22:48.900 --> 00:22:51.200
เวลาเรารวมกันแก้หลายๆ คน

00:22:51.200 --> 00:22:52.800
UX มันดีมากๆ

00:22:52.800 --> 00:22:54.200
แล้วก็ปัจจุบัน

00:22:54.200 --> 00:22:56.600
หลายๆ คนก็ใช้ Notion กันเป็นเกือบหมดแล้ว

00:22:56.600 --> 00:23:00.800
แต่สิ่งที่ผมยังรู้สึกว่ามันขัดใจก็คือ
อย่างแรกคือ

00:23:00.800 --> 00:23:02.600
บางทีผมอยากจะใส่พวก bar chart

00:23:02.600 --> 00:23:08.500
หรือใส่พวก speech bubble หรือใส่พวก widget
ที่มันไม่ได้มีใน Notion

00:23:08.500 --> 00:23:09.300
เราไม่สามารถ

00:23:09.300 --> 00:23:10.500
full control

00:23:10.500 --> 00:23:13.200
หน้าตาของเว็บไซต์ได้ขนาดนั้นนะครับ

00:23:13.200 --> 00:23:17.700
อย่างที่สองคือ ผมเกลียด sidebar ของ Notion ครับ
เพราะว่าผมพยายาม-

00:23:17.800 --> 00:23:21.300
พยายามจะ organize content

00:23:21.300 --> 00:23:28.300
ใน Notion ของผมเนี่ย ไม่ว่าผมจะพยายาม
organize จัดระเบียบขนาดไหน สุดท้ายมันก็เละอยู่ดี
ผมเลยไม่ชอบ

00:23:28.300 --> 00:23:33.300
sidebar ผมชอบให้แบบมีบทความลอยๆ อยู่
แล้วก็ลิงก์กันไปลิงก์กันมามากกว่า

00:23:33.300 --> 00:23:36.400
อีกอย่างหนึ่งคือ content มันอยู่ในรูปแบบของมันเอง

00:23:36.400 --> 00:23:37.700
ไม่ได้เป็น plain text

00:23:37.700 --> 00:23:39.700
ผมก๊อบออกมาแก้ใน VS Code

00:23:39.700 --> 00:23:42.000
แล้วแปะกลับเข้าไปไม่ได้

00:23:42.000 --> 00:23:43.200
แล้วก็ถ้าใช้กันหลายๆ คน

00:23:43.200 --> 00:23:48.000
แล้วมีข้อมูลเยอะ ก็อาจจะแพง

00:23:48.000 --> 00:23:50.300
ก็เลยลงเอยด้วยการสร้าง wiki engine

00:23:50.300 --> 00:23:51.200
เองนะครับ

00:23:51.200 --> 00:23:54.900
ตัว wiki engine นี้ ชื่อว่า Contentsgarten ครับ
เดี๋ยวให้ดู feature คร่าวๆ นะครับ

00:23:54.900 --> 00:23:55.800
เป็น

00:23:55.800 --> 00:23:56.900
open source

00:23:56.900 --> 00:23:58.500
headless modern

00:23:58.500 --> 00:23:59.800
cloud native

00:23:59.800 --> 00:24:01.200
นะครับ เป็น wiki engine นะครับ

00:24:01.200 --> 00:24:02.000
หลักๆ คือใช้

00:24:02.000 --> 00:24:03.600
Markdown syntax นะครับ เวลา-

00:24:03.600 --> 00:24:04.500
ก็จะเห็นตัวเนี้ย เป็น

00:24:04.500 --> 00:24:05.100
Markdown เลย

00:24:05.100 --> 00:24:06.600
จะพิมพ์ตัวหนา ก็ดอกจัน

00:24:06.600 --> 00:24:09.000
ไม่ต้องจำ syntax ใหม่นะ

00:24:09.000 --> 00:24:10.800
แล้วก็ content ต่างๆ เนี่ย

00:24:10.800 --> 00:24:12.000
เก็บไว้ใน Git

00:24:12.000 --> 00:24:14.700
ฉะนั้นถ้าเข้าไปดูใน creatorsgarten/wiki

00:24:14.700 --> 00:24:15.900
ก็จะเห็น

00:24:15.900 --> 00:24:18.200
ข้อมูลทั้งหมด เป็นไฟล์

00:24:18.200 --> 00:24:18.600
Markdown

00:24:18.600 --> 00:24:19.100
แบบนี้

00:24:19.100 --> 00:24:20.400
แล้วพอมันอยู่ใน Git เนี่ย

00:24:20.400 --> 00:24:21.500
ข้อดีคือ

00:24:21.500 --> 00:24:24.100
เราสามารถแก้บนเว็บตรงๆ ก็ได้

00:24:24.100 --> 00:24:25.800
เรามี UI สำหรับแก้บนเว็บ

00:24:25.800 --> 00:24:27.900
แต่เราจะ clone repo มา

00:24:27.900 --> 00:24:29.100
เพื่อแก้ใน editor

00:24:29.100 --> 00:24:30.800
ของเราเองก็ได้นะครับ

00:24:30.800 --> 00:24:32.500
หรือปัจจุบันเนี่ย

00:24:32.500 --> 00:24:33.200
GitHub

00:24:33.200 --> 00:24:34.700
มีเว็บ github.dev

00:24:34.700 --> 00:24:36.000
ที่เป็น VS Code

00:24:36.000 --> 00:24:37.000
ที่อยู่ใน browser

00:24:37.000 --> 00:24:41.000
ทำให้เราสามารถแก้ content

00:24:41.000 --> 00:24:42.100
โดยใช้

00:24:43.000 --> 00:24:45.200
editor ของ VS Code แต่อยู่ในเว็บ

00:24:45.200 --> 00:24:46.200
อันนี้เราก็ integrate

00:24:46.200 --> 00:24:46.900
เรียบร้อยแล้วนะครับ

00:24:46.900 --> 00:24:49.900
คือถ้าเราเข้าไปที่

00:24:49.900 --> 00:24:51.100
wiki ของ Creatorsgarten

00:24:51.100 --> 00:24:52.600
แล้วกดปุ่มจุดเนี่ย

00:24:52.600 --> 00:24:54.200
มันก็จะพาเข้าไปที่

00:24:54.200 --> 00:24:58.200
github.dev ให้เลย

00:24:58.200 --> 00:25:00.400
หรือพอเราใช้ VS Code แก้

00:25:00.400 --> 00:25:01.700
สิ่งที่ได้ก็คือ

00:25:01.700 --> 00:25:03.400
เวลาเราเขียน เราก็จะไม่ได้เขียนคนเดียวแล้ว

00:25:03.400 --> 00:25:03.900
เพราะเรามี

00:25:03.900 --> 00:25:06.900
GitHub Copilot ช่วยเราเขียน

00:25:06.900 --> 00:25:10.300
แล้วก็ถ้าอยากจะแบบ

00:25:10.300 --> 00:25:11.500
make large scale change

00:25:11.500 --> 00:25:12.200
อย่างเช่น บางที

00:25:12.200 --> 00:25:13.800
ผมต้องการแก้หลายๆ

00:25:13.800 --> 00:25:15.400
ไฟล์พร้อมๆ กันนะ

00:25:15.400 --> 00:25:17.700
ผมไม่ต้องมานั่งเขียน script เพื่อยิง

00:25:17.700 --> 00:25:19.500
API ไปที่แบบ API Notion

00:25:19.500 --> 00:25:20.600
หรือ API นู่น API นี่

00:25:20.600 --> 00:25:22.000
ผมดูด repo มา

00:25:22.000 --> 00:25:23.400
เขียน script แก้ไฟล์

00:25:23.400 --> 00:25:25.400
แล้วก็ commit push กลับเข้า wiki

00:25:25.400 --> 00:25:28.400
เข้าไปได้เลยนะครับ

00:25:28.400 --> 00:25:29.400
แล้วก็โอเค

00:25:29.400 --> 00:25:30.400
feature ถัดไปคือ มัน

00:25:30.400 --> 00:25:31.600
integrate กับ GitHub

00:25:31.600 --> 00:25:33.300
อย่างแน่นมากๆ

00:25:33.300 --> 00:25:36.400
เวลาเราแก้หน้าสักหน้า

00:25:36.400 --> 00:25:37.700
ใน Contentsgarten เนี่ย

00:25:37.700 --> 00:25:39.000
สิ่งที่เกิดขึ้นคือ

00:25:39.000 --> 00:25:40.600
มันยิง API ไปที่

00:25:40.600 --> 00:25:41.600
GitHub API

00:25:41.600 --> 00:25:43.100
เพื่อแก้ไฟล์นั้นบน GitHub

00:25:43.100 --> 00:25:44.300
ตรงๆ เลย

00:25:44.300 --> 00:25:45.100
ก็คือเราใช้

00:25:45.100 --> 00:25:46.800
GitHub เป็นแบบ source of truth

00:25:46.800 --> 00:25:47.400
ครับ

00:25:47.400 --> 00:25:53.700
แล้วพอข้อมูลอยู่บน GitHub
มันก็ทำให้เราสามารถใช้ feature ต่างๆ ของ GitHub ได้ เช่น

00:25:53.700 --> 00:25:58.400
webhook นะครับ เวลามีใครแก้หน้าอะไรก็ตาม

00:25:58.400 --> 00:26:02.600
ผม set up webhook ให้มันยิงเข้า Discord
ฉะนั้นเวลาใครแก้เนี่ย

00:26:02.600 --> 00:26:07.300
ก็รู้ทันทีเลย ไม่ต้องเขียน code เลย
เพราะว่ามันเป็น feature ที่ GitHub มีให้อยู่แล้ว

00:26:07.300 --> 00:26:09.800
ไม่ต้องมา implement เองครับ

00:26:09.800 --> 00:26:12.400
แถม

00:26:12.400 --> 00:26:13.200
ด้วยความที่

00:26:13.200 --> 00:26:14.500
Git มันมี

00:26:14.500 --> 00:26:15.700
history ให้ใช่ไหม

00:26:15.700 --> 00:26:17.300
เราไม่ต้อง implement feature

00:26:17.300 --> 00:26:18.000
ที่ว่าแบบ

00:26:18.000 --> 00:26:20.400
ดูว่าเพจนี้ถูกแก้อะไรไปบ้าง

00:26:20.400 --> 00:26:21.300
เวลากด history

00:26:21.300 --> 00:26:24.700
มันวิ่งเข้า GitHub เลย

00:26:24.700 --> 00:26:27.200
แล้วก็พอมันเป็นเว็บที่เราทำเองนะ

00:26:27.200 --> 00:26:29.900
เราก็สามารถทำ syntax

00:26:29.900 --> 00:26:30.800
ทำ component ต่างๆ

00:26:30.800 --> 00:26:32.000
ของเราได้เองนะครับ

00:26:32.000 --> 00:26:33.100
เช่น บางทีเนี่ย

00:26:33.100 --> 00:26:35.300
เราอยากจะให้มันมีการ

00:26:35.300 --> 00:26:36.600
discuss เกี่ยวกับ

00:26:36.600 --> 00:26:43.300
content บางส่วน
แต่ยังไม่พร้อมที่จะเขียนเป็นบทความจริงๆ
เราก็สร้าง speech bubble แบบนี้

00:26:43.300 --> 00:26:47.700
อ่า เอาไว้คุยกัน เอาไว้แบบให้คนที่เป็น editor

00:26:47.700 --> 00:26:56.600
คุยกันได้ หรือบางทีเนี่ย เราต้องการจะ visualize แบบ
feedback ของงานเนี่ย เราก็ทำเป็น chart แบบนี้

00:26:56.600 --> 00:26:58.600
หรือ อ่า อันนี้เพจ-

00:26:58.600 --> 00:27:00.500
เพจนี้จะเป็นเพจที่รวม event

00:27:00.500 --> 00:27:01.700
ทั้งหมดของเรานะครับ

00:27:01.700 --> 00:27:04.200
เราก็จะมีลิงก์ที่เกี่ยวข้อง เกี่ยวกับแต่ละ

00:27:04.200 --> 00:27:05.000
event นะครับ

00:27:05.000 --> 00:27:06.800
จะเห็นว่าเป็น table ที่ค่อนข้าง

00:27:06.800 --> 00:27:07.300
advance

00:27:07.300 --> 00:27:08.500
นะ อืม

00:27:08.500 --> 00:27:09.900
แต่ว่า code เบื้องหลังเนี่ย

00:27:09.900 --> 00:27:11.500
มีแค่นี้

00:27:11.500 --> 00:27:12.400
มันสามารถ render

00:27:12.400 --> 00:27:13.600
template ได้ครับ

00:27:13.600 --> 00:27:15.800
แล้ว template

00:27:15.800 --> 00:27:16.400
ก็จะสามารถ

00:27:16.400 --> 00:27:17.900
query ข้อมูลจากเพจอื่นๆ

00:27:17.900 --> 00:27:19.700
เพื่อเอามา generate

00:27:19.700 --> 00:27:20.900
เป็นตารางได้

00:27:20.900 --> 00:27:23.600
อันนี้คือใช้ภาษาที่เรียกว่า Liquid นะครับ

00:27:23.600 --> 00:27:25.100
ทำให้เวลา-

00:27:26.200 --> 00:27:27.800
ทำให้เราไม่ต้องมานั่ง maintain

00:27:27.800 --> 00:27:29.300
ตารางตัวนี้เองครับ

00:27:29.300 --> 00:27:31.700
เวลาเราสร้างเพจใหม่

00:27:31.700 --> 00:27:35.800
ตารางนี้มันก็จะอัปเดตตามนะครับ

00:27:35.800 --> 00:27:36.300
อ่า

00:27:36.300 --> 00:27:40.600
อันนี้ก็มาจาก feature ที่เรียกว่า front matter เนาะ

00:27:40.600 --> 00:27:45.700
ก็คือเราสามารถใส่ data structure ที่เป็น YAML

00:27:45.700 --> 00:27:49.800
ไว้ในแต่ละหน้าได้ แล้วข้อมูลพวกนั้นมันจะถูก

00:27:49.800 --> 00:27:54.900
ใส่เข้าไปใน database ซึ่งเราเอามา query ทีหลังได้
อย่างเช่น หน้า event ตรงนี้ ก็คือ

00:27:54.900 --> 00:28:00.300
เราก็ไม่ต้องคอยอัปเดตเองตลอด
มันก็ไป query มาจาก database เลย

00:28:00.300 --> 00:28:05.600
ฉะนั้นเนี่ย feature นี้ ทำให้เราสามารถ implement feature
advance ได้ อย่างเช่น

00:28:05.600 --> 00:28:14.600
เราก็เก็บพวก setting ต่างๆ ของเว็บไซต์ไว้ใน wiki เลย
อ่า พวก feature flag ต่างๆ เนี่ย ก็เก็บไว้ใน wiki ไปเลย

00:28:14.600 --> 00:28:16.400
หรือแม้แต่พวก inventory ต่างๆ

00:28:16.400 --> 00:28:19.100
พวกอุปกรณ์ต่างๆ ที่เรา track

00:28:19.100 --> 00:28:21.000
ว่าใน Creatorsgarten มีอุปกรณ์อะไรเนี่ย

00:28:21.000 --> 00:28:23.000
เราก็มีหน้านี้ไว้

00:28:23.000 --> 00:28:24.400
track ว่าเรามีอุปกรณ์อะไรนะครับ

00:28:24.400 --> 00:28:26.700
แต่ว่าเราก็ไม่ได้

00:28:26.700 --> 00:28:29.300
เก็บข้อมูลเป็น

00:28:29.300 --> 00:28:30.200
markdown นะ

00:28:30.200 --> 00:28:32.000
เราเก็บเป็น YAML แบบนี้นะ

00:28:32.000 --> 00:28:37.900
เสร็จแล้วเราก็เขียนแบบเป็น script เป็น template

00:28:37.900 --> 00:28:39.000
ไว้ให้มัน generate

00:28:39.000 --> 00:28:41.400
เป็นตารางสวยๆ อีกทีหนึ่ง

00:28:41.400 --> 00:28:43.400
ฉะนั้นเนี่ย

00:28:43.400 --> 00:28:45.900
ข้อดีของการที่เราเก็บทุกอย่างเป็น YAML เนี่ย

00:28:45.900 --> 00:28:47.400
คือมัน machine readable

00:28:47.400 --> 00:28:49.400
เราสามารถเขียน script หรือ

00:28:49.400 --> 00:28:51.200
tool เนี่ย ให้มันมา

00:28:51.200 --> 00:28:53.700
อัปเดตข้อมูลนี้ได้

00:28:53.700 --> 00:28:54.600
นั่นแหละครับ

00:28:54.600 --> 00:28:57.000
ก็ผมชอบที่มันเป็น open data

00:28:57.000 --> 00:28:58.700
สุดท้ายก็คือ

00:28:58.700 --> 00:29:07.400
มัน headless ครับ ไอ้หน้าเว็บที่เห็นอยู่เนี่ย
ไม่ได้เป็นส่วนหนึ่งของ Contentsgarten นะ
เพราะว่า Contentsgarten มีแค่ API นะครับ
อ่า มี API แบบนี้

00:29:07.400 --> 00:29:10.800
อย่างเช่น เรายิง API Contentsgarten search

00:29:10.800 --> 00:29:13.300
ส่ง match event location เป็น Cleverse

00:29:13.300 --> 00:29:18.500
เนี่ย เวลาเรายิง API ตัวนี้ มันก็จะหา event
มันก็จะหาหน้าทั้งหมด

00:29:18.500 --> 00:29:20.200
ที่

00:29:20.200 --> 00:29:22.500
event.location เป็น Cleverse

00:29:22.500 --> 00:29:24.900
ก็คือเราเอาข้อมูลใส่เข้าไปใน

00:29:24.900 --> 00:29:27.900
wiki แล้วเราก็ถามคำถาม wiki

00:29:27.900 --> 00:29:30.200
มันก็จะตอบกลับมาได้นะครับ

00:29:30.200 --> 00:29:31.700
โอเค

00:29:31.700 --> 00:29:33.800
ต่อไป อันนี้ก็คือ feature คร่าวๆ

00:29:33.800 --> 00:29:34.600
ของระบบนี้

00:29:34.600 --> 00:29:36.300
เรามาดู tech stack กันดีกว่า

00:29:36.300 --> 00:29:37.300
หลักๆ ก็คือ

00:29:37.300 --> 00:29:40.300
ตัวเว็บไซต์ก็จะเป็น repo หนึ่ง

00:29:40.300 --> 00:29:42.500
เขียนด้วย Astro

00:29:42.500 --> 00:29:44.100
ถ้าไปงาน

00:29:44.100 --> 00:29:46.100
BKK.JS รอบก่อนใช่ไหม

00:29:46.100 --> 00:29:50.000
ริฟฟี่ก็แนะนำ Astro

00:29:50.000 --> 00:29:51.400
ถ้าอยากรู้เรื่อง Astro นะครับ

00:29:51.400 --> 00:29:52.700
ก็ไปดู talk

00:29:52.700 --> 00:29:53.900
ย้อนหลังได้ใน channel YouTube

00:29:53.900 --> 00:29:55.500
นะครับ

00:29:55.500 --> 00:29:57.500
แล้วก็ตัว

00:29:57.500 --> 00:29:58.200
backend

00:29:58.200 --> 00:29:58.500
ก็คือ

00:29:58.500 --> 00:29:59.900
Contentsgarten ก็จะอยู่ที่

00:29:59.900 --> 00:30:01.600
repo นี้นะครับ

00:30:01.600 --> 00:30:03.200
การทำงานก็คือ มันก็จะคุยกับ

00:30:03.200 --> 00:30:04.200
GitHub API

00:30:04.200 --> 00:30:06.000
เพื่อดึงข้อมูลจาก repositories

00:30:06.000 --> 00:30:07.800
ที่เราถือว่าเป็น source of truth

00:30:07.800 --> 00:30:10.400
แต่

00:30:10.400 --> 00:30:13.800
จำตัวอย่างที่เราหา event ทั้งหมด

00:30:13.800 --> 00:30:16.200
ที่จัดที่ Cleverse ได้ใช่ไหม

00:30:16.200 --> 00:30:17.400
แต่ GitHub API

00:30:17.400 --> 00:30:21.100
มันไม่มี API ไว้ query ของแบบนี้

00:30:21.100 --> 00:30:22.600
เราเลยต้องเก็บ database

00:30:22.600 --> 00:30:23.100
อีกอันหนึ่ง

00:30:23.100 --> 00:30:24.100
ไว้เป็น cache

00:30:24.100 --> 00:30:26.200
เป็น index ฉะนั้น

00:30:26.200 --> 00:30:27.300
source of truth จะเป็นอันนี้

00:30:27.300 --> 00:30:29.300
แต่ว่าข้อมูลมันจะไหลมาที่ MongoDB

00:30:29.700 --> 00:30:31.400
แล้วเราจะมีการจัดรูปแบบข้อมูล

00:30:31.400 --> 00:30:33.300
เพื่อให้สามารถ

00:30:33.300 --> 00:30:33.700
query

00:30:33.700 --> 00:30:37.000
ข้อมูลที่อยู่ในแต่ละไฟล์ได้

00:30:37.000 --> 00:30:39.300
ดังนั้นอันนี้ก็คือตัว

00:30:39.300 --> 00:30:39.600
content

00:30:39.600 --> 00:30:40.900
Contentsgarten นะครับ ก็มา

00:30:40.900 --> 00:30:44.100
conclusion กันดีกว่า

00:30:44.100 --> 00:30:46.500
takeaway สำหรับ talk นี้ก็คือ

00:30:46.500 --> 00:30:48.200
ผมรู้สึกว่า

00:30:48.200 --> 00:30:49.800
ecosystem ของ GitHub

00:30:49.800 --> 00:30:52.500
มันทำให้เราสามารถสร้างระบบ

00:30:52.500 --> 00:30:53.700
wiki แบบ custom

00:30:53.700 --> 00:30:56.000
ได้อย่างรวดเร็วครับ

00:30:56.000 --> 00:30:59.900
ผมคิดว่าถ้าเราไม่มีพวก

00:30:59.900 --> 00:31:00.500
webhook

00:31:00.500 --> 00:31:03.300
หรือว่า API ของ GitHub

00:31:03.300 --> 00:31:05.600
ที่มี API ที่แบบเก็บ history

00:31:05.600 --> 00:31:07.000
หรือเครื่องมือต่างๆ พวก GitHub.dev

00:31:07.000 --> 00:31:08.500
อะไรแบบนี้

00:31:08.500 --> 00:31:09.800
หรือแม้แต่ GitHub Copilot

00:31:09.800 --> 00:31:10.500
ที่ช่วยผมเขียน code

00:31:10.500 --> 00:31:12.200
เนี่ย การจะสร้างระบบแบบนี้

00:31:12.200 --> 00:31:15.500
มันน่าจะใช้เวลานานกว่านี้เยอะมาก

00:31:15.500 --> 00:31:18.800
คือต้องบอกก่อนว่า ตัว Contentsgarten มัน barebone มากนะ

00:31:18.800 --> 00:31:20.900
ขนาดแค่ลบเพจเนี่ย มันยังทำไม่ได้เลย

00:31:20.900 --> 00:31:24.000
แต่ผมไม่ต้อง implement เพราะว่าเราลบเพจไม่บ่อย

00:31:24.000 --> 00:31:25.700
เมื่อไหร่ก็ตามที่ผมอยากจะลบเพจนะ

00:31:25.700 --> 00:31:28.000
ผมกดเข้าไปใน repo แล้วก็ลบไฟล์ทิ้งเลย

00:31:28.000 --> 00:31:30.400
อ่า ไม่ต้อง implement เอง

00:31:30.400 --> 00:31:32.800
ก็คือเรา stand on top of the

00:31:32.800 --> 00:31:33.800
shoulder of giants

00:31:33.800 --> 00:31:36.200
เนาะ อ่า

00:31:36.200 --> 00:31:37.700
อย่างต่อไปก็คือ

00:31:37.700 --> 00:31:38.700
data

00:31:38.700 --> 00:31:40.100
ที่เราเก็บเป็น plain text

00:31:40.100 --> 00:31:41.400
แล้วเก็บไว้ใน Git

00:31:41.400 --> 00:31:46.500
ทำให้เราสามารถ build ของ
ต่อเติม ต่อยอดได้

00:31:46.500 --> 00:31:48.600
โดยที่ไม่ต้องใช้ API

00:31:48.600 --> 00:31:50.200
พิสดารอะไรแบบนี้ครับ

00:31:50.200 --> 00:31:54.000
ไอเดียหนึ่งที่เคยคิด ก็คืออยากจะลองดูว่า

00:31:54.000 --> 00:31:55.600
แต่ละหน้ามันเชื่อมกันอย่างไร

00:31:55.600 --> 00:31:57.100
อันนี้ผมทำกับเว็บตัวเองดูแล้ว

00:31:57.100 --> 00:32:04.700
แต่ว่ามันก็อาจจะเจ๋งดี ถ้าเราดูได้ว่าหน้าแต่ละหน้ามันแบบ

00:32:04.700 --> 00:32:06.400
เชื่อมกัน แล้วมันกลายเป็น

00:32:06.400 --> 00:32:09.000
เขาเรียกว่า knowledge graph

00:32:09.000 --> 00:32:10.300
หรือ

00:32:10.300 --> 00:32:11.400
tool นี้ก็

00:32:11.400 --> 00:32:12.900
grtn.org นะครับ ก็เป็น

00:32:12.900 --> 00:32:13.800
link shortener

00:32:13.800 --> 00:32:17.700
ที่ Creatorsgarten ใช้กันเองเนาะ

00:32:17.700 --> 00:32:26.500
เมื่อก่อนเนี่ย เราอาจจะต้องแบบให้ access bit.ly
หรือว่าใช้บริการของบางเจ้าที่มันอาจจะแพง

00:32:26.500 --> 00:32:27.100
อ่า

00:32:27.100 --> 00:32:29.700
แต่ว่าพอเรามี Contentsgarten เนี่ย

00:32:29.700 --> 00:32:32.300
เราก็เอาลิงก์ทั้งหมดไปเก็บไว้ใน wiki

00:32:32.300 --> 00:32:37.000
แล้วก็เขียนโปรแกรมให้ grtn.org เนี่ย
ดึงข้อมูลจาก

00:32:37.000 --> 00:32:40.900
แบบ front matter ตรงนี้ แล้วก็จัดการ redirect ให้

00:32:40.900 --> 00:32:44.400
ก็ผมก็มองว่าแบบ พอ data มัน open

00:32:44.400 --> 00:32:47.100
แล้วก็เอามาทำอะไรต่อยอดได้ง่ายครับ

00:32:47.100 --> 00:32:48.400
หรืออย่างใน channel YouTube

00:32:48.400 --> 00:32:49.400
เมื่อกี้ ที่

00:32:49.400 --> 00:32:51.700
ริฟฟี่โชว์ให้ดูว่า banner ของ

00:32:51.700 --> 00:32:52.100
channel

00:32:52.100 --> 00:32:56.200
เนี่ย มันเป็นโลโก้ของ event

00:32:56.200 --> 00:33:00.800
ต่างๆ ที่เราจัดนะ ไอ้เนี่ยก็ดึงข้อมูลมาจาก wiki เหมือนกันครับ

00:33:00.800 --> 00:33:05.500
แต่ก็ต้องบอกก่อนว่า เครื่องมือสุดท้ายเนี้ย
เครื่องมือนี้ มันก็ไม่ใช่ silver bullet

00:33:05.500 --> 00:33:12.900
หลายๆ คนก็บ่นเหมือนกันว่า ไม่ชอบที่มันเป็น plain text อยากจะให้ editing experience มันเหมือน Notion อะไรแบบนี้

00:33:12.900 --> 00:33:15.700
ใช่ไหม อืม

00:33:15.700 --> 00:33:17.800
หรือบางทีเนี่ย

00:33:17.800 --> 00:33:19.900
มีบาง content ที่อาจจะ

00:33:19.900 --> 00:33:21.600
public ไม่ได้

00:33:21.600 --> 00:33:23.400
หรืออาจจะไม่ practical ที่จะ

00:33:23.400 --> 00:33:24.700
public

00:33:24.700 --> 00:33:26.500
ผมก็แนะนำว่าแบบ อืม

00:33:26.500 --> 00:33:28.200
ก็ให้ใช้เครื่องมือ

00:33:28.200 --> 00:33:29.700
use the right tool for the right job

00:33:29.700 --> 00:33:32.800
ครับ ก็คือถ้าจะประชุมกัน

00:33:32.800 --> 00:33:33.900
ก็ใช้ Notion ไปก็ได้

00:33:33.900 --> 00:33:34.500
หรือใช้ Google

00:33:34.500 --> 00:33:36.200
Docs ถ้าจะเก็บเป็นตารางก็

00:33:36.200 --> 00:33:37.000
Google Sheets

00:33:37.000 --> 00:33:38.500
ถ้าจะ design ก็ Figma

00:33:38.500 --> 00:33:39.800
ก็ใช้เครื่องมือ

00:33:39.800 --> 00:33:41.200
ก็ใช้ right tool for the right job

00:33:41.200 --> 00:33:43.300
แต่ว่า เรื่องหนึ่งที่ผมก็จะ

00:33:43.300 --> 00:33:45.200
encourage ให้มีก็คือ

00:33:45.200 --> 00:33:47.600
พยายามให้ทุกอย่างมัน

00:33:47.600 --> 00:33:48.800
reachable จาก wiki

00:33:48.800 --> 00:33:49.600
หมายถึง

00:33:49.600 --> 00:33:51.000
reachable ในที่นี้ หมายความว่า

00:33:51.000 --> 00:33:52.600
ถ้าเราไปที่หน้า wiki

00:33:52.600 --> 00:33:55.300
มันควรจะมีเส้นทางจาก

00:33:55.300 --> 00:33:58.800
จากหน้าเว็บไปยังข้อมูลชุดนั้น

00:33:58.800 --> 00:33:59.600
อย่างเช่น

00:33:59.600 --> 00:34:02.500
ถ้าเกิดผมอยากจะไปดูว่า ตอนที่เราจัดงาน

00:34:02.500 --> 00:34:03.500
Stupid Hackathon

00:34:03.500 --> 00:34:04.700
ครั้งที่ 2 เนี่ย

00:34:04.700 --> 00:34:06.500
ซึ่งอันนั้นเมื่อปี 2018

00:34:06.500 --> 00:34:09.000
เมื่อประมาณ 7 ปีที่แล้ว

00:34:09.000 --> 00:34:09.800
proposal

00:34:09.800 --> 00:34:11.800
เราเขียนอย่างไรบ้าง

00:34:11.800 --> 00:34:13.199
เปิดหน้าเว็บเข้าไปที่ wiki

00:34:13.199 --> 00:34:15.100
แล้วก็ไปดู list of event

00:34:15.100 --> 00:34:16.400
แล้วก็ไปดูที่

00:34:16.400 --> 00:34:18.300
Stupid Hackathon Thailand

00:34:18.300 --> 00:34:20.300
เข้ามาที่หน้าที่เป็น coverage

00:34:20.300 --> 00:34:21.699
ในนี้ก็จะมี list document

00:34:21.699 --> 00:34:24.100
ก็จะมี information for sponsor

00:34:24.100 --> 00:34:25.199
สมัยนั้นเรา

00:34:25.199 --> 00:34:26.300
ยังไม่ได้ใช้ Notion

00:34:26.300 --> 00:34:27.300
นะ สมัยนั้นเราเก็บไว้ใน

00:34:27.300 --> 00:34:29.699
Dropbox Paper

00:34:29.699 --> 00:34:31.199
ไม่รู้ใครเคยใช้กันไหม

00:34:31.199 --> 00:34:32.500
Dropbox Paper

00:34:32.500 --> 00:34:34.800
อ่า อาจจะมาก่อน Notion ครับ

00:34:34.800 --> 00:34:35.400
อ่า

00:34:35.400 --> 00:34:39.500
แต่ว่าสรุปก็คือ ไม่ว่าข้อมูลอยู่ที่ไหนเนี่ย

00:34:39.500 --> 00:34:44.199
มันอย่างน้อยมัน reachable จาก
จากหน้าหลักของเรา

00:34:44.199 --> 00:34:46.400
มันก็จะทำให้เราสามารถ-

00:34:46.400 --> 00:34:53.000
ความรู้ของเราก็จะไม่หายไป
ถ้ามันยัง reachable อยู่นะครับ

00:34:53.000 --> 00:34:55.000
ดังนั้นอันนี้ก็เป็น conclusion

00:34:55.000 --> 00:34:56.699
ที่อยากจะสรุปใน talk

00:34:56.699 --> 00:34:57.300
นี้นะครับ

00:34:57.300 --> 00:34:58.800
ก็อันนี้ก็จะเป็น

00:34:58.800 --> 00:34:59.500
ลิงก์ repo

00:34:59.500 --> 00:34:59.800
นะครับ

00:34:59.800 --> 00:35:01.000
แต่ว่าไม่ต้องจำก็ได้นะครับ

00:35:01.000 --> 00:35:02.100
ไปที่

00:35:02.100 --> 00:35:03.800
wiki แล้วก็ไปดูที่ tech stack

00:35:03.800 --> 00:35:05.400
นะครับ ก็

00:35:05.400 --> 00:35:06.000
สำหรับ

00:35:06.000 --> 00:35:08.100
session ของผมก็คงจะมีแค่นี้ครับ

00:35:08.100 --> 00:35:09.500
ก็

00:35:09.500 --> 00:35:11.800
ขอบคุณทุกคนมากครับ แล้วก็

00:35:13.100 --> 00:35:14.400
มีคำถามอะไรไหม

00:35:14.400 --> 00:35:15.200
ทั้งเรื่องวิดีโอ

00:35:15.200 --> 00:35:16.200
ทั้งเรื่อง content

00:35:16.200 --> 00:35:17.900
การเต้น หรืออะไรแบบนี้

00:35:17.900 --> 00:35:19.400
เสริมคำถามได้ครับ

00:35:19.400 --> 00:35:22.700
พร้อมตอบตลอด ครับ

00:35:27.900 --> 00:35:30.600
ใช่ค่ะ ก็จะถามว่า

00:35:30.600 --> 00:35:32.400
เท่าที่เห็น มันเป็นแบบการทำ

00:35:32.400 --> 00:35:33.000
project planning

00:35:33.000 --> 00:35:34.200
ใช่ไหมคะ ทีนี้

00:35:34.200 --> 00:35:36.500
อยากจะเห็นเรื่องของ evaluation

00:35:36.500 --> 00:35:38.700
ว่า เราเอาผลจาก evaluation form

00:35:38.700 --> 00:35:42.300
มาพัฒนาการจัดโครงการยังไงบ้างคะ

00:35:42.300 --> 00:35:43.700
มี database

00:35:43.700 --> 00:35:48.700
ด้านนี้ไหม อะไรทำนองนี้

00:35:53.700 --> 00:35:55.700
ค่ะ โอเค หมายถึงแบบ

00:35:55.700 --> 00:35:59.200
พอดีว่า ถ้าหลังจากเราจัดโครงการไปแล้วใช่ไหมคะ

00:35:59.200 --> 00:36:00.200
ก็จะมีแบบ feedback form

00:36:00.500 --> 00:36:03.600
ว่าตรงนี้ควรปรับอย่างนั้นอย่างนี้อะไรอย่างเงี้ย

00:36:03.600 --> 00:36:05.700
เรามีการสรุปข้อมูล

00:36:05.700 --> 00:36:07.400
ประมวลผลข้อมูลยังไง

00:36:07.400 --> 00:36:11.900
ให้เราพัฒนาการจัดงานในอนาคตได้ดีขึ้นได้บ้าง

00:36:11.900 --> 00:36:13.500
มีการทำแบบ

00:36:13.500 --> 00:36:14.500
data ตรงนี้ไว้ไหม

00:36:14.500 --> 00:36:16.800
สำหรับพัฒนาทีมงาน อะไรทำนองนี้ค่ะ

00:36:16.800 --> 00:36:18.500
โอเคครับ อ่า

00:36:18.500 --> 00:36:20.600
โอ้ ขอบคุณมากครับ

00:36:20.600 --> 00:36:22.100
โอเคครับ ขอบคุณสำหรับคำถามนะครับ

00:36:22.100 --> 00:36:27.500
ก็อันนี้คือ feedback ของงาน Stupid Hackathon ครั้งที่ 7 นะครับ งานล่าสุดที่เราจัดนะ

00:36:27.500 --> 00:36:32.400
หลังจากที่จบงานเนี่ย เรายิง Google Form ไปถาม
คำถามส่วนมากจะถาม 5 ข้อ

00:36:32.400 --> 00:36:34.100
1. ชอบอะไร

00:36:34.100 --> 00:36:36.000
2. อะไรควรปรับปรุง

00:36:36.000 --> 00:36:38.300
3. อยากให้เราลองทำอะไร

00:36:38.300 --> 00:36:40.300
แล้วก็ข้อ 4. ก็คือให้คะแนน

00:36:40.300 --> 00:36:41.700
1-10 แล้วก็

00:36:41.900 --> 00:36:45.100
5. บอกว่าอยากจะพิมพ์อะไรในนั้นก็พิมพ์ไปเลย

00:36:45.100 --> 00:36:47.400
เสร็จแล้วผมก็เอาข้อมูลทั้งหมด

00:36:47.400 --> 00:36:50.000
เอามาใส่ใน wiki ครับ ฉะนั้น

00:36:50.000 --> 00:36:51.700
staff รุ่นต่อๆ ไป

00:36:51.700 --> 00:36:54.100
จะสามารถไปดูใน list ของ event

00:36:54.100 --> 00:36:56.600
เพื่อดู feedback ของงานก่อนๆ ได้

00:36:56.600 --> 00:37:00.400
ก็คือมันก็จะไม่หายครับ

00:37:00.400 --> 00:37:01.100
ใช่ครับ

00:37:01.100 --> 00:37:04.200
อย่างของ Stupid 7

00:37:04.200 --> 00:37:06.500
ชอบกิจกรรมอะไรมากที่สุด

00:37:06.500 --> 00:37:09.200
แต่ละคนที่ตอบมา เราก็จะ list ไว้

00:37:09.200 --> 00:37:10.900
เสร็จแล้ว

00:37:10.900 --> 00:37:11.900
ที่ตอบมา

00:37:11.900 --> 00:37:18.300
เราโยนไปให้ ChatGPT สรุปออกมา

00:37:18.300 --> 00:37:19.500
อะไรประมาณนี้

00:37:19.500 --> 00:37:23.200
ฉะนั้น ก็คืออยากจะอ่านแบบข้อมูล

00:37:23.200 --> 00:37:24.200
raw ก็ได้

00:37:24.200 --> 00:37:26.200
หรือจะมาดู ChatGPT

00:37:26.200 --> 00:37:29.100
จะมาดูแบบสรุปของ ChatGPT ก็ได้ครับ

00:37:29.100 --> 00:37:33.100
รวมถึงพวกคะแนนอะไรต่างๆ เต็ม 10 ให้เท่าไหร่

00:37:33.100 --> 00:37:34.500
เราก็จะเก็บในนี้

00:37:34.500 --> 00:37:35.800
แล้วมันก็จะมีแบบ

00:37:35.800 --> 00:37:36.800
มีคนตอบกี่คน

00:37:36.800 --> 00:37:38.400
average เท่าไหร่ อะไรแบบนี้

00:37:38.400 --> 00:37:40.400
ก็จะมีการคำนวณให้อัตโนมัติครับ

00:37:40.400 --> 00:37:41.400
ฉะนั้น

00:37:41.400 --> 00:37:44.300
ทีมงานที่จัดงานรอบต่อๆ ไป

00:37:44.300 --> 00:37:51.300
ก็สามารถเข้ามาดูได้ รวมถึง ideas for next year
คล้ายๆ ว่า ถ้าอยากจะรู้ว่า

00:37:51.300 --> 00:37:56.700
คนที่จัดรุ่นก่อนหน้าเนี่ย มีไอเดียอะไรบ้าง

00:37:56.700 --> 00:38:03.400
ก็เข้ามาดูพวกนี้ เข้ามาดูแบบสรุปที่เราคุยกันได้ครับ

00:38:03.400 --> 00:38:09.900
แล้วก็จะมี เดี๋ยวขอหาแป๊บนึง

00:38:09.900 --> 00:38:12.200
data

00:38:12.200 --> 00:38:13.300
นี่ครับ

00:38:13.300 --> 00:38:21.500
นอกจากนี้ เราจะมีเก็บ data ต่างๆ ของงาน Stupid
เราจัดมา 7 รอบ เราก็มี keep track ว่า
ในแต่ละปีเนี่ย มีจำนวนทีมกี่คน

00:38:21.500 --> 00:38:23.700
ticket เท่าไหร่ presenter

00:38:23.700 --> 00:38:25.900
มีคนมา present ผลงานกี่คน

00:38:25.900 --> 00:38:31.200
event rating อะไรแบบนี้ พอกดๆ ดูที่ event rating
มันก็จะพาไปดู feedback

00:38:31.200 --> 00:38:35.400
อันนี้ก็คือเป็นวิธีที่เราเก็บ feedback

00:38:35.400 --> 00:38:38.900
ในงานต่างๆ ไม่ให้มันหายไปครับผม

00:38:38.900 --> 00:38:41.100
ตอบคำถามไหมครับอันนี้

00:38:41.100 --> 00:38:45.800
โอเคครับ

00:38:45.800 --> 00:38:50.000
มีคำถามเพิ่มเติมไหมครับ

00:38:50.000 --> 00:38:50.400
โอเค

00:38:50.400 --> 00:38:53.200
งั้นก็น่าจะประมาณนี้ ขอบคุณพี่ไทกับริฟฟี่มากครับ

00:38:53.200 --> 00:38:56.000
วู้ว

00:38:56.000 --> 00:38:57.400
เย้

00:38:57.400 --> 00:39:00.100
เจ๋งมากเลยเนาะพี่ช้าง

00:39:00.100 --> 00:39:01.000
ได้ฮะ โอเค

00:39:01.000 --> 00:39:03.200
ก็เดี๋ยวรอ set up กันก่อนเนาะ

00:39:03.200 --> 00:39:05.400
เป็นยังไงบ้างครับ ปั๊บ เห็นวันนี้

00:39:05.400 --> 00:39:05.700
โห

00:39:05.700 --> 00:39:10.100
- เพิ่งรู้ว่า Bitbucket ทำอะไรได้เยอะเลยฮะ
- โอ๊ย

00:39:10.100 --> 00:39:13.800
เฮ้ย ยังอยากได้สติ๊กเกอร์ GitHub อยู่ ไอ้นี่ก็-

00:39:13.800 --> 00:39:14.400
โอเคครับ

00:39:14.400 --> 00:39:15.100
เอ้ย พูดผิด

00:39:15.100 --> 00:39:18.100
ก็เพิ่งรู้ว่า GitLab ทำอะไรได้เยอะเลย

00:39:18.100 --> 00:39:21.600
ก็จะไม่ได้จัดเพราะอย่างงี้แหละ
