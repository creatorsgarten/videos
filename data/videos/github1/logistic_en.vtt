WEBVTT

1
00:00:02.900 --> 00:00:06.000
Hello everyone.

2
00:00:10.786 --> 00:00:15.000
I'm Riffy from Creatorsgarten.

3
00:00:15.000 --> 00:00:20.856
This session is co-hosted
 with p' Thai Pang.

4
00:00:20.857 --> 00:00:23.000
From Creatorsgarten.

5
00:00:23.000 --> 00:00:39.000
Today, we will look at the software tools
behind Creatorsgarten’s logistics.

6
00:00:39.000 --> 00:00:43.000
We will divide the session into two parts.

7
00:00:43.000 --> 00:00:50.000
The first part will be about how we
manage our YouTube channel.

8
00:00:50.000 --> 00:00:53.000
How we simplify the process.

9
00:00:53.000 --> 00:00:57.000
The second part will be
presented by Thai Pang.

10
00:00:57.000 --> 00:00:59.000
He will show you Contentsgarten.

11
00:00:59.000 --> 00:01:03.000
It is our custom wiki engine.

12
00:01:03.000 --> 00:01:07.000
We utilize many GitHub features.

13
00:01:07.000 --> 00:01:10.000
Let's get started.

14
00:01:10.000 --> 00:01:17.000
We have officially formed Creatorsgarten
for 1 year and 2 months.

15
00:01:17.001 --> 00:01:25.999
We have organized many events.

16
00:01:26.000 --> 00:01:31.000
Every talk we livestreamed,
we also archive it.

17
00:01:31.000 --> 00:01:39.000
One purpose is to publish it to
our YouTube channel.

18
00:01:39.000 --> 00:01:45.000
For those interested in the topics
of our past events.

19
00:01:45.001 --> 00:01:50.999
In the past, we didn’t have many
centralized entities that organizes events

20
00:01:51.000 --> 00:01:54.286
so the videos are spread over
many YouTube channels

21
00:01:54.287 --> 00:02:03.000
In Creatorsgarten, we trim each video,
post-process them and upload to YouTube.

22
00:02:03.000 --> 00:02:08.000
Before starting streaming, we need
to set up our devices for livestreaming.

23
00:02:08.001 --> 00:02:09.999
Like 1 hour ago.

24
00:02:10.000 --> 00:02:12.999
Lots of wires over there.

25
00:02:13.000 --> 00:02:17.000
Archiving an event is hard.

26
00:02:17.000 --> 00:02:22.885
A lot of things can
go wrong unpredictably.

27
00:02:22.886 --> 00:02:28.000
Some speakers have just slides.

28
00:02:28.000 --> 00:02:32.000
Some speakers wants to
play a video with sound.

29
00:02:32.000 --> 00:02:37.000
Sometimes we don't know in advance
what each speaker needs.

30
00:02:37.000 --> 00:02:43.000
Microphone is also an issue.

31
00:02:43.000 --> 00:02:47.000
When we run an event at Cleverse (venue),

32
00:02:47.000 --> 00:02:53.000
we know how the setup looks like.

33
00:02:53.000 --> 00:02:57.000
But when we move to another venue,

34
00:02:57.000 --> 00:03:03.000
it's called uncharted space.

35
00:03:03.000 --> 00:03:06.000
We don't know what they provide for us.

36
00:03:06.000 --> 00:03:08.000
It's our risk.

37
00:03:08.000 --> 00:03:10.000
If they don't have a microphone, where can we find it?

38
00:03:10.000 --> 00:03:12.000
Can we find it?

39
00:03:12.000 --> 00:03:15.000
Another thing is, can we have full control?

40
00:03:15.000 --> 00:03:17.000
If I speak too loudly,

41
00:03:17.000 --> 00:03:19.000
I can't control the sound.

42
00:03:19.000 --> 00:03:22.000
I can't control the output sound.

43
00:03:22.000 --> 00:03:25.000
What is the answer?

44
00:03:25.000 --> 00:03:28.670
The answer to this problem is to spend money.

45
00:03:28.671 --> 00:03:30.000
(AUDIENCE: Rich!)

46
00:03:30.000 --> 00:03:32.000
We use...

47
00:03:32.000 --> 00:03:36.000
In each Creatorsgarten event,

48
00:03:36.000 --> 00:03:39.000
we receive sponsorship money
from many sponsors.

49
00:03:39.000 --> 00:03:41.000
Which we use for maximum benefit.

50
00:03:41.000 --> 00:03:45.000
But when there is some leftover money,

51
00:03:45.000 --> 00:03:50.000
we keep it into a cash pool,

52
00:03:50.000 --> 00:03:55.000
we use this money to improve
our workflow, and share it.

53
00:03:55.000 --> 00:03:57.000
We simplify everything.

54
00:03:57.000 --> 00:04:04.314
Video signal is fed into an ATEM Mini.

55
00:04:04.315 --> 00:04:10.000
It receives the video that is
projected on the screen like this,

56
00:04:10.000 --> 00:04:15.357
as well as the sound that flows into
the software running on Mac Mini.

57
00:04:15.358 --> 00:04:21.000
But sometimes this solution
isn't good enough.

58
00:04:21.001 --> 00:04:29.999
Sometimes the venue doesn't provide a way
to feed the sound from the mixer 

59
00:04:30.000 --> 00:04:39.000
In a desperate situation,
sometimes we had to do a hotfix

60
00:04:39.000 --> 00:04:42.000
sticking a mic to the amplifier.

61
00:04:42.000 --> 00:04:47.000
It kinda works but not as great,
but well, ain’t broke, don’t fix.

62
00:04:49.000 --> 00:04:58.000
When we go to each venue, we took notes
about what equipment they have for us.

63
00:04:58.000 --> 00:05:01.563
So when we stream at the same place,
we don't have to ask them

64
00:05:01.564 --> 00:05:03.000
what equipment they have.

65
00:05:03.000 --> 00:05:11.000
When we finished recording,
it may be 3-5 hours long.

66
00:05:11.000 --> 00:05:15.000
The file that came out of OBS
is very large, like 32GB.

67
00:05:15.000 --> 00:05:19.000
Too big for Final Cut to handle.

68
00:05:19.000 --> 00:05:22.000
If we put it in Final Cut, it hangs.

69
00:05:22.000 --> 00:05:26.000
We have to optimize it first.

70
00:05:26.000 --> 00:05:34.000
For this, we have a FFmpeg script.

71
00:05:34.000 --> 00:05:39.000
We re-encode from H.264 to H.265.

72
00:05:39.000 --> 00:05:44.000
The size is reduced from 32GB to 5GB.

73
00:05:44.000 --> 00:05:49.000
Good for using with Final Cut.

74
00:05:49.000 --> 00:05:52.000
And it's also archived in a physical NAS.

75
00:05:52.000 --> 00:05:57.589
In case of an unfortunate event where
our channel is hacked

76
00:05:57.590 --> 00:06:01.000
and becomes an Elon Musk livestream.

77
00:06:01.000 --> 00:06:04.000
We have a backup.

78
00:06:04.000 --> 00:06:09.000
Ok, so we've already recorded the video.

79
00:06:09.000 --> 00:06:11.000
Now we upload it to YouTube.

80
00:06:11.000 --> 00:06:16.000
But after uploading,
we have to manage the content.

81
00:06:16.000 --> 00:06:23.000
Managing this is even harder.

82
00:06:23.000 --> 00:06:29.000
Because we want consistency
in our YouTube channel.

83
00:06:29.001 --> 00:06:33.999
Consistent video title format.

84
00:06:34.000 --> 00:06:36.000
We start with the session.

85
00:06:36.000 --> 00:06:38.000
Followed by the speaker.

86
00:06:38.000 --> 00:06:42.000
Or if it's a stream archive,
it's in another format.

87
00:06:42.000 --> 00:06:49.000
If it's a session with many speakers,
we can't fit all names in the title.

88
00:06:49.000 --> 00:06:52.000
We have to put it in yet another format.

89
00:06:52.000 --> 00:06:59.000
Actually, we can manage it manually.

90
00:06:59.000 --> 00:07:01.000
But it may be too inefficient.

91
00:07:01.000 --> 00:07:06.000
And if we want to add subtitle,
how will we manage it?

92
00:07:06.000 --> 00:07:07.000
Okay.

93
00:07:07.000 --> 00:07:14.000
So, P' Thai created this repo in GitHub.
creatorsgarten/videos

94
00:07:14.000 --> 00:07:27.000
We can manage each video's metadata
through this repository.

95
00:07:27.000 --> 00:07:30.000
And a GitHub Actions bot will
make changes accordingly.

96
00:07:30.000 --> 00:07:35.000
When we manage each session,

97
00:07:35.000 --> 00:07:41.690
We can create a markdown file
with metadata, such as

98
00:07:41.691 --> 00:07:51.000
title, speaker, youtube id,
and session description.

99
00:07:51.000 --> 00:07:59.013
For other video types,
such as hackathon pitch,

100
00:07:59.014 --> 00:08:08.000
we just specify the type, and our code
will format the title accordingly.

101
00:08:08.000 --> 00:08:20.000
For subtitles, we don't have to manage the
files locally or on YouTube.

102
00:08:20.000 --> 00:08:30.000
In this repo, we can upload subtitle file
in VTT format, which is a global standard.

103
00:08:30.000 --> 00:08:35.000
It will be uploaded to YouTube.

104
00:08:36.000 --> 00:08:44.638
Consistency is not only about
video title and description,

105
00:08:44.639 --> 00:08:50.000
but also about the video thumbnail.

106
00:08:50.001 --> 00:09:00.999
At first, we intended to make
each event look different.

107
00:09:01.000 --> 00:09:07.494
P' Thai suggested using
a consistent thumbnail format

108
00:09:07.495 --> 00:09:12.000
similar to Sakurai's channel
on creating games.

109
00:09:12.000 --> 00:09:16.000
The solution we got is not an automation.

110
00:09:16.000 --> 00:09:20.000
But it’s Figma's component system.

111
00:09:20.000 --> 00:09:25.000
When we make video thumbnails,
we have a preset template.

112
00:09:25.000 --> 00:09:31.000
We have the header on the top and
we put the video image at the back.

113
00:09:31.000 --> 00:09:40.000
And we put two lines of text
as a catchphrase.

114
00:09:40.000 --> 00:09:47.000
Figma’s system is very versatile.

115
00:09:47.000 --> 00:09:51.500
We can create the header as a component

116
00:09:51.500 --> 00:09:56.200
And when we change it

117
00:09:56.200 --> 00:09:58.900
It will take effect with every video

118
00:09:58.900 --> 00:10:03.700
We don't need to update
the header one by one

119
00:10:03.700 --> 00:10:10.300
And when all files are finished,
we put them in the GitHub repo

120
00:10:10.300 --> 00:10:17.100
It will trigger an event in GitHub Actions

121
00:10:17.100 --> 00:10:21.100
and it will update the videos on YouTube

122
00:10:21.100 --> 00:10:29.099
Why did we do all of this?

123
00:10:29.100 --> 00:10:34.600
We did it because of the ownership

124
00:10:34.600 --> 00:10:40.200
Creatorsgarten is an open source group

125
00:10:40.200 --> 00:10:47.500
Even our financials information
is in the open on the website

126
00:10:47.500 --> 00:10:59.799
But we can't grant our YouTube channel’s
ownership to just everyone

127
00:10:59.800 --> 00:11:03.800
But we can open source the videos metadata

128
00:11:03.800 --> 00:11:08.800
And when someone wants to
make changes to their video

129
00:11:08.800 --> 00:11:15.100
they can send a pull request.

130
00:11:15.100 --> 00:11:19.100
This is the main concept.

131
00:11:19.100 --> 00:11:24.100
But we also utilize GitHub
with another feature

132
00:11:24.100 --> 00:11:27.100
Our YouTube channel banner

133
00:11:27.100 --> 00:11:33.100
We want our YouTube channel’s banner
to adapt to each event

134
00:11:33.100 --> 00:11:36.824
When there is an event,
we will adapt it to another style.

135
00:11:36.825 --> 00:11:39.799
This is our work in progress.

136
00:11:39.800 --> 00:11:50.100
Manually creating new graphics
every time is a waste of time

137
00:11:50.100 --> 00:11:52.100
because we are lazy

138
00:11:52.100 --> 00:11:59.100
So we have another repository
called "banner"

139
00:11:59.100 --> 00:12:03.100
The concept is simple. A SvelteKit app.

140
00:12:03.100 --> 00:12:16.800
A puppeteer script will take a screenshot
of that webpage into a picture

141
00:12:16.800 --> 00:12:22.343
Then it will use the YouTube API
to update the channel banner.

142
00:12:22.344 --> 00:12:29.500
This action runs periodically. And that’s
how we utilize GitHub Actions.

143
00:12:29.500 --> 00:12:32.500
Now I will show you.

144
00:12:34.300 --> 00:12:35.000
OK

145
00:12:35.300 --> 00:12:36.800
So, this one

146
00:12:36.800 --> 00:12:38.800
These are some videos

147
00:12:38.800 --> 00:12:45.800
I will create a new thumbnail.

148
00:12:45.800 --> 00:12:50.800
I duplicate the frame
and align it to the grid.

149
00:12:50.800 --> 00:12:55.800
I want to create a header.

150
00:12:55.800 --> 00:13:01.800
I detach this one.

151
00:13:05.700 --> 00:13:08.799
This is a full demo.

152
00:13:08.800 --> 00:13:16.899
Did they move the detach command?

153
00:13:16.900 --> 00:13:18.800
Never mind.

154
00:13:18.800 --> 00:13:22.800
I will not create a new one.

155
00:13:22.800 --> 00:13:25.800
But I will show you how to
edit the thumbnail.

156
00:13:25.800 --> 00:13:28.800
For example, the Side Project Showdown.

157
00:13:28.800 --> 00:13:33.800
I will change it to Code Golf Party.

158
00:13:33.800 --> 00:13:35.800
If we have a lot of videos,

159
00:13:35.800 --> 00:13:40.800
we can see that when we change
the header component

160
00:13:40.800 --> 00:13:42.800
it will take effect on all videos.

161
00:13:42.800 --> 00:13:50.800
Now I just export these frames.

162
00:13:50.800 --> 00:13:55.800
Then, I will get the thumbnail
that is ready to be published.

163
00:13:55.800 --> 00:13:57.800
When I get a file like this,

164
00:13:57.800 --> 00:14:07.800
we go the video repo,

165
00:14:07.800 --> 00:14:16.800
when I want to update the thumbnail
for a certain session,

166
00:14:16.800 --> 00:14:20.800
I just drag and drop the jpeg file
into the folder.

167
00:14:20.800 --> 00:14:22.800
Then, I will push it to GitHub.

168
00:14:22.800 --> 00:14:28.800
And wait 1 minute for GitHub Actions
to update it on YouTube.

169
00:14:28.800 --> 00:14:31.800
That's about it.

170
00:14:35.800 --> 00:14:39.800
This is the process of
managing our videos.

171
00:14:39.800 --> 00:14:42.800
Next, the second part.

172
00:14:42.800 --> 00:14:48.800
We will manage the content in the wiki engine of Creators Garden.

173
00:14:48.800 --> 00:14:53.800
I will invite P'Tai to explain this session.

174
00:14:53.800 --> 00:14:55.800
Please.

175
00:14:55.800 --> 00:14:57.800
Thank you, Wigpy.

176
00:14:57.800 --> 00:15:02.800
Before I start, I would like to give a big hand to Wigpy.

177
00:15:02.800 --> 00:15:06.800
Because the content in the channel for the past 2-3 months,

178
00:15:06.800 --> 00:15:08.800
Wigpy has managed it all.

179
00:15:08.800 --> 00:15:10.800
Almost everything.

180
00:15:10.800 --> 00:15:12.800
I have set the system,

181
00:15:12.800 --> 00:15:14.800
made the figma,

182
00:15:14.800 --> 00:15:18.800
and Wigpy has done a pretty tough job.

183
00:15:18.800 --> 00:15:20.800
He always cuts the clip out,

184
00:15:20.800 --> 00:15:21.800
checks the sound,

185
00:15:21.800 --> 00:15:23.800
whether the sound is okay or not,

186
00:15:23.800 --> 00:15:25.800
uploads it to YouTube,

187
00:15:25.800 --> 00:15:26.800
makes the thumbnail, etc.

188
00:15:26.800 --> 00:15:28.800
Although we have automation,

189
00:15:28.800 --> 00:15:31.800
we have to admit that these works are very tough.

190
00:15:31.800 --> 00:15:34.800
Our channel will not grow this much without Wigpy.

191
00:15:34.800 --> 00:15:36.800
Thank you, Wigpy.

192
00:15:36.800 --> 00:15:40.800
And who hasn't subscribed to the Creators Garden channel,

193
00:15:40.800 --> 00:15:42.800
please subscribe.

194
00:15:42.800 --> 00:15:48.800
We want our content to have more viewers.

195
00:15:48.800 --> 00:15:53.800
Now, we have more than 200 people.

196
00:15:53.800 --> 00:15:55.800
400, right?

197
00:15:55.800 --> 00:15:56.800
Yes.

198
00:15:56.800 --> 00:15:58.800
This is the main thing.

199
00:15:58.800 --> 00:16:00.800
One more thing.

200
00:16:00.800 --> 00:16:04.800
In addition to running events and live work,

201
00:16:04.800 --> 00:16:09.800
we also have partners and organizers.

202
00:16:09.800 --> 00:16:12.800
Like Microsoft this time, Spark Tech, right?

203
00:16:13.800 --> 00:16:16.800
We are here and help live.

204
00:16:16.800 --> 00:16:18.800
We also grow the channel.

205
00:16:18.800 --> 00:16:22.800
So we hope it will be useful.

206
00:16:22.800 --> 00:16:23.800
This time,

207
00:16:23.800 --> 00:16:33.240
The last part is about the website Creators Garden that we have.

208
00:16:33.240 --> 00:16:36.980
This is the Creators Garden website, creatorsgarden.org.

209
00:16:36.980 --> 00:16:39.080
Let's take a look at the features first.

210
00:16:39.080 --> 00:16:43.100
There will be a cute page that contains events.

211
00:16:43.100 --> 00:16:46.300
And there is something called Wiki.

212
00:16:46.300 --> 00:16:49.200
Wiki is like a source of knowledge for us.

213
00:16:49.200 --> 00:16:56.700
Anything that is public knowledge, we will try to put it here.

214
00:16:56.700 --> 00:17:01.360
For example, about the setup and streaming.

215
00:17:01.360 --> 00:17:04.260
Previously, I and Liffy helped each other.

216
00:17:04.260 --> 00:17:12.040
But now we are taking the knowledge to many people to help each other stream.

217
00:17:12.040 --> 00:17:18.240
Liffy wrote in Wiki how to prepare OBS setup.

218
00:17:18.240 --> 00:17:19.200
These are in Wiki.

219
00:17:19.200 --> 00:17:23.760
The Wiki system is the main point of this talk.

220
00:17:23.760 --> 00:17:29.400
Because we wrote the custom Wiki system for the website Creators Garden to use.

221
00:17:29.400 --> 00:17:34.000
The question is, there are actually a lot of these things.

222
00:17:34.000 --> 00:17:36.100
Why do we have to write it ourselves?

223
00:17:36.100 --> 00:17:43.900
Before we get to this point, we have tried many solutions.

224
00:17:43.900 --> 00:17:48.240
We will go from the old solution to the most modern solution.

225
00:17:49.200 --> 00:17:54.200
The first one is the classic software.

226
00:17:54.200 --> 00:17:58.200
For example, MediaWiki, DokuWiki, PMWiki.

227
00:17:58.200 --> 00:18:02.700
These programs are easy to fix.

228
00:18:02.700 --> 00:18:04.700
This is the point that I really like.

229
00:18:04.700 --> 00:18:09.700
If we want to fix any page, we can press the edit button, type and save.

230
00:18:09.700 --> 00:18:13.760
There is something called the Wiki way.

231
00:18:13.760 --> 00:18:17.200
They say that the wiki's mind or the line of the wiki's mind.

232
00:18:17.200 --> 00:18:17.800
Or what is it called?

233
00:18:17.800 --> 00:18:18.200
The wiki's mind.

234
00:18:18.200 --> 00:18:18.500
The wiki's mind.

235
00:18:18.500 --> 00:18:18.800
The wiki's mind.

236
00:18:18.800 --> 00:18:19.300
The wiki's mind ?

237
00:18:19.300 --> 00:18:19.800
The wiki's mind.

238
00:18:19.800 --> 00:18:20.300
The wiki's mind.

239
00:18:20.300 --> 00:18:20.400
The wiki's mind.

240
00:18:20.400 --> 00:18:20.600
The wiki's mind?

241
00:18:20.600 --> 00:18:20.900
The wiki's mind?

242
00:18:20.900 --> 00:18:21.300
The wiki's mind.

243
00:18:21.300 --> 00:18:21.600
The wiki's mind?

244
00:18:21.600 --> 00:18:21.900
The wiki's mind?

245
00:18:21.900 --> 00:18:22.100
The wiki's mind?

246
00:18:22.100 --> 00:18:22.200
The wiki's mind?

247
00:18:22.200 --> 00:18:22.500
The wiki's mind,?

248
00:18:22.500 --> 00:18:22.700
The wiki's mind?

249
00:18:22.700 --> 00:18:23.100
The wiki's mind?

250
00:18:23.100 --> 00:18:23.400
The wiki's mind ?

251
00:18:23.400 --> 00:18:23.800
The wiki's mind ?

252
00:18:23.800 --> 00:18:24.100
The wiki's mind ?

253
00:18:24.100 --> 00:18:24.500
The wiki's mind ?

254
00:18:24.500 --> 00:18:24.800
The wiki's mind ?

255
00:18:24.800 --> 00:18:26.300
The wiki's mind ?

256
00:18:26.300 --> 00:18:28.600
The wiki's mind ?

257
00:18:28.600 --> 00:18:28.900
The wiki's mind ?

258
00:18:28.900 --> 00:18:29.300
The wiki's mind ?

259
00:18:29.300 --> 00:18:29.600
The wiki's mind ?

260
00:18:29.600 --> 00:18:29.700
The wiki's mind ?

261
00:18:29.700 --> 00:18:30.040
The wiki's mind ?

262
00:18:30.040 --> 00:18:30.300
The wiki's mind ?

263
00:18:30.300 --> 00:18:35.300
It will be changed frequently.

264
00:18:35.300 --> 00:18:39.300
The Wikisoftware program is very easy to edit.

265
00:18:39.300 --> 00:18:44.300
The second thing I like is that the wikisoftware is a plaintext format.

266
00:18:44.300 --> 00:18:46.300
How is plaintext good?

267
00:18:46.300 --> 00:18:50.300
When I want to edit, I can copy these messages to the VSCode

268
00:18:50.300 --> 00:18:52.300
and use the text editor that I like.

269
00:18:52.300 --> 00:18:55.300
After that, copy and paste it back in and press save.

270
00:18:55.300 --> 00:18:58.300
One of the things I like is plaintext.

271
00:18:58.300 --> 00:19:02.300
Another thing is that the system is quite flexible.

272
00:19:02.300 --> 00:19:06.300
For example, this wiki is called TVTropes.

273
00:19:06.300 --> 00:19:10.300
It uses the PM wiki to make it into its own web.

274
00:19:10.300 --> 00:19:12.300
I don't know what features it has.

275
00:19:12.300 --> 00:19:16.300
It's a wiki that I really like.

276
00:19:16.300 --> 00:19:19.300
The extension of MediaWiki itself is 100.

277
00:19:19.300 --> 00:19:23.300
We can install it to customize our wiki.

278
00:19:23.300 --> 00:19:27.300
This is what I like about wiki programs.

279
00:19:27.300 --> 00:19:28.300
But the thing that I like about it is that

280
00:19:28.300 --> 00:19:30.300
it has a pain point.

281
00:19:30.300 --> 00:19:34.300
First, most of these programs are written in PHP.

282
00:19:34.300 --> 00:19:40.300
So when we deploy, we have to rent a server and set up a database.

283
00:19:40.300 --> 00:19:43.300
It's not really a container.

284
00:19:43.300 --> 00:19:47.300
The text stack is not really cloud-native.

285
00:19:47.300 --> 00:19:51.300
Another thing is that I don't really like its syntax.

286
00:19:51.300 --> 00:19:53.300
It's not Markdown.

287
00:19:53.300 --> 00:19:57.300
For MediaWiki, if we want to make it thick,

288
00:19:57.300 --> 00:19:59.300
we have to write three single quotes.

289
00:19:59.300 --> 00:20:02.300
If you write Markdown, you might be confused.

290
00:20:02.300 --> 00:20:05.300
When you write wiki, you have to change the syntax.

291
00:20:05.300 --> 00:20:07.300
You might not like it.

292
00:20:07.300 --> 00:20:11.300
Another thing is that these wiki come in a package.

293
00:20:11.300 --> 00:20:14.300
So it will come with a theme and so on.

294
00:20:14.300 --> 00:20:18.300
It will be written as a PHP template.

295
00:20:18.300 --> 00:20:21.300
And then use jQuery, use regular CSS.

296
00:20:21.300 --> 00:20:24.300
So if we want to customize with Tailwind or React,

297
00:20:24.300 --> 00:20:26.300
it's quite difficult to integrate.

298
00:20:26.300 --> 00:20:33.300
So we didn't choose to use a successful wiki software.

299
00:20:33.300 --> 00:20:37.300
The second option is the static size generator.

300
00:20:37.300 --> 00:20:39.300
It just came out.

301
00:20:39.300 --> 00:20:42.300
It's been around for about 10 years.

302
00:20:42.300 --> 00:20:47.300
There will be Jackal, Eleventy, Hugo, Weedplace, etc.

303
00:20:47.300 --> 00:20:50.300
What I like is that it's plain text, Markdown.

304
00:20:50.300 --> 00:20:52.300
And the content is in the grid.

305
00:20:52.300 --> 00:20:54.300
Easy to fix.

306
00:20:54.300 --> 00:20:58.300
And when it's a static file, we can upload it to hosting.

307
00:20:58.300 --> 00:21:01.300
No need to take care of the server.

308
00:21:01.300 --> 00:21:05.300
There will be GitHub page that can host these static sizes.

309
00:21:05.300 --> 00:21:09.300
Including others such as Netlify, Vercel, Cloudflare, Pages, etc.

310
00:21:09.300 --> 00:21:10.300
It's all full.

311
00:21:10.300 --> 00:21:16.300
But the downside I found when making a web with static size generator is

312
00:21:16.300 --> 00:21:19.300
It's quite difficult to contribute.

313
00:21:19.300 --> 00:21:23.300
Because the traditional wiki, we press edit, fix, save.

314
00:21:23.300 --> 00:21:24.300
Finish.

315
00:21:24.300 --> 00:21:26.300
See the result immediately.

316
00:21:26.300 --> 00:21:28.300
But when it comes to static size generator,

317
00:21:28.300 --> 00:21:34.300
I have to fork, repo, fix, run dev server, check, commit.

318
00:21:34.300 --> 00:21:36.300
Push up, open PR.

319
00:21:36.300 --> 00:21:39.300
Wait for people to review PR and it will be uploaded on the web.

320
00:21:39.300 --> 00:21:44.300
Like this one, I try to contribute to the documentation of Next.js.

321
00:21:44.300 --> 00:21:48.300
You will see that I fixed only 2 buttons.

322
00:21:48.300 --> 00:21:50.300
But I have to explain what I fixed.

323
00:21:50.300 --> 00:21:52.300
Almost 10 buttons.

324
00:21:52.300 --> 00:21:54.300
Like this.

325
00:21:54.300 --> 00:21:58.300
It makes it quite difficult to fix.

326
00:21:58.300 --> 00:22:02.300
It's different from the wiki way that says it's easy to fix.

327
00:22:02.300 --> 00:22:04.300
Easy to revert.

328
00:22:04.300 --> 00:22:11.300
And when fixing, I have to fork, repo, run dev server.

329
00:22:11.300 --> 00:22:13.300
It's not very convenient.

330
00:22:13.300 --> 00:22:16.300
And when I'm done, I haven't seen the result yet.

331
00:22:16.300 --> 00:22:19.300
I have to wait for the web to rebuild and wait for it to redeploy.

332
00:22:19.300 --> 00:22:21.300
It will get new content.

333
00:22:21.300 --> 00:22:27.300
So I decided not to use static size generator.

334
00:22:27.300 --> 00:22:35.300
But when I'm in this era, there's a tool that has been booming in the past 4-5 years.

335
00:22:35.300 --> 00:22:37.300
It's Notion.

336
00:22:37.300 --> 00:22:41.300
Actually, we've been using Notion a lot since 2019.

337
00:22:41.300 --> 00:22:45.300
We use Notion to store knowledge for all kinds of work.

338
00:22:45.300 --> 00:22:47.300
I really like Notion.

339
00:22:47.300 --> 00:22:49.300
When we fix many people,

340
00:22:49.300 --> 00:22:52.300
UX is very good.

341
00:22:52.300 --> 00:22:56.300
And now, many people use Notion almost all.

342
00:22:56.300 --> 00:22:59.300
But what I still feel is disturbing is that

343
00:22:59.300 --> 00:23:06.300
First, sometimes I want to put in bar charts, speech bubbles, or widgets that are not in Notion.

344
00:23:06.300 --> 00:23:12.300
We can't fully control the website's appearance that much.

345
00:23:12.300 --> 00:23:15.300
Second, I hate Notion's size bar.

346
00:23:15.300 --> 00:23:17.300
Because I try to...

347
00:23:17.300 --> 00:23:23.300
I try to organize the content in Notion.

348
00:23:23.300 --> 00:23:27.300
No matter how much I try to organize, it's still a mess.

349
00:23:27.300 --> 00:23:29.300
So I don't like the size bar.

350
00:23:29.300 --> 00:23:33.300
I prefer to have the bar charts and links.

351
00:23:33.300 --> 00:23:36.300
Another thing is that the content is in its own form.

352
00:23:36.300 --> 00:23:38.300
It's not plain text.

353
00:23:38.300 --> 00:23:41.300
I just copied it, fixed it in VS Code, and pasted it back.

354
00:23:41.300 --> 00:23:44.300
And if many people use it and have a lot of information,

355
00:23:44.300 --> 00:23:46.300
it may be expensive.

356
00:23:46.300 --> 00:23:51.300
So I tried to create a wiki engine myself.

357
00:23:51.300 --> 00:23:53.300
This wiki engine is called Content Skarten.

358
00:23:53.300 --> 00:23:55.300
I'll show you the features.

359
00:23:55.300 --> 00:23:59.300
It's open source, headless, modern, and cloud-native.

360
00:23:59.300 --> 00:24:01.300
It's a wiki engine.

361
00:24:01.300 --> 00:24:03.300
The main thing is to use Markdown syntax.

362
00:24:03.300 --> 00:24:05.300
When you see this, it's Markdown.

363
00:24:05.300 --> 00:24:07.300
If you want to add something, just add a flower.

364
00:24:07.300 --> 00:24:09.300
No need to remember the new syntax.

365
00:24:09.300 --> 00:24:12.300
And the content is stored in Git.

366
00:24:12.300 --> 00:24:14.300
So if you go to Creator Skarten or wiki,

367
00:24:14.300 --> 00:24:17.300
you'll see all the information.

368
00:24:17.300 --> 00:24:19.300
It's a Markdown file.

369
00:24:19.300 --> 00:24:21.300
And when it's in Git,

370
00:24:21.300 --> 00:24:24.300
the good thing is that we can fix it directly on the web.

371
00:24:24.300 --> 00:24:26.300
We have a UI for fixing it on the web.

372
00:24:26.300 --> 00:24:30.300
But we'll clone the repo to fix it in our own editor.

373
00:24:30.300 --> 00:24:32.300
Or currently,

374
00:24:32.300 --> 00:24:35.300
there's a web called github.dev

375
00:24:35.300 --> 00:24:37.300
that is a VS Code in the browser.

376
00:24:37.300 --> 00:24:41.300
It allows us to fix content

377
00:24:41.300 --> 00:24:44.300
by using the VS Code editor,

378
00:24:44.300 --> 00:24:45.300
but it's in the web.

379
00:24:45.300 --> 00:24:47.300
We've integrated this already.

380
00:24:47.300 --> 00:24:51.300
If we go to the Creator Skarten wiki

381
00:24:51.300 --> 00:24:53.300
and press the dot button,

382
00:24:53.300 --> 00:24:56.300
it'll take us to github.dev.

383
00:24:56.300 --> 00:25:01.300
Or when we use VS Code to fix what we get,

384
00:25:01.300 --> 00:25:03.300
when we write, we won't be writing alone

385
00:25:03.300 --> 00:25:06.300
because we have GitHub Code Pilot to help us write.

386
00:25:06.300 --> 00:25:10.300
And if you want to make large scale changes,

387
00:25:10.300 --> 00:25:11.300
for example,

388
00:25:11.300 --> 00:25:14.300
I want to fix many files at once,

389
00:25:14.300 --> 00:25:17.300
I don't have to write scripts to shoot APIs

390
00:25:17.300 --> 00:25:20.300
to API Notion or API this and that.

391
00:25:20.300 --> 00:25:21.300
I can just import the repo,

392
00:25:21.300 --> 00:25:23.300
write scripts, fix files,

393
00:25:23.300 --> 00:25:26.300
and commit push back to wiki.

394
00:25:28.300 --> 00:25:31.300
And the next feature is that it's very tight

395
00:25:31.300 --> 00:25:33.300
integrated with GitHub.

396
00:25:33.300 --> 00:25:37.300
When we fix a page in the Content Skarten,

397
00:25:37.300 --> 00:25:39.300
what happens is that it shoots APIs

398
00:25:39.300 --> 00:25:44.300
to the GitHub API to fix that file directly on GitHub.

399
00:25:44.300 --> 00:25:47.300
We use GitHub as a source of truth.

400
00:25:47.300 --> 00:25:50.300
And when the information is on GitHub,

401
00:25:50.300 --> 00:25:53.300
it allows us to use GitHub's various features,

402
00:25:53.300 --> 00:25:55.300
such as webhooks.

403
00:25:55.300 --> 00:25:58.300
When someone fixes a page,

404
00:25:58.300 --> 00:26:01.300
I set up a webhook to shoot it into Discord.

405
00:26:01.300 --> 00:26:03.300
So when someone fixes it,

406
00:26:03.300 --> 00:26:04.300
they know immediately.

407
00:26:04.300 --> 00:26:05.300
You don't have to write a code

408
00:26:05.300 --> 00:26:07.300
because it's a feature that GitHub has for you.

409
00:26:07.300 --> 00:26:09.300
You don't have to implement it yourself.

410
00:26:09.300 --> 00:26:15.300
And with the fact that Git has a history,

411
00:26:15.300 --> 00:26:17.300
we don't have to implement features

412
00:26:17.300 --> 00:26:20.300
that look at what this page is fixed.

413
00:26:20.300 --> 00:26:21.300
When you press history,

414
00:26:21.300 --> 00:26:23.300
it runs into GitHub.

415
00:26:24.300 --> 00:26:27.300
And when it's a web that we do it ourselves,

416
00:26:27.300 --> 00:26:29.300
we can do syntax,

417
00:26:29.300 --> 00:26:31.300
do various components of ourselves.

418
00:26:31.300 --> 00:26:34.300
For example, sometimes we want to have it.

419
00:26:34.300 --> 00:26:38.300
We want to discuss some parts of the content,

420
00:26:38.300 --> 00:26:41.300
but we're not ready to write a real text.

421
00:26:41.300 --> 00:26:43.300
And then create a speech bubble like this.

422
00:26:43.300 --> 00:26:48.300
Let people who are editors talk to each other.

423
00:26:48.300 --> 00:26:53.300
Or sometimes we want to visualize the feedback of the work.

424
00:26:53.300 --> 00:26:56.300
We do it like this.

425
00:26:56.300 --> 00:27:01.300
Or this page will be the page that includes all our events.

426
00:27:01.300 --> 00:27:05.300
We will have links related to each event.

427
00:27:05.300 --> 00:27:07.300
You will see that it is a fairly advanced table.

428
00:27:07.300 --> 00:27:10.300
But the code behind it is just this.

429
00:27:10.300 --> 00:27:13.300
It can render templates.

430
00:27:13.300 --> 00:27:17.300
And the template can query information from other pages

431
00:27:17.300 --> 00:27:20.300
to generate a table.

432
00:27:20.300 --> 00:27:23.300
This is using the language called Liquid.

433
00:27:23.300 --> 00:27:28.300
So that we don't have to maintain this table.

434
00:27:28.300 --> 00:27:30.300
When we create a new page,

435
00:27:30.300 --> 00:27:33.300
this table will update accordingly.

436
00:27:33.300 --> 00:27:35.300
This is from GitHub.

437
00:27:35.300 --> 00:27:40.300
This is from the feature called Front Matter.

438
00:27:40.300 --> 00:27:47.300
We can put a data structure that is YAML in each page.

439
00:27:47.300 --> 00:27:51.300
And those information will be put into the database,

440
00:27:51.300 --> 00:27:53.300
which we can query later.

441
00:27:53.300 --> 00:27:55.300
For example, this event page,

442
00:27:55.300 --> 00:27:57.300
we don't have to keep updating it all the time.

443
00:27:57.300 --> 00:28:00.300
It's just going to be queried from the database.

444
00:28:00.300 --> 00:28:04.300
So this feature allows us to implement advanced features.

445
00:28:04.300 --> 00:28:09.300
For example, we can keep the website settings in the wiki.

446
00:28:09.300 --> 00:28:14.300
And the feature flags are kept in the wiki.

447
00:28:14.300 --> 00:28:16.300
Or even the inventory,

448
00:28:16.300 --> 00:28:18.300
the tools that we track,

449
00:28:18.300 --> 00:28:21.300
whether there is any tool in the Creator's Garden.

450
00:28:21.300 --> 00:28:24.300
We have this page to track what tools we have.

451
00:28:24.300 --> 00:28:26.300
But we don't write,

452
00:28:26.300 --> 00:28:30.300
we don't keep the information as a markdown.

453
00:28:30.300 --> 00:28:32.300
We keep it as YAML like this.

454
00:28:32.300 --> 00:28:36.300
And then we write it as a script,

455
00:28:36.300 --> 00:28:41.300
as a template to generate a beautiful chart again.

456
00:28:41.300 --> 00:28:45.300
Therefore, the advantage of keeping everything as YAML is that

457
00:28:45.300 --> 00:28:47.300
it is machine readable.

458
00:28:47.300 --> 00:28:50.300
We can write a script or write a tool

459
00:28:50.300 --> 00:28:53.300
to update this information.

460
00:28:53.300 --> 00:28:54.300
That's it.

461
00:28:54.300 --> 00:28:56.300
I like that it is open data.

462
00:28:56.300 --> 00:28:59.300
Finally, it is headless.

463
00:28:59.300 --> 00:29:01.300
The web page that you see is not part of the content.

464
00:29:01.300 --> 00:29:03.300
It is part of the content garden.

465
00:29:03.300 --> 00:29:05.300
Because the content garden has only APIs.

466
00:29:05.300 --> 00:29:07.300
There are APIs like this.

467
00:29:07.300 --> 00:29:10.300
For example, we shoot the API content garden search.

468
00:29:10.300 --> 00:29:13.300
Send match event location as cleft words.

469
00:29:13.300 --> 00:29:15.300
When we shoot this API,

470
00:29:15.300 --> 00:29:17.300
it will find the entire event.

471
00:29:17.300 --> 00:29:22.300
It will find the entire page that has event.location as cleft words.

472
00:29:22.300 --> 00:29:25.300
That is, we put the information into the wiki.

473
00:29:25.300 --> 00:29:27.300
And we ask the wiki question.

474
00:29:27.300 --> 00:29:29.300
It will answer back.

475
00:29:29.300 --> 00:29:30.300
Okay.

476
00:29:30.300 --> 00:29:34.300
Next, this is the basic feature of this system.

477
00:29:34.300 --> 00:29:36.300
Let's look at the tech stack.

478
00:29:36.300 --> 00:29:40.300
The main thing is that the website is a repo.

479
00:29:40.300 --> 00:29:42.300
Written with Astro.

480
00:29:42.300 --> 00:29:46.300
If you go to BKKJS event first,

481
00:29:46.300 --> 00:29:48.300
Liffy will recommend Astro.

482
00:29:48.300 --> 00:29:49.300
Ah, call meetup.

483
00:29:49.300 --> 00:29:50.300
Yes.

484
00:29:50.300 --> 00:29:51.300
If you want to know about Astro,

485
00:29:51.300 --> 00:29:55.300
you can watch the talk back on YouTube channel.

486
00:29:55.300 --> 00:29:58.300
And the backend is the content garden.

487
00:29:58.300 --> 00:30:01.300
The content garden will be at this repo.

488
00:30:01.300 --> 00:30:04.300
Ah, the work is that it will talk to GitHub API

489
00:30:04.300 --> 00:30:08.300
to extract data from the repository that we consider to be a source of truth.

490
00:30:08.300 --> 00:30:16.300
But, ah, remember the example that we found all the events that can be arranged at cleft words, right?

491
00:30:16.300 --> 00:30:20.300
Ah, GitHub API does not have an API for this kind of query.

492
00:30:20.300 --> 00:30:25.300
We have to, so we have to keep another database as a cache, an index.

493
00:30:25.300 --> 00:30:27.300
So, ah, the source of truth will be this.

494
00:30:27.300 --> 00:30:30.300
But the data will flow to MongoDB.

495
00:30:30.300 --> 00:30:36.300
And we will have to arrange the data format so that we can query the data that is in each file.

496
00:30:36.300 --> 00:30:40.300
Ah, so this is the content garden.

497
00:30:40.300 --> 00:30:42.300
Let's come to the conclusion.

498
00:30:42.300 --> 00:30:49.300
Ah, the takeaway for this talk is that I feel that GitHub ecosystem of GitHub

499
00:30:49.300 --> 00:30:55.300
It allows us to build a custom wiki system as quickly as possible.

500
00:30:55.300 --> 00:30:56.300
It is.

501
00:30:56.300 --> 00:31:02.300
I think that if we do not have, if we do not have webhook systems or GitHub API

502
00:31:02.300 --> 00:31:08.300
that have API that stores history or various tools like GitHub.dev, something like this.

503
00:31:08.300 --> 00:31:11.300
Or even GitHub co-pilot that helps me write code.

504
00:31:11.300 --> 00:31:15.300
Building a system like this, it should take a lot longer than this.

505
00:31:15.300 --> 00:31:19.300
Well, I have to say that the content garden is very bare bones.

506
00:31:19.300 --> 00:31:21.300
Even just deleting the page, it still can't do it.

507
00:31:21.300 --> 00:31:24.300
But I don't have to implement because we don't delete the page often.

508
00:31:24.300 --> 00:31:28.300
But as I want to delete the page, I click into the repo and delete the file.

509
00:31:28.300 --> 00:31:30.300
Ah, don't have to implement it yourself.

510
00:31:30.300 --> 00:31:36.300
That is, we stand on top of the shoulder of giants.

511
00:31:36.300 --> 00:31:41.300
The next thing is the data that we keep as plain text and keep it in the grid.

512
00:31:41.300 --> 00:31:44.300
It allows us to build things.

513
00:31:44.300 --> 00:31:46.300
Add, add, add.

514
00:31:46.300 --> 00:31:50.300
Without using any API, like this.

515
00:31:50.300 --> 00:31:53.300
One idea that I used to think about is that I want to try to see that.

516
00:31:53.300 --> 00:31:55.300
Each page is connected.

517
00:31:55.300 --> 00:31:57.300
I did this with my own website.

518
00:31:57.300 --> 00:32:05.300
But it might be cool if we can see that each page is connected.

519
00:32:05.300 --> 00:32:08.300
And it becomes what is called a knowledge graph.

520
00:32:08.300 --> 00:32:12.300
Or this tool is garden.org.

521
00:32:12.300 --> 00:32:16.300
It is a link shortener that creators garden use.

522
00:32:16.300 --> 00:32:21.300
Ah, in the past, we might have to give access to bitly or.

523
00:32:21.300 --> 00:32:22.300
Or like.

524
00:32:22.300 --> 00:32:23.300
Or like.

525
00:32:23.300 --> 00:32:26.300
The service of some of the angels that might be expensive.

526
00:32:26.300 --> 00:32:29.300
Ah, but when we have a content garden.

527
00:32:29.300 --> 00:32:32.300
We put all the links in the wiki.

528
00:32:32.300 --> 00:32:35.300
And then we write a program for garden.org.

529
00:32:35.300 --> 00:32:38.300
Pull the information from the front matter here.

530
00:32:38.300 --> 00:32:40.300
And then manage the redirect.

531
00:32:40.300 --> 00:32:44.300
Well, I think that when the data is open.

532
00:32:44.300 --> 00:32:47.300
We can easily do something with it.

533
00:32:47.300 --> 00:32:49.300
Or like on YouTube channel.

534
00:32:49.300 --> 00:32:50.300
What Liffy showed to see.

535
00:32:50.300 --> 00:32:52.300
That the channel banner.

536
00:32:52.300 --> 00:32:54.300
It is the logo of the event.

537
00:32:54.300 --> 00:32:56.300
Different that we set up.

538
00:32:56.300 --> 00:32:59.300
This one also draws information from wiki as well.

539
00:32:59.300 --> 00:33:02.300
But I have to say that the last one.

540
00:33:02.300 --> 00:33:04.300
This tool is not a silver bullet.

541
00:33:04.300 --> 00:33:06.300
Many people complain as well.

542
00:33:06.300 --> 00:33:08.300
I don't like it to be plain text.

543
00:33:08.300 --> 00:33:10.300
I want to give like editing experience.

544
00:33:10.300 --> 00:33:11.300
It's like notion.

545
00:33:11.300 --> 00:33:12.300
Something like this.

546
00:33:12.300 --> 00:33:13.300
Right?

547
00:33:13.300 --> 00:33:14.300
Um.

548
00:33:14.300 --> 00:33:16.300
Or sometimes.

549
00:33:16.300 --> 00:33:20.300
Ah, there are some content that may not be public.

550
00:33:20.300 --> 00:33:21.300
Ah, or.

551
00:33:21.300 --> 00:33:24.300
It may not be practical to be public.

552
00:33:24.300 --> 00:33:26.300
Ah, I suggest that.

553
00:33:26.300 --> 00:33:27.300
Um.

554
00:33:27.300 --> 00:33:30.300
Let's use the right tool for the right job.

555
00:33:30.300 --> 00:33:32.300
That is, if you want to meet.

556
00:33:32.300 --> 00:33:34.300
Ah, you can use notion.

557
00:33:34.300 --> 00:33:35.300
Or use Google Doc.

558
00:33:35.300 --> 00:33:36.300
If you want to keep it as a schedule.

559
00:33:36.300 --> 00:33:37.300
Ah, Google Sheet.

560
00:33:37.300 --> 00:33:38.300
If you want to design, Figma.

561
00:33:38.300 --> 00:33:41.300
Use the right tool for the right job.

562
00:33:41.300 --> 00:33:44.300
But one thing that I would encourage.

563
00:33:44.300 --> 00:33:46.300
Is to try to make everything.

564
00:33:46.300 --> 00:33:47.300
Reachable.

565
00:33:47.300 --> 00:33:48.300
Reachable from wiki.

566
00:33:48.300 --> 00:33:49.300
Meaning.

567
00:33:49.300 --> 00:33:50.300
Reachable in this place.

568
00:33:50.300 --> 00:33:51.300
Meaning that.

569
00:33:51.300 --> 00:33:52.300
If we go to the wiki.

570
00:33:52.300 --> 00:33:53.300
It should have a route from.

571
00:33:53.300 --> 00:33:54.300
From the web.

572
00:33:54.300 --> 00:33:55.300
Ah.

573
00:33:55.300 --> 00:33:56.300
Go to.

574
00:33:56.300 --> 00:33:57.300
Go to the information set.

575
00:33:57.300 --> 00:33:58.300
For example.

576
00:33:58.300 --> 00:33:59.300
If I want to.

577
00:33:59.300 --> 00:34:00.300
Go to see that.

578
00:34:00.300 --> 00:34:01.300
When we organized the stupid hackathon.

579
00:34:01.300 --> 00:34:02.300
The second time.

580
00:34:02.300 --> 00:34:03.300
Which.

581
00:34:03.300 --> 00:34:04.300
That was in 2018.

582
00:34:04.300 --> 00:34:05.300
About 7 years ago.

583
00:34:05.300 --> 00:34:06.300
Ah.

584
00:34:06.300 --> 00:34:07.300
Proposal.

585
00:34:07.300 --> 00:34:08.300
What do we write?

586
00:34:08.300 --> 00:34:09.300
Well.

587
00:34:09.300 --> 00:34:10.300
Ah.

588
00:34:10.300 --> 00:34:11.300
Open the web page.

589
00:34:11.300 --> 00:34:12.300
Go to wiki.

590
00:34:12.300 --> 00:34:13.300
And then go to the list of events.

591
00:34:13.300 --> 00:34:14.300
And then.

592
00:34:14.300 --> 00:34:15.300
Go to the stupid hackathon Thailand.

593
00:34:15.300 --> 00:34:16.300
Ah.

594
00:34:16.300 --> 00:34:17.300
Come to.

595
00:34:17.300 --> 00:34:18.300
The page that is a coverage.

596
00:34:18.300 --> 00:34:19.300
And then.

597
00:34:19.300 --> 00:34:20.300
There will be a list of documents.

598
00:34:20.300 --> 00:34:21.300
We will have information for sponsors.

599
00:34:21.300 --> 00:34:22.300
At that time.

600
00:34:22.300 --> 00:34:23.300
We.

601
00:34:23.300 --> 00:34:24.300
At that time.

602
00:34:24.300 --> 00:34:25.300
We didn't use notion.

603
00:34:25.300 --> 00:34:26.300
At that time.

604
00:34:26.300 --> 00:34:27.300
We keep it in the drop box paper.

605
00:34:27.300 --> 00:34:28.300
Ah.

606
00:34:28.300 --> 00:34:29.300
I don't know who.

607
00:34:29.300 --> 00:34:30.300
Have you ever used it?

608
00:34:30.300 --> 00:34:31.300
Drop box paper.

609
00:34:31.300 --> 00:34:32.300
Ah.

610
00:34:32.300 --> 00:34:33.300
It may come before notion.

611
00:34:33.300 --> 00:34:34.300
Ah.

612
00:34:34.300 --> 00:34:35.300
But.

613
00:34:35.300 --> 00:34:36.300
In conclusion.

614
00:34:36.300 --> 00:34:37.300
No matter where the information is.

615
00:34:37.300 --> 00:34:38.300
It.

616
00:34:38.300 --> 00:34:39.300
At least.

617
00:34:39.300 --> 00:34:40.300
It is reachable.

618
00:34:40.300 --> 00:34:41.300
From.

619
00:34:41.300 --> 00:34:42.300
From.

620
00:34:42.300 --> 00:34:43.300
From our main face.

621
00:34:43.300 --> 00:34:44.300
Will make.

622
00:34:44.300 --> 00:34:45.300
It will make us.

623
00:34:45.300 --> 00:34:46.300
Ah.

624
00:34:46.300 --> 00:34:47.300
Like.

625
00:34:47.300 --> 00:34:48.300
Our knowledge.

626
00:34:48.300 --> 00:34:49.300
Will not disappear.

627
00:34:49.300 --> 00:34:50.300
If it is still.

628
00:34:50.300 --> 00:34:51.300
Reachable.

629
00:34:51.300 --> 00:34:52.300
Ah.

630
00:34:52.300 --> 00:34:53.300
Ah.

631
00:34:53.300 --> 00:34:54.300
Then.

632
00:34:54.300 --> 00:34:55.300
This is.

633
00:34:55.300 --> 00:34:56.300
The conclusion.

634
00:34:56.300 --> 00:34:57.300
That.

635
00:34:57.300 --> 00:34:58.300
I want to conclude.

636
00:34:58.300 --> 00:34:59.300
In this talk.

637
00:34:59.300 --> 00:35:00.300
Well.

638
00:35:00.300 --> 00:35:01.300
This will be.

639
00:35:01.300 --> 00:35:02.300
A link.

640
00:35:02.300 --> 00:35:03.300
To report.

641
00:35:03.300 --> 00:35:04.300
But.

642
00:35:04.300 --> 00:35:05.300
You don't have to remember.

643
00:35:05.300 --> 00:35:06.300
Go to.

644
00:35:06.300 --> 00:35:07.300
Wiki.

645
00:35:07.300 --> 00:35:08.300
And then.

646
00:35:08.300 --> 00:35:09.300
Go to.

647
00:35:09.300 --> 00:35:10.300
Textstack.

648
00:35:10.300 --> 00:35:11.300
Well.

649
00:35:11.300 --> 00:35:12.300
Ah.

650
00:35:12.300 --> 00:35:13.300
For.

651
00:35:13.300 --> 00:35:14.300
My session.

652
00:35:14.300 --> 00:35:15.300
There will be only this.

653
00:35:15.300 --> 00:35:16.300
Well.

654
00:35:16.300 --> 00:35:17.300
Ah.

655
00:35:17.300 --> 00:35:18.300
Thank you.

656
00:35:18.300 --> 00:35:19.300
Everyone.

657
00:35:19.300 --> 00:35:20.300
For.

658
00:35:20.300 --> 00:35:21.300
Answer.

659
00:35:21.300 --> 00:35:22.300
A lot.

660
00:35:22.300 --> 00:35:23.300
Yes.

661
00:35:23.300 --> 00:35:24.300
I.

662
00:35:24.300 --> 00:35:25.300
Where?

663
00:35:25.300 --> 00:35:26.300
I.

664
00:35:26.300 --> 00:35:27.300
And take.

665
00:35:27.300 --> 00:35:28.300
Yes I will.

666
00:35:28.300 --> 00:35:29.300
Uh.

667
00:35:29.300 --> 00:35:30.300
Ask.

668
00:35:30.300 --> 00:35:31.300
What.

669
00:35:31.300 --> 00:35:32.300
What we see.

670
00:35:32.300 --> 00:35:33.300
As.

671
00:35:33.300 --> 00:35:34.300
A project.

672
00:35:34.300 --> 00:35:35.300
Do.

673
00:35:35.300 --> 00:35:36.300
Is.

674
00:35:36.300 --> 00:35:37.300
Right?

675
00:35:37.300 --> 00:35:38.300
Now.

676
00:35:38.300 --> 00:35:39.300
I want.

677
00:35:39.300 --> 00:35:40.300
What about.

678
00:35:40.300 --> 00:35:41.300
Evaluation.

679
00:35:41.300 --> 00:35:42.300
What.

680
00:35:42.300 --> 00:35:43.300
We.

681
00:35:43.300 --> 00:35:44.300
Evaluation.

682
00:35:44.300 --> 00:35:45.300
Form.

683
00:35:45.300 --> 00:35:46.300
From.

684
00:35:46.300 --> 00:35:47.300
Project.

685
00:35:47.300 --> 00:35:48.300
How.

686
00:35:48.300 --> 00:35:50.300
I'm sorry.

687
00:35:50.300 --> 00:35:52.300
Oh, like...

688
00:35:54.300 --> 00:35:59.300
Okay, I mean, after we have organized the project, right?

689
00:35:59.300 --> 00:36:03.300
There will be a feedback form that this part needs to be adjusted like this.

690
00:36:03.300 --> 00:36:07.300
We have a summary of how to evaluate the data.

691
00:36:07.300 --> 00:36:11.300
How can we improve the future management?

692
00:36:11.300 --> 00:36:14.300
Can we do it like Tata here?

693
00:36:14.300 --> 00:36:16.300
How can we develop the team to do this?

694
00:36:16.300 --> 00:36:18.300
Okay.

695
00:36:18.300 --> 00:36:20.300
Oh, thank you very much, Lekphi.

696
00:36:20.300 --> 00:36:22.300
Okay, thank you for the question.

697
00:36:22.300 --> 00:36:25.300
This is the feedback of the 7th Stupid Hackathon.

698
00:36:25.300 --> 00:36:27.300
The latest project that we organized.

699
00:36:27.300 --> 00:36:30.300
After the project is finished, we will shoot a Google Form and ask questions.

700
00:36:30.300 --> 00:36:32.300
Usually, we will ask 5 questions.

701
00:36:32.300 --> 00:36:33.300
1. What do you like?

702
00:36:33.300 --> 00:36:35.300
2. What should be improved?

703
00:36:35.300 --> 00:36:37.300
3. What do you want us to try?

704
00:36:37.300 --> 00:36:40.300
And then, the fourth question is to give a score of 1-10.

705
00:36:40.300 --> 00:36:43.300
And then, the fifth question is to say that you want to write something in it.

706
00:36:43.300 --> 00:36:44.300
Just write it.

707
00:36:44.300 --> 00:36:46.300
Then, I will take the question.

708
00:36:46.300 --> 00:36:49.300
I will take the question and write it in the wiki.

709
00:36:49.300 --> 00:36:56.300
Then, the next generation of staff will be able to see the event list to see the feedback of the previous work.

710
00:36:56.300 --> 00:36:59.300
It will not disappear.

711
00:36:59.300 --> 00:37:00.300
Ah.

712
00:37:00.300 --> 00:37:01.300
Yes.

713
00:37:01.300 --> 00:37:04.300
For the 7th Stupid Hackathon,

714
00:37:04.300 --> 00:37:06.300
what is your favorite activity?

715
00:37:06.300 --> 00:37:08.300
Each person who answered will be listed.

716
00:37:08.300 --> 00:37:10.300
After that,

717
00:37:10.300 --> 00:37:12.300
the one who answered, we will post it to the GPT chat.

718
00:37:12.300 --> 00:37:14.300
The summary is...

719
00:37:14.300 --> 00:37:15.300
Ah.

720
00:37:15.300 --> 00:37:34.300
So, if you want to read our information or to see the summary of the chat GPT, including the points, how many points we will keep in this.

721
00:37:34.300 --> 00:37:40.300
And how many people answered, how much average, there will be a calculation automatically.

722
00:37:40.300 --> 00:37:48.300
Therefore, the team that organizes the next round can come in and see, including ideas for next year.

723
00:37:48.300 --> 00:37:58.300
If you want to know what ideas the people who organize the previous generation have, come in and see these.

724
00:37:58.300 --> 00:38:01.300
Come in and see the summary that we can talk about.

725
00:38:01.300 --> 00:38:07.300
And there will be, let me find it for a moment.

726
00:38:07.300 --> 00:38:13.300
Data, here it is.

727
00:38:13.300 --> 00:38:16.300
In addition, we will have to collect data of various STUPID events.

728
00:38:16.300 --> 00:38:27.300
We have arranged 7 rounds and we have a clip track that in each year, how many teams there are, how many tickets, presenters, how many people come to present the work, event rating, something like this.

729
00:38:27.300 --> 00:38:31.300
When you click on the event rating, it will take you to see the feedback.

730
00:38:31.300 --> 00:38:36.300
This is the way we collect feedback in various events.

731
00:38:36.300 --> 00:38:38.300
We don't want it to disappear.

732
00:38:38.300 --> 00:38:40.300
Answer the question.

733
00:38:40.300 --> 00:38:42.300
Ok.

734
00:38:45.300 --> 00:38:47.300
Any additional questions?

735
00:38:50.300 --> 00:38:51.300
Ok, that's about it.

736
00:38:51.300 --> 00:38:53.300
Thank you, P'Thy and Liffy.

737
00:38:57.300 --> 00:38:59.300
Very cool, P'Shank.

738
00:38:59.300 --> 00:39:02.300
Ok, let's set up first.

739
00:39:02.300 --> 00:39:04.300
How is it, P'Pup?

740
00:39:04.300 --> 00:39:05.300
See today.

741
00:39:05.300 --> 00:39:08.300
Oh, I just know that Bitbucket can do a lot of things.

742
00:39:08.300 --> 00:39:14.300
Oh, I still want to get a sticker of KritHub.

743
00:39:14.300 --> 00:39:16.300
Ok, I said it wrong.

744
00:39:16.300 --> 00:39:19.300
I just know that KritLab can do a lot of things.

745
00:39:19.300 --> 00:39:22.300
I wouldn't set up a post like this.
