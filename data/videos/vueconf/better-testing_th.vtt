WEBVTT

00:00:00.300 --> 00:00:02.832
ครับ วันนี้เรียกว่าเป็นโอกาสดีที่เราได้เจอพี่ปุ๋ย

00:00:02.900 --> 00:00:05.333
ในงาน Vue นะครับผม ครับ ก็ขอมอบเวทีนี้ให้กับพี่ปุ๋ย

00:00:05.400 --> 00:00:06.133
ครับผม ครับ ขอบคุณมากครับ

00:00:06.200 --> 00:00:06.633
ครับ

00:00:06.700 --> 00:00:07.833
โอเค ขอบคุณมากครับผม

00:00:10.000 --> 00:00:11.533
ชนก่อนนะฮะ

00:00:13.500 --> 00:00:14.633
นะครับ

00:00:14.700 --> 00:00:18.733
โอเคนะครับเนาะ ก็เมื่อกี้แนะนำตัวไปแล้วเนาะ

00:00:18.800 --> 00:00:20.633
ดูแก่มากเลยนะฮะ

00:00:20.700 --> 00:00:23.933
โอเคนะครับ ก็ผมชื่อสมเกียรตินะฮะ นะครับ

00:00:24.000 --> 00:00:28.633
เรียกว่าปุ๋ยแล้วกันนะครับ จะมาพูดเรื่องของการ test เนาะ

00:00:28.700 --> 00:00:32.333
นะครับ การ test ตัว Vue เนาะ นะครับ

00:00:32.400 --> 00:00:35.533
ว่าเรา test ยังไงบ้าง เอ่อ ในนี้ คำถามเดิมเนาะ

00:00:35.600 --> 00:00:36.233
ใครเขียน Vue นะ

00:00:36.900 --> 00:00:39.933
สวยละ 2 เซสชั่นมานะฮะ เขียน Vue ใช่ป่ะ

00:00:40.000 --> 00:00:43.333
ใครเขียน test บ้างฮะ

00:00:44.200 --> 00:00:48.433
สวยละ เอ้า อย่างงี้เป็น dev ทุกคนใช่ป่ะ แล้วบอกว่าเสร็จอ่ะ

00:00:49.100 --> 00:00:50.533
ทำไมบอกว่าเสร็จอ่ะ

00:00:52.600 --> 00:00:57.033
ใช่ป่ะ เห็นนะ ทำไมบอกว่าเสร็จใช่ป่ะ โกหกชัดๆ ใช่ป่ะ นะฮะ

00:00:57.100 --> 00:00:59.933
เพราะเราต้องเสร็จก่อนเลยนะ deadline ใช่ป่ะ

00:01:00.000 --> 00:01:02.733
ถ้าไม่เสร็จโดนด่าใช่ป่ะ แต่ถ้าเสร็จแล้วมีบั๊ก

00:01:02.800 --> 00:01:05.733
ก็แก้ไงใช่ป่ะ เนี่ย เออเนาะ เออ ถูกป่ะ

00:01:06.500 --> 00:01:11.032
กล้าเจอบั๊ก กล้าแจ้ง เราก็กล้าแก้ใช่ป่ะ เนาะ

00:01:11.100 --> 00:01:13.633
ซึ่งเวลาแก้บั๊ก ไม่ตก KPI ไง ใช่ป่ะ

00:01:14.400 --> 00:01:17.333
เพราะฉะนั้นเห็นนะ ดู make sense มั้ย ไม่ make sense นะฮะ

00:01:17.400 --> 00:01:21.532
เออเนาะ แต่เป็นอย่างงี้ใช่ป่ะ

00:01:21.600 --> 00:01:24.032
ความสนุกเนาะ เพราะฉะนั้นมาดูกันนะฮะ

00:01:27.000 --> 00:01:30.333
ถามว่า Vue ผมเขียนเยอะมั้ยนะฮะ คำตอบคือไม่ค่อยเขียนนะฮะ

00:01:30.400 --> 00:01:34.933
เออเนาะ เหมือนกับ Vue Thailand News อะไรซักอย่างอ่ะ

00:01:35.000 --> 00:01:38.133
นะครับเนาะ แนะนำตัว Vue ใช่ป่ะ เขียนอะไรนะ

00:01:38.200 --> 00:01:43.532
จะ react เออ แล้วประมาณ นะ เหมือน react angular vue

00:01:43.600 --> 00:01:44.433
เราเลือกอะไรครับ

00:01:45.200 --> 00:01:47.933
react ใช่ป่ะ เออเนาะ ถูกป่ะ แต่ถ้า enterprise

00:01:48.000 --> 00:01:50.333
หน่อยจะเลือก angular ใช่ป่ะ เนาะ

00:01:50.400 --> 00:01:53.233
แต่พอมาที่นี่ต้องบอกว่า Vue โอเคนะฮะ

00:01:56.600 --> 00:01:59.933
ดังนั้นนะฮะ ผมกำลังพูดถึงเรื่องของการ test แล้วกัน

00:02:00.000 --> 00:02:02.433
นะครับเนาะ มันเป็นเค้าเรียก rare item นะฮะ

00:02:02.500 --> 00:02:05.133
แปลว่าจะไม่มีใครทำนะครับเนาะ นะครับ

00:02:05.200 --> 00:02:09.733
ดังนั้นนะฮะ ระหว่างคำว่า quality คือคุณภาพใช่ป่ะฮะ

00:02:09.800 --> 00:02:15.533
กับ quantity คือปริมาณ เราเลือกอะไรครับ

00:02:16.300 --> 00:02:18.533
deadline อยู่ข้างหน้าใช่ป่ะเนี่ย วันนี้มาใช่ป่ะ

00:02:19.300 --> 00:02:20.333
ต้อง deploy วันนี้มั้ย

00:02:21.300 --> 00:02:24.233
ใช่ป่ะ เออเนาะเนี่ย ต้อง deploy มั้ย ใช่ป่ะ เออเนาะ นะ

00:02:24.300 --> 00:02:29.132
มันจะมีอารมณ์คือนะฮะ โค้ดที่เราเขียนไปเนาะ มันดีมั้ยฮะ

00:02:30.700 --> 00:02:34.933
ดีนะ ดู เสียงสูงเนี่ย โอเคเนาะ นะ วันดีคืนดีคือ

00:02:35.600 --> 00:02:37.233
มี lead เดินมาใช่ป่ะ

00:02:37.300 --> 00:02:41.333
ผมรู้สึกว่าโค้ดคุณไม่ค่อยดีใช่ป่ะ เรา refactor กันหน่อยมั้ย

00:02:42.900 --> 00:02:45.833
ทุกคนจะมองว่าไงฮะ refactor ใช่ป่ะ คิดในใจคือ

00:02:45.900 --> 00:02:49.233
แม่งเขียนใหม่นะฮะ refactor คือแปลเป็นไทยคืออะไรฮะ

00:02:49.300 --> 00:02:54.933
ปรับปรุงโครงสร้างให้ดีขึ้นนี่ อันนี้คือจาก basic มันเลย

00:02:55.000 --> 00:02:58.333
จาก original เลยนะ นะ แต่คำว่า refactor คือ

00:02:58.400 --> 00:02:59.933
เขียนใหม่ใช่ป่ะ

00:03:00.000 --> 00:03:04.433
โอเคป่ะ แต่ตอนที่หัวหน้าเราพูดใช่ป่ะ ไป present น่ะ

00:03:04.500 --> 00:03:07.533
ต้องบอกว่าอะไรฮะ อื้อ ใช่ป่ะ refactor ใช่มั้ย

00:03:08.500 --> 00:03:10.433
ถูกป่ะ เออเนาะ เพราะว่า refactor

00:03:10.500 --> 00:03:12.933
คุณจะทำได้ก็ต่อเมื่อคุณมั่นใจว่า

00:03:13.000 --> 00:03:16.733
สิ่งที่คุณเปลี่ยนมันยังทำงานเหมือนเดิม

00:03:17.900 --> 00:03:21.733
เอาเหมือนเดิม ใช่ป่ะ เพิ่มเติมคือขอเปลี่ยนเวอร์ชั่นใช่ป่ะ

00:03:21.800 --> 00:03:24.933
จาก Vue เวอร์ชั่น 2 ไปเป็นเวอร์ชั่น 3

00:03:25.600 --> 00:03:29.033
มี migration guide ให้ด้วยใช่ป่ะ migrate ได้มั้ย

00:03:30.400 --> 00:03:33.733
นี่ใช่ป่ะ เออเนาะ แต่หัวหน้าเรา migrate ได้สิ

00:03:33.800 --> 00:03:37.933
เพราะเค้ามี migration guide ใช่ป่ะ เออเนาะ

00:03:38.600 --> 00:03:40.533
จริงมั้ยไม่แน่ใจนะฮะ เออเนาะ

00:03:40.600 --> 00:03:43.632
ดังนั้นนะฮะ ตรงนี้ก็เป็นความสนุกใช่ป่ะ เออเนาะ

00:03:43.700 --> 00:03:47.033
ในของผม ผมเรียกว่าทุกครั้งที่เรา change

00:03:47.800 --> 00:03:50.233
เรามั่นใจไปว่ามันยังคงเลยฮะ โอเค

00:03:50.800 --> 00:03:54.632
มีอยู่แค่นี้ฮะ นะ ถ้าเรามั่นใจ นั่นคือความเชื่อมั่นเรา

00:03:55.600 --> 00:03:57.733
ความเชื่อมั่นเราสูงใช่ป่ะ เอาง่ายๆ ตอนเนี้ย

00:03:57.800 --> 00:03:58.933
อยากเปลี่ยนโค้ดใช่ป่ะ

00:04:00.000 --> 00:04:02.333
ตอนนี้เนาะ มันจะมีคำพูดนึง แก้โค้ดแค่บรรทัดเดียวใช่ป่ะ

00:04:02.400 --> 00:04:06.433
เสียวทั้งองค์กรใช่ป่ะ มีมั้ย มีมั้ย นะฮะ

00:04:06.500 --> 00:04:10.132
มั่นใจใช่มั้ยว่าครั้งนี้จะเอาขึ้นแล้วไม่มีปัญหา

00:04:10.800 --> 00:04:13.632
มีใครเคยพูดมั้ยครับ ผมมั่นใจมากครับ

00:04:13.700 --> 00:04:18.632
หนูมั่นใจมากค่ะ นะฮะ คืนนี้เจอกัน ใช่ป่ะ

00:04:18.700 --> 00:04:21.733
แล้วไม่พอเนาะ คืนนี้ยันเช้า ส่งแจ้งใช่ป่ะ

00:04:21.800 --> 00:04:25.933
พรุ่งนี้ต่อกันอีกใช่ป่ะ อยู่นานสุดกี่วันฮะ

00:04:26.800 --> 00:04:29.133
วันเดียวก็พอนะ เพราะเราไม่ไหว ต้องมีไม้สองใช่ป่ะ

00:04:30.100 --> 00:04:33.933
อะไรประมาณนั้นนะครับ ดังนั้นนะ ที่ผมพูดตรงนี้ก็คือ

00:04:34.000 --> 00:04:37.033
เรากำลังพูดถึงเรื่องอะไรฮะ ความเชื่อมั่นถูกป่ะ

00:04:37.100 --> 00:04:39.433
เพราะว่าการพัฒนา software คือการเปลี่ยนแปลงนะ

00:04:40.000 --> 00:04:43.933
มีระบบไหนมั้ยฮะ ที่เราพัฒนาแล้ว ทำแล้วทิ้ง

00:04:44.000 --> 00:04:47.533
เหมือนกระดาษทิชชู่ตรงห้องน้ำเนี่ย เออเนาะ มีมั้ย

00:04:47.600 --> 00:04:49.433
ทำแล้วทิ้ง ถ้าทำแล้วทิ้งไม่ต้องพูดถึงนะ

00:04:51.000 --> 00:04:54.933
ก็ไม่ต้อง test อะไร ถูกป่ะ ให้ user test แทนเรา

00:04:55.000 --> 00:04:58.433
โอเคมั้ยฮะ แต่เรากำลังทำ product ใช่มั้ยฮะ

00:04:58.500 --> 00:05:01.332
เราต้องเพิ่มหรือแก้ไขไปเรื่อยๆ

00:05:01.400 --> 00:05:04.533
ยกตัวอย่างเช่น ตอนนี้ ระบบงานที่เราดูแลอยู่ฮะ

00:05:04.600 --> 00:05:07.533
วันดีคืนดี feature นี้อยากเอาทิ้งใช่ป่ะ

00:05:07.600 --> 00:05:11.933
โค้ดเราลบมั้ยฮะ comment ใช่ป่ะ ใช้ git ใช่ป่ะ

00:05:12.000 --> 00:05:18.832
add commit comment this feature ถูกป่ะ เออเนาะ

00:05:18.900 --> 00:05:21.633
แล้วไปเขียนบนโค้ดด้วย don't delete this code

00:05:22.200 --> 00:05:25.832
เพราะว่า because in future ใช่ป่ะ

00:05:27.100 --> 00:05:29.933
อะไรประมาณนี้ใช่ป่ะ เออ คุณๆ มั้ย ใครทำบ้างฮะ

00:05:33.100 --> 00:05:35.733
ดังนั้นผมกำลังพูดถึงเรื่องของระดับความเชื่อมั่น

00:05:35.800 --> 00:05:38.133
ของระบบเรา หรือโค้ดเราว่า

00:05:38.200 --> 00:05:42.332
ทุกครั้งที่มี change เรามั่นใจมั้ยนะครับเนาะ

00:05:42.400 --> 00:05:44.733
ดังนั้นนะ คำถามคือเราจะทำยังไงให้มั่นใจ

00:05:44.800 --> 00:05:47.633
มันมีเยอะมากใช่ป่ะนะ ยกตัวอย่างเช่น อย่างของผมเนาะ

00:05:47.700 --> 00:05:50.133
คือการ test ใช่ป่ะนะ มันมีคำพูดนึงนะ

00:05:50.200 --> 00:05:51.733
ก็คือถ้าเราเชื่อมั่นในโค้ดเราเนาะ

00:05:51.800 --> 00:05:54.133
หรือประวัติเราดีใช่ป่ะ 2 ปีที่ผ่านมา

00:05:54.200 --> 00:05:57.133
เขียนโค้ดเอาขึ้น production ไม่เคยมี bug เลย

00:05:58.000 --> 00:06:00.832
ใช่ป่ะ เราจะทำ test มั้ย เราจะเขียน test มั้ย

00:06:02.200 --> 00:06:05.533
อันนี้คือประวัติฮะ ถ้าประวัติดี ถูกป่ะ

00:06:05.600 --> 00:06:09.033
แต่ชีวิตจริงคืออะไรฮะ ใช่ป่ะ แค่กูหายใจใช่ป่ะ

00:06:10.000 --> 00:06:12.533
ใครเคยเจอบ้างฮะ เข้าไปบริษัทครั้งวันแรกเลย

00:06:12.600 --> 00:06:15.533
กูเพิ่งเปิดเครื่อง มี bug แจ้งมาด้วย ให้กูแก้

00:06:16.300 --> 00:06:20.533
มีใครเคยเจอมั้ย คำถามคือ เพิ่งๆ มานั่ง ใช่ป่ะ

00:06:20.600 --> 00:06:23.633
แล้วเพิ่งๆ pull โค้ดลงมา เพิ่ง clone ลงมาเลย

00:06:23.700 --> 00:06:26.332
แล้วมึงแจ้ง bug ให้กู มึงต้องการอะไร

00:06:28.500 --> 00:06:30.633
อันนี้เป็นเรื่องตลกที่คุยกันหน้าเซเว่นนะฮะ

00:06:30.700 --> 00:06:32.832
ตอนกินเบียร์ เขาจะพูดกันประมาณนี้นะ

00:06:33.400 --> 00:06:36.733
ดังนั้นนะ 1 ในการสร้างความเชื่อมั่นคือ

00:06:36.800 --> 00:06:40.832
เรื่องของการ test ตอนนี้เอาเรื่องของ dev เนาะ

00:06:41.400 --> 00:06:44.832
dev คนไหนที่ test เองบ้างฮะ

00:06:45.800 --> 00:06:50.233
ต้องยกมือทุกคนสิฮะ test เองบ้าง ถูกป่ะ

00:06:50.300 --> 00:06:52.533
เพราะว่าเรากำลังจะบอกว่า เฮ้ย งานของเราเรียบร้อย

00:06:53.300 --> 00:06:55.832
เราต้อง test เนาะ แต่เรา test แบบของเราอ่ะ

00:06:55.900 --> 00:06:58.832
บางคนบอก test แบบบ้านๆ ใช่ป่ะ

00:06:58.900 --> 00:07:01.933
สมมุติเราทดสอบอะไรฮะ สมมุติมี 3 หน้า

00:07:02.000 --> 00:07:06.733
มีคนแจ้ง bug มาว่า bug หน้า 2 เราทำไงฮะ

00:07:07.800 --> 00:07:10.433
กู start มากดหน้า 1 แล้วให้มันเด้งมาหน้า 2 ใช่ป่ะ

00:07:10.500 --> 00:07:13.433
bug ใช่มั้ย กูแก้หน้า 2 แล้ว refresh แม่งใช่ป่ะ

00:07:13.500 --> 00:07:17.033
แล้วกด next ต่อ ผ่านปุ๊บ เสร็จแล้วครับ

00:07:17.800 --> 00:07:21.233
มีใครทำแบบนี้มั้ย ใครเค้าจะทำนะ แบบนี้ใช่ป่ะ

00:07:21.300 --> 00:07:24.533
เราเป็น professional ใช่ป่ะ programmer developer

00:07:24.600 --> 00:07:29.033
ทำมั้ยฮะ ทำ โอเคป่ะ ไม่ทำเนาะ

00:07:29.100 --> 00:07:31.933
ดังนั้นนะครับ เรื่องของการ test ผมว่าทุกคนทำ

00:07:32.000 --> 00:07:36.033
แต่ทำ manual หรือ automation ถูกๆ มั้ยฮะ

00:07:36.100 --> 00:07:38.332
เพราะว่าอะไรฮะ ระบบงานของเรามีชีวิต

00:07:39.200 --> 00:07:44.133
feature เพิ่มเรื่อยๆ นะ แก้ feature ใหม่ของเดิม

00:07:44.200 --> 00:07:50.633
กระทบมั้ยฮะ ไม่เหลือ หรือไม่รู้ หรือก็วัดกันใช่ป่ะ

00:07:50.700 --> 00:07:52.433
ดังนั้นตอนก่อน deploy เราต้องอะไรฮะ

00:07:52.500 --> 00:07:55.633
ไหว้ๆ พระใช่ป่ะ หน้าตึกนะ

00:07:55.700 --> 00:07:59.733
ตอนทำไม่ไหว้นะ แต่ก่อนจะ deploy มึงไหว้กูจัง

00:07:59.800 --> 00:08:01.533
อันนี้คือมุมมองของพระนะ เออเนาะ

00:08:01.600 --> 00:08:03.332
มึงต้องการอะไรกับกูวะ อะไรประมาณนี้

00:08:03.400 --> 00:08:04.633
เราคงไม่ทำเนาะ ใช่ป่ะ

00:08:04.700 --> 00:08:07.933
เพราะฉะนั้นเรื่องของ test ไม่ว่า manual หรือ automation

00:08:08.000 --> 00:08:11.133
ผมไม่มีประเด็นนะ ถูกป่ะ แต่เราทำรึเปล่า

00:08:11.200 --> 00:08:15.332
แล้วเราทำซ้ำๆ อยู่ตลอดเวลามั้ยนะครับเนาะ

00:08:15.400 --> 00:08:17.133
แล้วเรามั่นใจรึเปล่านะ

00:08:17.200 --> 00:08:19.832
ดังนั้นไอ้เรื่องของพวกนี้นะ เราชอบแบบนี้มั้ย

00:08:19.900 --> 00:08:23.832
เนี่ยฮะ ใครๆ ชอบบ้างฮะ bug เนาะ

00:08:23.900 --> 00:08:26.233
bug 1 ตัวชอบเรียก bug หลายๆ ตัวมาใช่ป่ะ

00:08:27.700 --> 00:08:29.033
อันนี้ก็จะเป็นสิ่งที่เกิดขึ้น

00:08:29.100 --> 00:08:31.832
หรือนะ เรามีหลายๆ environment ใช่ป่ะ

00:08:31.900 --> 00:08:33.533
อย่างที่บริษัทมีกี่ environment ฮะ

00:08:33.600 --> 00:08:36.533
environment คือมี dev ใช่ป่ะ มี local ใช่ป่ะ

00:08:36.600 --> 00:08:38.933
work on my machine มีอะไรอีกนะ

00:08:39.000 --> 00:08:42.133
มี test ใช่ป่ะ เพราะเห็นคุยข้างหลังมีอะไรอ่ะ

00:08:42.200 --> 00:08:44.433
บอกว่า อ๋อ ที่บริษัทเรามี QA ใช่ป่ะ

00:08:44.500 --> 00:08:47.233
เป็นเกมแล้ว ตีปิงปองใช่มั้ย

00:08:47.300 --> 00:08:49.933
กูเสร็จด้วย มึงไม่เสร็จ กูเสร็จด้วย มึงไม่เสร็จใช่มั้ย

00:08:50.000 --> 00:08:51.533
วนไปอย่างนี้นะ เออเนาะ

00:08:52.300 --> 00:08:54.433
คำถามก็คือเรามี environment ที่หลากหลายใช่ป่ะ

00:08:54.500 --> 00:08:55.733
ผ่านหมดทุก environment เนาะ

00:08:55.800 --> 00:08:58.233
ยกเว้น…?

00:08:58.300 --> 00:09:02.133
เพราะฉะนั้นเราต้องอะไรฮะ คนจริงฮะ ต้องอะไรฮะ

00:09:03.000 --> 00:09:04.333
อ้าว ฉิบหายแล้วงานนี้นะ เออเนาะ

00:09:05.100 --> 00:09:07.133
เพราะอะไรฮะ มีที่เดียวที่บอกความจริงใช่ป่ะ

00:09:07.800 --> 00:09:10.033
เพราะที่เหลือผ่านหมดใช่มั้ย คุณๆ มั้ย

00:09:10.100 --> 00:09:12.933
มีการ sign นะ มีการเซ็น มีคนเทสต์

00:09:13.000 --> 00:09:15.033
มีอะไร อย่างเช่นอะไรฮะ ผมไปเจอที่นึงเนาะ

00:09:15.100 --> 00:09:23.433
เค้ามี UAT ใช่มั้ย U U ย่อมาจากอะไรฮะ ใครเทสต์

00:09:23.500 --> 00:09:28.533
อ่า user เออ ใช่ป่ะ หรือมันต้องเป็น BAT ป่ะ

00:09:29.900 --> 00:09:32.933
business เป็นอะไรฮะ BAT แบตใช่ป่ะ

00:09:33.600 --> 00:09:36.533
หรือเป็น CAT เป็น customer ป่ะ

00:09:37.400 --> 00:09:41.133
อ่า หรือเป็น UAT คือ user สุดท้ายคือกูนี่แหละ เทสใช่ป่ะ

00:09:41.200 --> 00:09:43.533
อ่าเนาะ ดังนั้นไอ้ตรงนี้มันจะเป็นอะไรฮะ

00:09:43.600 --> 00:09:46.533
บางคนสนใจ process ใช่ป่ะ ให้ทำ

00:09:46.600 --> 00:09:49.633
แต่ชีวิตจริงคือคุณ คุณภาพใช่ป่ะ มันได้ไหมฮะ

00:09:50.600 --> 00:09:51.933
ไม่รู้ ถูกป่ะ เออเนาะ

00:09:52.000 --> 00:09:54.333
ดังนั้นไอ้ตรงนี้เป็นอะไรฮะ เป็นปัญหาเนาะ

00:09:54.400 --> 00:09:56.633
ที่ผมให้เห็นก่อนว่าในการพัฒนาซอฟต์แวร์เป็นยังไง

00:09:56.700 --> 00:09:59.333
แล้วก็หลายๆ คนชอบพูดถึงเนาะ

00:09:59.400 --> 00:10:01.833
การเทสมีแบบไหนบ้างวะ เนี่ยมันจะอะไรฮะ

00:10:01.900 --> 00:10:05.533
ในการพัฒนาซอฟต์แวร์มันชอบมีสามเหลี่ยมใช่ไหม คุณๆ มะ

00:10:05.600 --> 00:10:07.833
อันเนี้ย อะไรก็ตามในซอฟต์แวร์นะฮะ

00:10:07.900 --> 00:10:11.533
เป็นของหวานของอร่อยไม่ดีเลยนะ อย่างเช่นอะไรฮะ

00:10:12.300 --> 00:10:15.533
ไอศกรีมโคนใช่ป่ะ อ่า เราอยู่ตรงไหนนะ

00:10:16.400 --> 00:10:18.133
อ่า ข้างบนนั่นแหละ ใช่ป่ะ เออเนาะ

00:10:18.200 --> 00:10:21.333
มีแบบไหนอีกนะ อ่า เดี๋ยวหลังๆ มาเริ่มเลยฮะ

00:10:21.400 --> 00:10:24.333
เฮ้ย คุณต้องเทสพีระมิดนะ พีระมิดกินไม่อร่อยใช่ป่ะ

00:10:24.400 --> 00:10:27.533
อ่า เราไม่ชอบ แต่ดีนะ สังเกตมะ

00:10:27.600 --> 00:10:31.333
หลายๆ ครั้งมีอะไรฮะ อ่า นี่เนาะ มีคัพเค้ก

00:10:31.400 --> 00:10:35.033
ที่ไหนทำคัพเค้กบ้างฮะ คัพเค้กของหวานใช่ป่ะ

00:10:35.100 --> 00:10:39.633
เป็นไงฮะ ไม่ดี ทำอะไรฮะ ทำซ้ำกับทุกที่ใช่ป่ะ

00:10:39.700 --> 00:10:42.233
เทสเราก็ไอ้ dev ก็อะไรฮะ กูเขียนเทสเว้ย

00:10:42.300 --> 00:10:45.533
กูไปเรียนมา กูทำ Test-Driven Development เว้ย ใช่ป่ะ

00:10:45.600 --> 00:10:49.733
เออเนาะ QA หรือ tester ทำ UI test เว้ย

00:10:49.800 --> 00:10:52.333
กูทดสอบด้วย manual ด้วย มี UAT อีก

00:10:52.400 --> 00:10:56.033
สังเกตไหม 3 ทีมนี้ ทดสอบเหมือนกันหมดเลยฮะ

00:10:56.800 --> 00:11:00.133
แสดงว่าอะไรฮะ 3 ชั้น ปกป้องดีป่ะ

00:11:00.200 --> 00:11:02.833
ชั้นเดียวรู้สึกเลย โดนแตกใช่ป่ะ ถูกมะ นะฮะ

00:11:03.400 --> 00:11:07.133
แต่ 2 ชั้น อื้อ ก็ยังดีใช่ป่ะ แต่คนไทยเนาะ

00:11:07.200 --> 00:11:12.033
เลขคี่กับเลขคู่ อ่ะ ใช่ป่ะ เลขคู่

00:11:12.100 --> 00:11:14.333
รู้สึกดูแบบอะไรฮะ มันไม่ใช่ใช่ป่ะ

00:11:14.400 --> 00:11:17.633
มันไม่ถูกฮะ มันไม่ดีใช่ป่ะ ในเชิงของคนไทย

00:11:17.700 --> 00:11:19.833
ต้องอะไรฮะ เลขอะไรฮะ เลขคี่

00:11:19.900 --> 00:11:24.333
ดังนั้นต้องเป็นเทสต้องมี 3 ชั้น นะ เออเนาะ ถูกป่ะ

00:11:24.400 --> 00:11:27.533
เออเนาะ เพื่อความปลอดภัยมันก็จะเกิดอะไรฮะ คัพเค้ก

00:11:27.600 --> 00:11:31.733
ดีไหม อื้อ ดี ขึ้นสูงด้วยใช่ป่ะ เออเนาะ นะ

00:11:31.800 --> 00:11:34.533
แล้วหลังๆ มามีอีกเนาะ ใน JavaScript มีอะไรฮะ

00:11:34.600 --> 00:11:39.333
นี่ทดสอบได้ถ้วยฮะ ทดสอบจนได้โทรฟี่ ได้โล่ โอเคป่ะ

00:11:39.400 --> 00:11:41.433
อ่า หรือบางคนบอกทดสอบจนอะไรฮะ

00:11:41.500 --> 00:11:43.333
กูเป็นจรวดแม่งเลย ใช่ไหม โอเคป่ะ

00:11:43.400 --> 00:11:46.033
เป็น rocket test แม่งเลย เออเนาะ โอเคป่ะ

00:11:46.100 --> 00:11:48.033
เออเนาะ เป็นจรวดเลย เออเนาะ

00:11:48.100 --> 00:11:52.333
เราทดสอบอันไหนฮะ อ่าเนาะ หลายๆ คนบอก

00:11:52.400 --> 00:11:56.433
อ่า กูขอกลับไปแล้วฮะ แถวๆ ไหน แถวนี้ป่ะ

00:11:56.500 --> 00:11:59.433
บางคนบอกอ่ะกูอยู่ตรงนี้แหละ เพราะอะไรฮะ

00:11:59.500 --> 00:12:02.333
ก็ส่งไปใช่ป่ะเนาะ ดังนั้นอันนี้คือเป็น effort เนาะ

00:12:02.400 --> 00:12:04.833
ของการเทสว่าคุณจะให้ความสำคัญกับอะไรฮะ

00:12:04.900 --> 00:12:07.233
กับตรงไหนถูกป่ะ แต่ประเด็นก็คือ

00:12:07.900 --> 00:12:10.833
ยิ่งเวลาผ่านไป เราทดสอบตั้งแต่ feature แรก

00:12:10.900 --> 00:12:12.133
ยัน feature ล่าสุดไหม

00:12:12.800 --> 00:12:15.133
อันนี้เค้าเรียกว่า regression เราทำกันไหมฮะ

00:12:15.900 --> 00:12:20.733
อื้อ น่าคิดเนาะ อ่า นะ คำตอบคือ deadline อยู่ข้างหน้า

00:12:20.800 --> 00:12:23.533
อื้อ ใช่ป่ะ เอาให้แหละ เอาให้เสร็จไปก่อน

00:12:23.600 --> 00:12:25.433
แล้วก็จะมีพี่คนนึงเดินมาเนาะ

00:12:25.500 --> 00:12:29.633
สู้ๆ เดี๋ยวพี่มีพิซซ่ากับ KFC ให้ ใช่ป่ะ

00:12:29.700 --> 00:12:32.933
มีๆ มะ ที่บริษัทมีมะ อ่า โอเคนะ

00:12:33.000 --> 00:12:34.033
เออเนาะ ไม่น่ามีเนาะ นะ

00:12:35.200 --> 00:12:37.733
แล้วเรามารู้ทีหลังคือ อ๋อ เงินที่ซื้ออ่ะ

00:12:37.800 --> 00:12:40.233
เป็นของบริษัทไม่ใช่พี่เค้า อ่า ใช่ป่ะ

00:12:40.300 --> 00:12:41.733
ไม่น่ามี ไม่น่ามีนะฮะ เออเนาะ

00:12:41.800 --> 00:12:45.733
ดังนั้น การเทส นะครับเนาะ มันเป็นสิ่งหนึ่งเนาะ

00:12:45.800 --> 00:12:47.533
ที่เกิดขึ้นใช่ป่ะ ในการพัฒนาซอฟต์แวร์

00:12:47.600 --> 00:12:49.933
ซึ่งเป็นสิ่งที่สำคัญไหม นะครับเนาะ

00:12:50.000 --> 00:12:52.533
ในๆ อะไร ในสิ่งที่ผมเจอมานะครับ

00:12:52.600 --> 00:12:54.633
ตอนที่ผมเรียนเนาะ ไม่รู้เดี๋ยวนี้เป็นไงเนาะ

00:12:54.700 --> 00:12:57.733
ผมเรียนมานานมาก ตอนที่ผมเรียนไม่มีวิชาเทสเลยฮะ

00:12:58.400 --> 00:13:01.533
มีวิชาอย่างเดียวคือ วิชาทำให้เสร็จใช่ป่ะ นะฮะ

00:13:02.200 --> 00:13:05.133
อาจารย์บอกว่าให้การบ้านวันนี้ใช่ป่ะ คุณๆ มะ

00:13:05.200 --> 00:13:10.533
ให้เวลา 10 วัน ทำวันไหนฮะ นะฮะ อ่าเนาะ

00:13:10.600 --> 00:13:12.333
ทำไมตอนนั้นล่ะ ทำไมต้องทำตอนนั้น

00:13:12.400 --> 00:13:14.233
deadline deadline ใช่ป่ะ

00:13:14.300 --> 00:13:16.433
1 คือ deadline 2 คือเพื่อนกูเสร็จแล้วใช่ป่ะ

00:13:16.500 --> 00:13:18.633
อ่า แล้วมีคนนึง มึงเสร็จแล้วใช่ป่ะ

00:13:18.700 --> 00:13:22.033
งั้นเพื่อนเสร็จเราเสร็จด้วย อ่า ใช่ป่ะ เออเนาะ

00:13:22.100 --> 00:13:24.833
ดีๆๆ โอเค deadline driven development โอเคป่ะ

00:13:24.900 --> 00:13:27.833
เออเนาะ ดังนั้น ไอ้ตรงนี้เป็นสิ่งที่เกิดขึ้น

00:13:27.900 --> 00:13:31.033
เพราะฉะนั้น นะครับ เรื่องของ effort ก็ว่ากันไปนะ

00:13:31.100 --> 00:13:35.333
แต่สิ่งที่เรามาคุยวันนี้คือคุยในงาน Vue ใช่ป่ะ นะครับ

00:13:35.400 --> 00:13:38.533
เราก็ต้องมาคุยกันว่าแล้วเทสนะ สำหรับ Vue เนาะ

00:13:38.600 --> 00:13:41.533
Vue เราพัฒนาเป็นอะไรฮะ เป็น web application เนาะ

00:13:41.600 --> 00:13:43.333
ส่วนใหญ่ผมทำแบบนั้น ไม่ว่าจะเป็น Vue

00:13:43.400 --> 00:13:44.533
หรือว่าเป็น Nuxt เนาะ

00:13:44.600 --> 00:13:48.333
ผมพิมพ์ทีไรผมเป็น Next ตลอดเลยฮะ คุณๆ มะ

00:13:48.400 --> 00:13:50.233
พิมพ์ Nuxt แล้วแม่งใน Google อ่ะ

00:13:50.300 --> 00:13:52.433
แม่งชอบอะไรฮะ Next ใช่ป่ะ เออเนาะ

00:13:52.500 --> 00:13:54.733
ใครเป็นบ้างฮะ แล้วเราก็ดูปะตั้งนานเนาะ

00:13:54.800 --> 00:13:57.633
เอ๊ะ ทำไมมันไม่เหมือนวะ นะครับ เออเนาะ

00:13:57.700 --> 00:13:58.333
ประมาณนั้นนะครับ

00:13:58.400 --> 00:14:01.533
ดังนั้น ถ้าเราต้องการเทสเนี่ย นะครับ

00:14:01.600 --> 00:14:05.233
ในแง่ของนักพัฒนานะฮะ เทสที่ดีเป็นยังไงก่อน

00:14:05.300 --> 00:14:07.033
นะครับเนาะ มันต้องเริ่มต้นจากอะไรฮะ

00:14:07.100 --> 00:14:10.333
เขียนเทสก่อนใช่ไหม พอเขียนได้แล้วปุ๊บมันจะเริ่มเกิดว่า

00:14:10.400 --> 00:14:12.933
แล้วเทสที่ดีเป็นยังไง นะครับ

00:14:13.000 --> 00:14:15.133
1 คือนะครับ เทสที่ดีต้องเร็ว

00:14:15.200 --> 00:14:18.033
คำถามคือเร็วขนาดไหน เร็วกว่าที่เป็นอยู่ฮะ

00:14:18.900 --> 00:14:21.933
เพราะฉะนั้นเมื่อวานเร็วอย่างไร วันนี้ต้องเร็วกว่า

00:14:22.000 --> 00:14:25.433
เค้าเรียกว่าอะไรฮะ เป็น continuous improvement นะครับ

00:14:25.500 --> 00:14:26.433
ไม่ใช่บอกว่าอะไรนะ

00:14:26.500 --> 00:14:28.033
แต่ก่อนเรารอ 3 เดือนรอได้เนาะ

00:14:28.100 --> 00:14:31.733
เดี๋ยวนี้รอ 1 ชม. รอได้ไหม ไม่ได้

00:14:31.800 --> 00:14:34.133
อันนี้สายเสพติดความเร็วนะ เออเนาะ นะ

00:14:34.200 --> 00:14:37.633
เออ ดังนั้นนะฮะ 1 คือเร็ว 2 คือต้องเป็นอิสระ

00:14:38.300 --> 00:14:41.733
นะครับเนาะ กับอะไรฮะ สิ่งแวดล้อม นะครับเนาะ

00:14:41.800 --> 00:14:42.533
ไม่ใช่บอกว่าอะไรนะ

00:14:42.600 --> 00:14:46.733
เอ่อ เทสชุดนี้หรือโค้ดของเราอ่ะ จะรันได้เฉพาะตอนเช้า

00:14:47.500 --> 00:14:49.933
อื้อ ตอนบ่าย fail อ่า

00:14:50.000 --> 00:14:52.533
เพราะฉะนั้นเดี๋ยวรันอีกทีตอนอะไรฮะ เช้าวันพรุ่งนี้

00:14:52.600 --> 00:14:55.133
อ่า แบบนี้คืออะไรฮะ มึงมั่วแล้วใช่ป่ะ เออเนาะ

00:14:55.200 --> 00:14:59.433
เพราะอะไรฮะ มันไม่เป็นอิสระต่อสิ่งแวดล้อมถูกป่ะ

00:14:59.500 --> 00:15:02.033
เพราะเรากำลังเทส เรากำลังสนใจอะไรฮะ

00:15:02.100 --> 00:15:03.633
feature หรือ functional

00:15:03.700 --> 00:15:06.333
เพราะฉะนั้น dependency รอบข้างต้องนิ่ง

00:15:06.400 --> 00:15:09.533
อันนี้คือวิทยาศาสตร์นะ ใครเรียนวิทยาศาสตร์บ้างฮะ

00:15:09.600 --> 00:15:12.933
นะ ฟิสิกส์ เคมี ชีวะ ต้องมีใช่ป่ะ นะฮะ

00:15:13.800 --> 00:15:16.833
วิทยาศาสตร์บอกว่าในการทดลองใช่ป่ะ คุณๆ มะ

00:15:16.900 --> 00:15:19.333
เรากำลังทดสอบเรื่องนึงใช่ป่ะ ทดลองเรื่องนึง

00:15:19.400 --> 00:15:22.633
สิ่งแวดล้อมเราต้องคุ้ม คุมได้ ถูกป่ะ

00:15:22.700 --> 00:15:27.333
อ่า กลับมาซอฟต์แวร์เนาะ อะไรคุมได้บ้าง

00:15:28.000 --> 00:15:32.533
ตอนเราพัฒนาอะไรคุมได้บ้าง โค้ดคุมได้มั้ย

00:15:33.600 --> 00:15:35.733
อารมณ์ตัวเองยังคุมไม่ได้ใช่ป่ะ

00:15:35.800 --> 00:15:38.133
แล้วโค้ดเมื่อกี้ 2 section มีคำว่า AI ใช่ป่ะ

00:15:38.200 --> 00:15:42.033
เดี๋ยวนี้สนุกมากเลยกับ AI ให้มัน gen ให้ใช่ป่ะ รันได้

00:15:42.100 --> 00:15:46.333
แต่ก่อนค้นหาใน Google คลิก Stack Overflow ก็อปปี้

00:15:46.400 --> 00:15:47.533
เราก็อปปี้คำตอบหรือคำถาม

00:15:47.600 --> 00:15:50.433
โอเคนะ ต้องถามก่อนนะ

00:15:51.000 --> 00:15:53.633
แต่ก่อนเป็นอย่างงั้นเนี่ย เดี๋ยวนี้ให้มัน gen ให้ใช่ป่ะ

00:15:53.700 --> 00:15:55.533
แล้ว gen ให้ปุ๊บมันไปเอามาจากไหนวะ

00:15:56.800 --> 00:15:59.233
แล้วพอมันได้ปุ๊บ งานเสร็จใช่ป่ะ

00:15:59.300 --> 00:16:01.433
ดังนั้นไอ้ตรงนี้ชิบหายนะ

00:16:01.500 --> 00:16:04.633
เทสต์ที่ดีคือเร็ว เป็นอิสระ

00:16:05.500 --> 00:16:08.333
แล้วสิ่งสำคัญมากคือต้องรันซ้ำได้

00:16:08.400 --> 00:16:13.733
เพราะถ้ารันซ้ำไม่ได้ สคริปต์ที่คุณเขียนไร้ค่ามากนะครับ

00:16:13.800 --> 00:16:16.133
แม้แต่คนเทสต์ ผมก็ถามเลย

00:16:16.200 --> 00:16:18.333
ที่มีเรามี QA กับ tester ใช่ป่ะ

00:16:19.100 --> 00:16:24.133
ทดสอบซ้ำได้มั้ย เหมือนเดิมเป๊ะๆ มั้ย

00:16:24.200 --> 00:16:26.133
คำตอบคือคนมีอารมณ์

00:16:26.700 --> 00:16:31.133
เพราะฉะนั้นทำงานแบบเดิม ไม่เคยเหมือนเดิม

00:16:31.200 --> 00:16:35.533
โอเคป่ะ แต่เรายังพยายามจะใช้เหมือนเดิมใช่ป่ะ

00:16:35.600 --> 00:16:36.933
เพราะฉะนั้นต้องรันซ้ำได้

00:16:37.000 --> 00:16:39.733
แล้วก็ทุกๆ เคสต้องมีการตรวจสอบถูกป่ะ

00:16:39.800 --> 00:16:41.333
ว่าถูกหรือผิดคืออะไร

00:16:41.400 --> 00:16:44.133
และสุดท้ายคือเทสต์ต้องเข้าใจได้ง่าย

00:16:44.200 --> 00:16:47.533
เพราะว่าโค้ดที่เกี่ยวกับการเทสต์กับโค้ดที่เป็น production

00:16:47.600 --> 00:16:52.833
สุดท้ายต้อง maintain นะไม่ว่าเราหรือคนอื่นที่เข้ามาใช่ป่ะ

00:16:52.900 --> 00:16:56.933
เป็นมรดกเลือดแน่นอนนะ ทุกคนจะต้องเจอใช่ป่ะ

00:16:58.200 --> 00:17:00.933
แล้วจะมีคำพูดคือโค้ดที่เรามาเจอใช่ป่ะ

00:17:01.000 --> 00:17:04.733
โค้ดที่เราไม่เขียนจะเป็นโค้ดที่ไม่ดีถูกป่ะ

00:17:04.800 --> 00:17:06.633
แต่ส่วนโค้ดที่เราเขียน ดีเว้ย

00:17:08.400 --> 00:17:12.133
เพราะฉะนั้น นี่คือสิ่งที่เกิดขึ้นนะครับ

00:17:12.200 --> 00:17:15.933
ก่อนเข้า Vue ในการเทสต์ของ Vue ปกติเราเทสต์แบบไหน

00:17:16.900 --> 00:17:20.032
มันมี test first ใช่ป่ะ คือคิดก่อนจะเขียนใช่ป่ะ

00:17:20.800 --> 00:17:23.933
กับ test later คือผมเขียน feature นี้เสร็จปุ๊บ

00:17:24.000 --> 00:17:24.933
แล้วผมค่อยเทสต์

00:17:25.000 --> 00:17:30.333
กับอีกแบบนึงคือเขียนเยอะๆ แล้วเดี๋ยวค่อยไปเทสต์ทีเดียว

00:17:30.400 --> 00:17:37.433
ปกติเราทำแบบไหน test first test later หรือ test last

00:17:38.900 --> 00:17:40.033
ของเราส่วนใหญ่อยู่แถวไหน

00:17:42.000 --> 00:17:45.533
บางคนบอก test later บางคนบอกว่า later เท่ากับ never ใช่ป่ะ

00:17:47.900 --> 00:17:49.633
ดังนั้นเราเข้ามาสู่ Vue

00:17:49.700 --> 00:17:52.433
แม่งจะหมดเวลาแล้ว

00:17:52.500 --> 00:17:55.333
ดังนั้นพอพูดถึง Vue ปุ๊บ ผมใส่ Vue กับ Nuxt

00:17:55.400 --> 00:17:56.933
เมื่อกี้ทำข้างหลังก็เลยใส่นักมาใหม่นะ

00:17:57.600 --> 00:17:59.133
ถามว่า Vue ผมทำเยอะมั้ย ไม่เยอะ

00:17:59.200 --> 00:18:01.133
แต่ผมทำ Nuxt บ่อยนะครับ

00:18:01.200 --> 00:18:04.533
ดังนั้นสิ่งที่เกิดขึ้นเลยก็คือ ถ้าคุณใช้

00:18:04.600 --> 00:18:07.533
อย่างผมใช้ Nuxt เนี่ย ปกติโครงสร้างโปรเจค

00:18:08.600 --> 00:18:10.133
มันง่ายต่อการเทสต์มั้ย

00:18:10.200 --> 00:18:12.133
สมมติโปรเจคเราใหญ่

00:18:12.200 --> 00:18:13.633
ปัญหาที่ผมเจอหลายๆ ครั้ง

00:18:14.800 --> 00:18:17.233
ยิ่งเวลาผ่านไป build time ยิ่งนานใช่ป่ะ

00:18:17.300 --> 00:18:19.733
เราแก้ปัญหาด้วยการเปลี่ยนอะไร

00:18:21.100 --> 00:18:23.933
แต่ก่อนก็ต้องเปลี่ยนว่าเดี๋ยวนี้เค้าชอบมีอะไร

00:18:24.000 --> 00:18:25.733
รันอันนี้แล้วเร็วกว่าใช่ป่ะ

00:18:27.000 --> 00:18:28.333
แต่ไม่เคยเปลี่ยนตัวเองเลย

00:18:29.600 --> 00:18:32.733
โค้ดใหญ่มากใช่ป่ะ component มีเป็นล้านใช่ป่ะ

00:18:32.800 --> 00:18:36.733
build ด้วย tool ตัวนี้ไม่ดีใช่ป่ะ เปลี่ยนไปอีก tool นึง

00:18:36.800 --> 00:18:38.233
แล้วก็เปลี่ยนไปอีก tool นึง

00:18:38.300 --> 00:18:41.433
จากเดิมเขียนด้วยอันนี้ เดี๋ยวเขียนด้วย Go

00:18:41.500 --> 00:18:45.233
Go เร็วขึ้นเว้ย สักพัก Rust มา เร็วกว่าเว้ย

00:18:46.000 --> 00:18:48.333
แล้วสิ่งที่เปลี่ยนแค่ tool ใช่ป่ะ

00:18:48.900 --> 00:18:54.733
แล้วโค้ดเปลี่ยนมั้ย ไม่เปลี่ยนนี่

00:18:55.300 --> 00:18:57.133
ทุกอย่างเปลี่ยนยกเว้นตัวเราเอง

00:18:58.300 --> 00:19:01.333
ดังนั้นถ้าผมบอกว่าตอนนี้ผมมี 100 feature

00:19:01.400 --> 00:19:03.933
แต่ตอนนี้ผมกำลังพัฒนาอีก feature นึงใช่ป่ะ

00:19:04.000 --> 00:19:07.633
เวลา build ผมอยาก build ทั้ง 100 feature มั้ย

00:19:07.700 --> 00:19:09.633
เพราะฉะนั้นมันต้องย้อนกลับมาว่า

00:19:09.700 --> 00:19:13.233
โปรเจคเรามัน build ได้เร็วและง่ายหรือเปล่า

00:19:13.900 --> 00:19:16.333
ยกตัวอย่าง อันนี้โปรเจคนึงที่ผมทำ ผมใช้ Nuxt

00:19:17.600 --> 00:19:21.333
ผมบอกว่างั้นผมแบ่งเป็น feature-based

00:19:21.400 --> 00:19:24.133
หรือว่าเป็น module นะครับ

00:19:25.500 --> 00:19:28.033
สังเกต ผมมี main application ใช่ป่ะ

00:19:28.100 --> 00:19:31.633
main application จะมีของที่เป็น default

00:19:31.700 --> 00:19:35.133
ที่ทุกๆ แอปรันปุ๊บจะต้องมี feature เหล่านี้

00:19:35.800 --> 00:19:37.833
เสร็จแล้วผมแบ่ง feature ออกมา

00:19:37.900 --> 00:19:41.533
อันนี้ผมเป็น domain เป็น user product catalog

00:19:41.600 --> 00:19:43.433
แต่ละทีมคนละโปรเจคเลย

00:19:43.500 --> 00:19:46.533
มี configuration มี component มีทุกอย่างแยกออกจากกัน

00:19:47.400 --> 00:19:49.533
เสร็จแล้วโอเค อยาก build ใช่มั้ย

00:19:49.600 --> 00:19:55.333
ครั้งนี้อยากได้ user add user เข้ามา

00:19:56.200 --> 00:19:58.233
แอดอะไรฮะ แอดโปรดักต์เข้ามา

00:19:58.300 --> 00:20:03.533
แล้วคุณ build มันจะโหลดแค่อะไรฮะ สองอัน ใช่ถูกป่ะ

00:20:03.600 --> 00:20:08.333
นะซึ่งตรงนี้แหละ คำถามคือตอนที่เราทำเริ่มต้นแรกๆ

00:20:08.400 --> 00:20:10.933
ไม่ทำเนาะ เพราะมันมีอะไรฮะ feature น้อย

00:20:11.000 --> 00:20:13.933
แต่พอ feature เยอะรู้สึก build time นานขึ้นมั้ย

00:20:14.700 --> 00:20:18.733
เออ แล้วเราทำอะไร เปลี่ยน tool เปลี่ยนเครื่อง

00:20:18.800 --> 00:20:21.633
ขอเครื่องใหญ่ ใช่ป่ะ อ่านะ เห็นนะ

00:20:21.700 --> 00:20:24.233
เราจะแก้แบบนี้ใช่มั้ย แต่ถ้าผมแบ่งอันนี้ปุ๊บ

00:20:24.300 --> 00:20:26.733
ผมก็โหลดเท่าที่อะไรฮะ ผมจะใช้

00:20:26.800 --> 00:20:31.233
แต่ถามว่ายากมั้ย โคตรยาก เพราะไม่ได้คิด โอเคป่ะ

00:20:31.300 --> 00:20:33.533
เออเนาะ นี่คือสิ่งที่เกิดขึ้นก่อนว่า

00:20:33.600 --> 00:20:36.533
ถ้าคุณจะทำเนาะ ระบบคุณต้อง testable ได้

00:20:36.600 --> 00:20:39.233
build time คุณต้องลงมา นะครับเนาะ

00:20:39.300 --> 00:20:40.933
จากนั้นนะฮะ อันนี้คือผมให้เห็นเนาะ

00:20:41.000 --> 00:20:42.933
จากนั้นเข้าสู่การ test นี่คือหัวใจละ

00:20:43.000 --> 00:20:45.533
ประมาณ 5 นาทีนะครับ นะฮะ เราจะ test ปุ๊บ

00:20:45.600 --> 00:20:47.633
มีใครดูอันนี้บ้างฮะ นะ

00:20:48.600 --> 00:20:50.933
เพราะเมื่อกี้ถามว่าใคร test ป่ะ ก็ไม่มีใช่ป่ะ

00:20:51.000 --> 00:20:53.333
นะหรือน้อยมากใช่มั้ย อันนี้คือเป็นอะไรฮะ

00:20:53.400 --> 00:20:55.333
best practice เนาะ แต่ผมไม่เห็นก่อนว่า

00:20:55.400 --> 00:20:58.733
ในการ test ระบบงานของเรา นะครับเนาะ

00:20:58.800 --> 00:21:01.733
อย่างแรกที่ผมจะให้ดูนะครับเนาะ ผมบอกว่าโอเค

00:21:01.800 --> 00:21:04.433
เรามี front-end อย่าง Vue เนาะ เราทำ Vue.js ถูกป่ะ

00:21:04.500 --> 00:21:06.733
แล้วต้องไปอะไรฮะ มันอยู่ด้วยตัวเองไม่ได้ใช่ป่ะ

00:21:06.800 --> 00:21:10.133
ต้องไปอะไร หลังบ้าน ถูกป่ะ อ่ะ API เนาะ

00:21:10.200 --> 00:21:14.033
อ่ะถ้า API ตายล่ะ จบ อ่า ของเราทำไงฮะ

00:21:14.100 --> 00:21:17.133
อ่ะกูนั่งรอ ใช่ป่ะ เออคงไม่ใช่เนาะ นะครับเนาะ

00:21:17.200 --> 00:21:19.633
แต่คนที่ดูแลโปรเจคอ่ะ เค้าชอบมี Gantt chart ใช่ป่ะ

00:21:19.700 --> 00:21:21.533
ของเรามีนะ ไอ้โปรเจค management อ่ะ

00:21:21.600 --> 00:21:24.333
ที่ต้องขนานกันใช่มั้ย back-end เกิดขึ้นมาหน่อย

00:21:24.400 --> 00:21:27.333
พอผ่านไปนิดนึงปุ๊บ จะต้องมีอะไรฮะ front-end ต่อ

00:21:27.400 --> 00:21:29.533
อ่า นั่นคืออะไรฮะ โปรเจค management ใช่ป่ะ

00:21:29.600 --> 00:21:33.533
อ่ะชีวิตจริง back-end ต้องเสร็จก่อน

00:21:33.600 --> 00:21:36.133
แล้วอะไรฮะ front-end ต่อ มึง sequential

00:21:36.200 --> 00:21:39.833
เพราะฉะนั้นโปรเจคทุกโปรเจค มึงไม่เคยทัน โอเคป่ะ

00:21:39.900 --> 00:21:41.533
เออเนาะ นี่คือสิ่งที่เกิดขึ้น

00:21:41.600 --> 00:21:45.333
ทำให้ไรฮะ ท่าพิเศษต้องอะไรฮะ อยู่ OT ใช่ป่ะ

00:21:45.400 --> 00:21:49.233
เสาร์อาทิตย์ว่างมั้ยน้อง นะสักพักเดี๋ยวพี่เพิ่มคนให้

00:21:49.300 --> 00:21:50.933
นี่ใช่ป่ะ อ่านะ มันจะมีอะไรฮะ

00:21:51.000 --> 00:21:55.033
นี่คือ 3 สเต็ปของชีวิตที่เกิดขึ้น คุ้นๆ มั้ย

00:21:55.900 --> 00:21:59.133
แล้วก็มีคำพูดนึง สู้ๆ นะ เออเนาะ ประมาณนี้นะ

00:21:59.200 --> 00:22:02.033
ดังนั้น นะในโลกของอะไรฮะ การ test เนาะ

00:22:02.100 --> 00:22:05.033
ของ Vue ละกันนะฮะ ผมให้เห็นเนาะว่า

00:22:05.900 --> 00:22:07.333
ผมจะมีการ test หลายเลเวล

00:22:07.400 --> 00:22:10.533
อย่างแรกคือ end-to-end end-to-end คือเป็น black box

00:22:10.600 --> 00:22:12.533
นะฮะ ผมไม่สนใจว่าข้างในคุณจะเป็นยังไง

00:22:13.200 --> 00:22:16.333
แต่ผมอะไรฮะ ยิงใส่แม่งเลยใช่ป่ะ นะฮะ

00:22:16.400 --> 00:22:19.433
มีใครใช้บ้างฮะ อันนี้อ่านว่าอะไรนะ Vitest

00:22:19.500 --> 00:22:22.633
Vitest อ่ะใครใช้บ้างฮะ อ่า ใช่ป่ะ

00:22:22.700 --> 00:22:25.433
มีอะไรฮะ Cypress มี Playwright

00:22:25.500 --> 00:22:27.733
บางคนบอกเอาแก่หน่อย กู Selenium ใช่มั้ย

00:22:27.800 --> 00:22:29.733
อ่าบางคน Puppeteer ก็ว่าไป

00:22:29.800 --> 00:22:32.333
แต่นี่คือผมอยู่ข้างนอกใช่ป่ะ แล้วผมยิงเข้ามา

00:22:33.300 --> 00:22:37.333
สิ่งที่ดีคืออะไรฮะ การทำแบบเนี้ย เหมือนคนใช้งานใช่ป่ะ

00:22:37.900 --> 00:22:41.733
ทำให้อะไรฮะ เลเวลของความเชื่อมั่นสูง นะครับเนาะ

00:22:41.800 --> 00:22:44.233
แต่สิ่งที่ตามมาผมให้เห็นเนาะ

00:22:45.000 --> 00:22:49.133
ถ้าไม่เกิดสิ่งเนี้ย ก็ใช้ได้ใช่ป่ะ ไม่ช้าก็ใช้ได้

00:22:49.200 --> 00:22:51.933
คุณๆ มั้ย flaky test เทสชุดเดิม

00:22:52.000 --> 00:22:54.633
กูไม่เปลี่ยนอะไรเลย แต่ทำไมไม่ผ่านวะ

00:22:55.700 --> 00:22:59.133
เมื่อกี้ยังผ่านเลย แต่รันซ้ำอีกครั้ง ไม่ผ่าน

00:22:59.200 --> 00:23:01.833
พอเป็นงี้ปุ๊บ สุดท้ายกูไม่เขียนก็ได้นะฮะ เออเนาะ

00:23:01.900 --> 00:23:03.233
นะอันนี้คือเป็นวังวนนะครับ

00:23:03.300 --> 00:23:06.533
เค้าเรียกวง วงเวียนอะไร กงกรรมกงเกวียนของชีวิตนะฮะ

00:23:06.600 --> 00:23:08.333
นะครับเพราะฉะนั้น นะฮะ

00:23:08.400 --> 00:23:10.833
ในเรื่องของอะไรฮะ การ test จะเป็นลักษณะนี้

00:23:10.900 --> 00:23:13.733
กลับอะไรฮะ เอ๊ะถ้ามันช้าใช่ป่ะ มัน flaky เยอะๆ

00:23:13.800 --> 00:23:16.033
บางคนก็แก้เนาะ มันเลยเป็นอะไรฮะ

00:23:16.100 --> 00:23:20.733
มีการ test เลเวลต่ำลงมา แต่ความเชื่อมั่นต่ำกว่า

00:23:20.800 --> 00:23:22.933
แต่เร็วขึ้นและ repeat ได้

00:23:23.000 --> 00:23:27.133
นะยกตัวอย่างเช่นเราชอบอะไร มี isolated test เนาะ

00:23:27.200 --> 00:23:30.133
ก็คืออะไรนะ โอเคเรากำลังทำ Vue application ใช่ป่ะ

00:23:30.200 --> 00:23:33.533
มันต้องต่อหลังบ้านเนาะ เราคุมไม่ได้

00:23:33.600 --> 00:23:35.833
พอคุมไม่ได้ปุ๊บ กู mock แม่งเลย

00:23:36.500 --> 00:23:39.733
mock มีหลายเลเวล สมมติผมต้อง call ผ่าน HTTP protocol

00:23:39.800 --> 00:23:41.933
ใช่ป่ะ แล้ว mock ยังไง

00:23:42.000 --> 00:23:44.733
บางคนบอกกู mock แล้ว spy แม่งเลยใช่ป่ะ

00:23:44.800 --> 00:23:48.033
อ่าไม่ให้ยิงออก ถูกป่ะ อ่าคำถามคือ

00:23:48.100 --> 00:23:50.833
แล้วมึงเคยทดสอบยิงออกมั้ย ไม่เคย

00:23:51.500 --> 00:23:55.533
บางคนบอกว่างั้นกูทำ JSON ละกันนะฮะ เอา JSON ยิงถูกป่ะ

00:23:55.600 --> 00:24:00.133
อ่ะเป็นอะไร ปกติยิง HTTP protocol แต่ JSON กูอ่านไฟล์

00:24:00.900 --> 00:24:04.633
ใช่ป่ะ แล้วแบบนี้มันจะดีมั้ย คำตอบคือไม่ดีถูกป่ะ

00:24:04.700 --> 00:24:07.133
ดังนั้นเราจำเป็นจะต้องอะไรฮะ จำลองเนาะ

00:24:07.800 --> 00:24:11.033
ให้เหมือนจริง แต่แทนที่จะไปอะไรฮะ ของจริงใช่ป่ะ

00:24:11.100 --> 00:24:13.633
แต่ให้ไปของปลอมที่คล้ายกับของจริง

00:24:13.700 --> 00:24:15.933
นะครับซึ่งตรงนี้แหละ มันก็จะมีอะไรฮะ

00:24:16.000 --> 00:24:19.133
มีเครื่องมือเนาะต่างๆ ที่โผล่เข้ามานะฮะ

00:24:19.200 --> 00:24:23.033
ประเด็นคือ ผมอยากให้ดูเนาะ เวลาเหลือ 1 นาทีนะฮะ

00:24:23.100 --> 00:24:24.233
เออเนาะ เมื่อกี้บอกเนาะ

00:24:24.300 --> 00:24:27.233
ผมอยากให้ดูนะว่า Vue ที่ผมทำ ผมทำยังไงเนาะ

00:24:27.300 --> 00:24:30.133
เอาเรื่องแรกก่อน end-to-end ผม mock ใช่ป่ะ

00:24:30.200 --> 00:24:31.633
คุณๆ มั้ย ใครใช้บ้างฮะ

00:24:32.500 --> 00:24:35.533
นะครับมันมีการ mock ของจริง ถูกป่ะ

00:24:35.600 --> 00:24:40.133
แต่อะไรฮะ ไม่ยิงไปของจริง แต่ยิงมาตัวอะไร mock server

00:24:40.200 --> 00:24:42.333
นะครับเนาะ หรืออีกแบบนึง

00:24:42.400 --> 00:24:44.333
สมมติเนาะผมเริ่มต้นด้วยการเขียน

00:24:44.400 --> 00:24:47.233
อ่าอันนี้สุดท้ายเนาะ ผมเขียนปุ๊บ สังเกตนะ

00:24:47.300 --> 00:24:49.833
อันนี้ผมเขียนเริ่มต้นด้วยอะไรฮะ Playwright ใช่ป่ะ

00:24:50.600 --> 00:24:54.333
วันนี้คือดี มีดำริมาเนาะ เมื่อกี้อะไรฮะ Vitest ใช่ป่ะ

00:24:54.400 --> 00:24:57.833
อยากจะเปลี่ยนไป Vitest อ่านะ คำถามคือ

00:24:58.500 --> 00:25:01.833
กูเปลี่ยนได้มั้ย ได้สูงด้วย แสดงว่าไม่ได้นะ

00:25:01.900 --> 00:25:04.533
เออเนาะ นะเพราะฉะนั้นนะครับ ไอ้ตรงนี้แหละ

00:25:05.200 --> 00:25:08.033
ที่เปลี่ยนยากเพราะอะไรฮะ เราผูกมัดกับเครื่องมือ

00:25:08.100 --> 00:25:10.633
กับ framework ดังนั้นอันนี้คือ make it work

00:25:10.700 --> 00:25:12.333
แต่ make it right มั้ย ไม่

00:25:12.400 --> 00:25:16.633
เพราะฉะนั้นนะฮะ สิ่งที่เกิดขึ้นนะครับ มันมีปัญหาคือ

00:25:16.700 --> 00:25:20.533
test test ของเราผูกติดกับอะไรฮะ framework มากเกินไป

00:25:21.200 --> 00:25:23.233
ดังนั้นเราจะ decouple ยังไง นะฮะ

00:25:23.900 --> 00:25:25.733
ที่บอกว่ามันมีเคสเมื่อกี้นะ

00:25:25.800 --> 00:25:28.633
นะครับดังนั้นสิ่งที่ผมทำเนาะ 2 อันนี้นะฮะ

00:25:28.700 --> 00:25:29.933
ก่อนหน้านี้มี AI ป่ะ

00:25:30.000 --> 00:25:32.933
บางคนบอกกูเอา test case เข้าอะไรฮะ อ่าใช่ป่ะ

00:25:33.000 --> 00:25:34.533
ให้ Gen AI ใช่ป่ะ convert ให้เลย

00:25:34.600 --> 00:25:37.333
ก็ผมก็ทำมาแล้วนะฮะ 2-3 โปรเจคละ พอได้เงินนะฮะ

00:25:37.400 --> 00:25:40.933
เออเนาะ อ่านะ เออ แต่นะฮะ สุดท้ายเนาะ

00:25:41.000 --> 00:25:43.433
ผมให้ดูนะ สิ่งที่ผมทำ ผม decouple ออกมา

00:25:43.500 --> 00:25:47.533
ปกติผมทำแบบนี้เนาะ ผมทำแบบนี้นะครับ

00:25:47.600 --> 00:25:53.333
ด้วยการอะไรฮะ ผมมี custom อะไรฮะ driver ฮะ ถูกป่ะ

00:25:53.400 --> 00:25:55.833
พอมี custom driver ปุ๊บ ตอนที่ผมรัน

00:25:55.900 --> 00:26:00.133
ผมรันให้ดูนะฮะ นี่เนาะ ปึ๊บนะฮะ ผมลองรันเนาะ

00:26:00.200 --> 00:26:02.033
อันนี้ผมก็มึนๆ นะฮะ เออเนาะ

00:26:02.600 --> 00:26:04.833
นี่ผมรันด้วย Playwright เนี่ย โอเคป่ะ

00:26:04.900 --> 00:26:09.333
รันด้วย Playwright ปึ๊บ มันจะเปิด browser เนี่ย ปึ๊บๆ

00:26:09.400 --> 00:26:12.733
อ่าเนาะ อ่าผมบอกว่า เอ้ยผมอยากรันเหมือนเดิม

00:26:12.800 --> 00:26:15.533
แต่ผมขอเปลี่ยนเป็นอะไรฮะ ไอ้ตัว Vitest

00:26:16.200 --> 00:26:18.833
เหมือนกันนะฮะ ไม่เปิด browser นะ

00:26:19.700 --> 00:26:21.933
เพราะเมื่อกี้ตามจริงไอ้ Playwright

00:26:22.000 --> 00:26:23.733
สามารถทำเป็น headless mode ได้ถูกป่ะ

00:26:23.800 --> 00:26:27.533
อ่าส่วน Vitest ไม่ใช้ DOM โอเคป่ะ เออเนาะ

00:26:27.600 --> 00:26:29.933
ซึ่งตรงนี้ลองสังเกตเนาะ ผมสามารถอะไรฮะ

00:26:30.700 --> 00:26:33.433
เปลี่ยนได้ไปมาถูกป่ะ ซึ่งตรงนี้แหละ

00:26:33.500 --> 00:26:37.333
สิ่งที่เราต้องทำคืออะไร ตรงที่เราทำคือ custom

00:26:37.400 --> 00:26:39.333
นะผมให้ดูเนาะ สุดท้ายนะฮะ

00:26:39.400 --> 00:26:45.133
สังเกตนะผมจะมี driver เป็นอะไรฮะ Vitest กับอะไรฮะ

00:26:46.200 --> 00:26:48.533
Playwright แล้วพอตอนผมรัน

00:26:48.600 --> 00:26:50.833
ผมเลือกว่าการรันครั้งนี้ผมจะใช้ตัวไหน

00:26:50.900 --> 00:26:53.333
ผมก็อะไรฮะ test case ผมเหมือนเดิม

00:26:54.100 --> 00:26:56.933
เพิ่มเติมคือสุดท้ายเนาะ นะฮะ

00:26:57.000 --> 00:27:03.833
สุดท้ายคือ test case เหมือนเดิม แต่เทสผม เหมือนเดิม

00:27:03.900 --> 00:27:05.933
ตรงนี้ ตอนรัน ตอนรันผมเลือกเลยว่า

00:27:06.000 --> 00:27:11.433
ผมจะรันด้วยอะไรฮะ Vitest หรือ Playwright อ่าเนาะ

00:27:11.500 --> 00:27:13.433
โอเคป่ะ นะครับเพราะก่อนหน้านี้ Cypress

00:27:13.500 --> 00:27:15.733
มัน มี library นะครับ เพิ่มเติมเข้ามา

00:27:15.800 --> 00:27:17.933
ดังนั้นผมมีอะไรฮะ มีคนถามด้วยฮะ

00:27:18.000 --> 00:27:19.733
อ้าวแล้วนี่มึงทำยังไงวะ

00:27:19.800 --> 00:27:23.033
ก็ตอนรันกูก็แค่อะไรฮะ symbolic link เอาไง

00:27:23.900 --> 00:27:26.633
ย้าย ย้ายว่ารันครั้งนี้จะไปอะไรฮะ Playwright

00:27:26.700 --> 00:27:29.033
รันครั้งนี้จะไปอะไรฮะ Vitest

00:27:29.100 --> 00:27:31.833
นะแล้วอีกอย่างนึงผมให้ดูนะฮะ สุดท้ายเนาะ

00:27:32.500 --> 00:27:33.733
นะสุดท้ายขอเวลา 1 นาทีนะฮะ

00:27:34.500 --> 00:27:36.833
ผมลองอะไรฮะ ลองรันเนาะ server

00:27:36.900 --> 00:27:38.533
ผมลอง stop server ให้แป๊บนึงนะฮะ

00:27:39.200 --> 00:27:42.033
นะเมื่อกี้ที่กินเบียร์ผมลอง stop server start server

00:27:42.100 --> 00:27:43.533
ไว้เนาะ กลัว กลัวจำไม่ได้นะฮะ

00:27:44.300 --> 00:27:47.233
อ่าผมขอ ขอรัน Playwright ดูนะ สังเกตนะฮะ

00:27:47.900 --> 00:27:51.233
เมื่อกี้ผม stop server Playwright แม่ง fail

00:27:52.200 --> 00:27:53.733
แล้วมันจะด่าผมนะว่า

00:27:58.600 --> 00:27:58.733
พี่

00:27:58.800 --> 00:28:01.833
รีวิวฮะ ก็เพราะผม stop server เมื่อกี้ใช่ป่ะ

00:28:02.600 --> 00:28:04.433
นะครับลองดูเนาะ อันนี้คือพฤติกรรมนะฮะ

00:28:05.100 --> 00:28:11.033
แต่ถ้าเป็น Vitest ผ่านเหมือนเดิมฮะ เพราะว่าอะไรฮะ

00:28:11.800 --> 00:28:16.133
ใน driver ที่ผม create ใช่ป่ะ มัน start server เองฮะ

00:28:16.200 --> 00:28:19.933
โดยที่ไม่ต้องไป start server หลอก

00:28:20.000 --> 00:28:22.233
แล้วมันก็จะหายไปนะครับเนาะ

00:28:22.300 --> 00:28:26.133
ดังนั้นลองดูนะฮะ นี่คือสิ่งที่ผมไม่เห็นก่อนว่าในการเทสเนาะ

00:28:26.200 --> 00:28:29.733
ขอนิดนึงนะฮะ เราต้องแยกออกมาใช่ป่ะ

00:28:29.800 --> 00:28:35.033
กับอีกอย่างนึงสุดท้าย สังเกตนะฮะ เทสนี้ผมมีอะไรฮะ

00:28:36.100 --> 00:28:38.533
test ID เพราะว่าเราก็ทำ UI test ใช่ป่ะ

00:28:39.300 --> 00:28:41.733
สิ่งที่ดีที่สุดในการทำ UI test นะฮะ

00:28:41.800 --> 00:28:44.933
test case เราต้องไม่ผูกมัดกับ user interface

00:28:45.000 --> 00:28:47.533
นั่นหมายความว่าวันดีคืนดี UX เนาะ UI อ่ะ

00:28:48.200 --> 00:28:52.133
หน้านี้อยากเปลี่ยน แต่เจาะหน้าจอเหมือนเดิมนะ

00:28:53.000 --> 00:28:59.933
แต่ย้ายจากบนลงล่าง เทสควรต้องพังมั้ย ไม่พังสิ ใช่มั้ย

00:29:00.000 --> 00:29:03.433
ดังนั้นเราต้องมีสิ่งนึงเนาะ อันนี้เค้าเรียกว่า test ID นะฮะ

00:29:03.500 --> 00:29:08.033
เอามาใส่เอาไว้ใน element ที่ไม่เกี่ยวกับการพัฒนานะ

00:29:08.700 --> 00:29:12.633
อันนี้คือการ decouple ออกจาก user interface

00:29:12.700 --> 00:29:16.733
ก็จะมีลักษณะนี้นะครับ นี่คือมุมมองที่ผมไม่เห็นเนาะ

00:29:16.800 --> 00:29:21.233
และสุดท้ายนะ อันนี้ผมขอครึ่งนาทีนะ

00:29:21.300 --> 00:29:26.533
สุดท้ายแล้ว เทสมันต้องอะไรฮะ เข้าใจได้ง่าย โอเคป่ะ

00:29:26.600 --> 00:29:28.433
พอเข้าใจง่ายๆ ปุ๊บ จากอันเนี้ย

00:29:28.500 --> 00:29:32.733
อันนี้ผมเขียนแบบง่ายๆ ใช่ป่ะ คืออะไรวะ มึงทำอะไร

00:29:32.800 --> 00:29:36.633
ถูกป่ะฮะ มันต้องอะไรฮะ เทสที่เกิดขึ้นมาต้อง maintain ได้

00:29:36.700 --> 00:29:40.233
เพราะฉะนั้นสุดท้ายเนาะ เทสต้องเข้าใจใช่ป่ะ

00:29:40.300 --> 00:29:42.333
ดังนั้นผมเปลี่ยนใหม่ด้วยการอะไรฮะ

00:29:43.300 --> 00:29:47.033
แบบนี้เข้าใจง่ายขึ้นมั้ย ถูกป่ะ เป็น level นะฮะ

00:29:47.100 --> 00:29:51.033
make it work ก่อน แล้ว make it right ถูกป่ะ

00:29:51.100 --> 00:29:53.433
แล้วจากนั้นปุ๊บเราหาวิธี make it fast

00:29:53.500 --> 00:29:54.833
แต่ส่วนใหญ่เราชอบทำอะไรฮะ

00:29:54.900 --> 00:29:57.033
make it work make it work make it work make it work

00:29:57.100 --> 00:30:00.933
แล้วสุดท้ายเดี๋ยวมีคนเดินมาอยากให้เร็ว มันเป็นไปไม่ได้

00:30:01.000 --> 00:30:03.833
โอเคมั้ย ดังนั้นนี่คือจุดนึงเนาะ

00:30:03.900 --> 00:30:05.833
ที่ผมอยากให้เห็นก่อนว่าใน Vue เนี่ย

00:30:05.900 --> 00:30:07.733
เราสามารถทดสอบลักษณะนี้ได้

00:30:07.800 --> 00:30:13.133
ตามจริงสิ่งที่ผมใช้เนาะ library ที่ผมใช้

00:30:14.000 --> 00:30:16.133
นะครับเมื่อกี้เนาะ ผมใช้ Vitest ใช่ป่ะ

00:30:16.200 --> 00:30:17.933
สังเกตมั้ย ได้เปิดหน้าจอใช่ป่ะ

00:30:18.000 --> 00:30:21.933
ผมใช้ควบคู่กับอะไรฮะ test framework library ตรงนี้

00:30:22.000 --> 00:30:24.333
แต่สุดท้ายเนาะ ถ้าคุณไปอ่านใน Vue นะฮะ

00:30:24.400 --> 00:30:28.533
ใน Vue บอกว่าอย่ามาใช้นี้นะ เพราะอะไรฮะ

00:30:28.600 --> 00:30:32.333
มันจะมีปัญหากับ component ที่โหลดมาเป็น asynchronous

00:30:32.400 --> 00:30:36.233
เค้าให้ไปใช้อะไรฮะ ไอ้ตัว test util แทนนะ

00:30:36.300 --> 00:30:38.733
แต่ในงานของผมเนาะ ผมยังใช้ได้นะครับเนาะ

00:30:38.800 --> 00:30:42.533
เพราะฉะนั้นนะครับ ระหว่างคุณภาพกับปริมาณ

00:30:43.200 --> 00:30:46.233
ให้ทุกคนเลือก ว่าทุกคนจะเป็นยังไง โอเคมั้ยฮะ

00:30:46.800 --> 00:30:49.133
จบแล้วฮะ นะ เค้าด่าแล้วนะ อันนี้เนาะ

00:30:49.200 --> 00:30:51.533
มีคำถามมั้ยครับ มีคำถามไหนที่ทำให้ช้านะฮะ

00:30:54.000 --> 00:30:56.033
มีมั้ยฮะ เค้ารีบนะ วันนี้ผมรีบนะ

00:30:56.100 --> 00:30:58.833
โอเคป่ะ นะฮะ มีมั้ยฮะ อันเนี้ย

00:30:58.900 --> 00:31:00.833
ต้องมีคำถามป่ะ หรือเกินมานานละ

00:31:00.900 --> 00:31:07.133
โอเคนะฮะ โอเคเนาะ เพราะฉะนั้นขอบคุณทุกคนครับผม

00:31:08.700 --> 00:31:10.133
โทษทีนะฮะ เกินไปนิดนึงฮะ เออเนาะ โอ้โห นะ
