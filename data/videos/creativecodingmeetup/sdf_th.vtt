WEBVTT

00:00:00.100 --> 00:00:02.133
โอเคครับ

00:00:02.200 --> 00:00:07.933
อันนี้จะเป็นหัวข้อสั้นๆ นะครับ
ที่อยากจะแชร์กับทุกๆ คนนะครับ

00:00:08.000 --> 00:00:11.633
สวัสดีครับทุกคน ผมชื่อไทนะครับ
เพิ่งได้แนะนำตัว

00:00:11.700 --> 00:00:13.533
หัวข้อ Lightning Talk

00:00:13.600 --> 00:00:18.233
ของผมวันนี้นะครับชื่อว่า The Magic of
Signed Distance Function นะครับ

00:00:18.300 --> 00:00:24.233
อันนี้คือหน้าเว็บของงาน Creative Coding
Meetup บน Eventpop นะครับ

00:00:24.300 --> 00:00:26.633
แล้วอันนี้ก็คือภาพแบ็กกราวนด์ที่ใช้เนาะ

00:00:26.700 --> 00:00:28.833
ซึ่งแน่นอนครับสร้างด้วยโค้ดนะครับ

00:00:28.900 --> 00:00:32.232
แต่ถามว่าใช้โค้ดกี่บรรทัด

00:00:32.299 --> 00:00:36.333
คือรูปเนี้ยผมมองว่ามันก็มีเอฟเฟกต์เยอะเนาะ
มีทั้ง gradient

00:00:36.400 --> 00:00:37.133
มีทั้ง pattern

00:00:37.200 --> 00:00:40.833
ที่มันซ้ำกันเรื่อยๆ แล้วก็มีเอฟเฟกต์
ที่เป็นแบบ Inner Glow อ่ะ

00:00:40.900 --> 00:00:42.333
ถ้าผมเป็น web developer นะ

00:00:42.400 --> 00:00:45.733
ถ้าคิดว่าถ้าใช้ HTML CSS Canvas หรือ SVG เนี่ย

00:00:45.800 --> 00:00:47.333
น่าจะหลายสิบบรรทัด แต่ว่า

00:00:47.400 --> 00:00:51.933
ลอจิกหลักๆ จริงๆ เนี่ยมีแค่
7 บรรทัดเท่านั้นครับ คราวนี้เนี่ย

00:00:52.000 --> 00:00:54.833
สมัยก่อนนะก่อนที่ผมจะรู้จักเรื่อง SDF เนี่ย

00:00:54.900 --> 00:00:56.833
เวลาผมเห็นคนสร้างรูปแบบนี้ได้เนี่ย

00:00:56.900 --> 00:00:59.733
ผมแบบว้าวมากเลย
เพราะไม่คิดว่าโค้ดแค่ 7 บรรทัด

00:00:59.800 --> 00:01:01.333
มันจะสร้างรูปอะไรแบบนี้ได้

00:01:01.400 --> 00:01:05.633
ก็มันก็เป็นอะไรที่ magic มากๆ จนกระทั่ง
ผมไปศึกษามันแล้วก็อยากจะมาแชร์

00:01:05.700 --> 00:01:08.733
ในวันนี้นะครับว่าแต่โค้ดนี้มันคืออะไร
เดี๋ยวเราไปดูกันนะครับ

00:01:08.800 --> 00:01:12.633
โค้ดนี้เรียกว่า Fragment Shader นะครับ
เขียนด้วยภาษา GLSL ย่อมาจาก

00:01:12.700 --> 00:01:17.032
OpenGL Shading Language นะครับ
เราสามารถเขียน Fragment Shader

00:01:17.100 --> 00:01:20.032
ใน VS Code ได้โดยใช้ Extension
ที่ชื่อว่า glslCanvas นะครับ

00:01:20.100 --> 00:01:23.133
โดยหน้าที่หลักของ Fragment Shader เนี่ย
คือเอาไว้คำนวณว่า

00:01:23.200 --> 00:01:28.633
ณ ตำแหน่งใดๆ บนหน้าจอเนี่ย
จะให้ GPU วาดสีอะไรลงบน pixel นั้นนะครับ

00:01:28.700 --> 00:01:32.633
โดย input เนี่ยจะเป็นตัวแปร
ชื่อ gl_FragCoord หน้าตาแบบนี้นะครับ

00:01:32.700 --> 00:01:36.633
เสร็จแล้ว output คือตัวแปร
ชื่อ gl_FragColor — ตัว GPU เนี่ย

00:01:36.700 --> 00:01:41.633
มันจะรันโค้ดของเรา 1 ทีต่อ 1 pixel
แต่ด้วยความที่มันเป็น GPU

00:01:41.700 --> 00:01:45.133
มันรันหลายๆ pixel ได้พร้อมๆ กันนะครับ
แล้วตอนที่โค้ดเรารันเสร็จเนี่ย

00:01:45.200 --> 00:01:48.933
ตัวแปร gl_FragColor มีสีอะไร
มันจะเอาสีนั้นไปเพ้นท์บนหน้าจอนะครับ

00:01:49.000 --> 00:01:55.433
ฉะนั้นรูปเนี้ยผมใช้ concept ที่เรียกว่า
Signed Distance Function นะครับ

00:01:55.500 --> 00:01:59.633
ซึ่งผมคิดว่าเป็น concept ที่ทรงพลังมากๆ เลย
ฉะนั้นเดี๋ยว session เนี้ย

00:01:59.700 --> 00:02:02.833
ผมจะไปแบบรวบเร็วมากๆ นะครับ
ถ้าฟังแล้วไม่เก็ตทั้งหมดไม่เป็นไรนะ

00:02:02.900 --> 00:02:07.433
ความตั้งใจผมคืออยากให้รายละเอียดต่างๆ
มันผ่านหูผ่านตาซัก 1 รอบ

00:02:07.500 --> 00:02:11.132
พอไปศึกษาแบบละเอียดจริงๆ เนี่ย
ก็อาจจะช่วยให้เข้าใจได้ง่ายขึ้นนะครับ

00:02:11.200 --> 00:02:12.933
ฉะนั้นมันคืออะไร เดี๋ยวไปดูกันนะครับ

00:02:13.000 --> 00:02:15.132
สมมุติว่าเรามีรูปร่างหรือ shape นึงนะ

00:02:15.200 --> 00:02:17.333
ตัวอย่างเช่นวงกลมวงเนี้ย
เราต้องการ-

00:02:17.400 --> 00:02:19.132
เราจะเรียกสิ่งที่เราต้องการจะวาด

00:02:19.200 --> 00:02:23.132
ว่าเป็น scene นะครับ scene ก็คือ
แทนสิ่งที่เราต้องการจะวาดเนาะ

00:02:23.200 --> 00:02:29.833
SDF คืออะไร? SDF คือฟังก์ชันที่
รับจุดเข้ามาจุดนึง แล้ว return ระยะห่าง

00:02:29.900 --> 00:02:34.833
ระหว่างจุดนั้นกับตัว scene นะครับ
อย่างเช่นจุดนี้ อ่า

00:02:34.900 --> 00:02:38.433
จะเห็นว่ามันห่างจากขอบของวงกลม 2 หน่วยเนาะ

00:02:38.500 --> 00:02:42.333
ฉะนั้นฟังก์ชัน SDF ของเราเนี่ย ถ้ารับจุดนี้เข้าไป

00:02:42.400 --> 00:02:44.333
จะต้องรีเทิร์นเลข 2 มา

00:02:44.400 --> 00:02:46.333
- ถ้าจุดนี้ล่ะครับ?
- 1

00:02:46.400 --> 00:02:47.733
- จุดนี้ล่ะครับ?
- 0

00:02:47.800 --> 00:02:50.333
โอเค 0 ครับ
จุดนี้ล่ะครับ?

00:02:50.400 --> 00:02:51.132
-1

00:02:51.200 --> 00:02:53.833
ถูกต้องครับ คือถ้าจุดมันอยู่ข้างในรูป

00:02:53.900 --> 00:02:55.933
มันจะต้องรีเทิร์นเลขติดลบมา

00:02:56.000 --> 00:02:59.533
เพราะว่ามันมาจากคำว่า signed
signed แปลว่ามีบวกมีลบนะครับ

00:02:59.600 --> 00:03:03.233
ดังนั้นเนี่ย SDF หน้าที่ของมันคือทำแบบนี้

00:03:03.300 --> 00:03:06.132
คราวนี้ ฟังก์ชันนี้เนี่ย SDF เราจะเขียนฟังก์ชั่น

00:03:06.200 --> 00:03:07.533
ให้วงกลมนี้ยังไงนะครับ

00:03:07.600 --> 00:03:10.233
วงกลมมีจุดศูนย์กลาง (h, k) มีรัศมี r นะครับ

00:03:10.300 --> 00:03:12.733
ถ้าเราอยากจะดูว่าตำแหน่ง (x, y) ห่างจาก

00:03:12.800 --> 00:03:15.233
ขอบวงกลมเท่าไหร่ก็เอาสูตร ม. 3 มานะครับ

00:03:15.300 --> 00:03:18.033
เอ๊ะ ม. 4: (x - h)² + (y - k)²

00:03:18.100 --> 00:03:19.233
ทั้งหมดสแควรูทนะครับ

00:03:19.300 --> 00:03:21.733
มันคือสูตรอะไรนะ

00:03:21.800 --> 00:03:24.833
เรขาคณิตวิเคราะห์ ภาคตัดกรวย
ที่เรียนกันตอน ม. 4 นะครับ

00:03:24.900 --> 00:03:28.833
เราก็เอารัศมีมาหักลบ
เราก็จะได้ SDF ของวงกลมนี้ครับ

00:03:28.900 --> 00:03:31.733
แต่ว่าจริงๆ น่ะ เวลาเราเห็นสูตรแบบนี้
มันน่ากลัวนะ

00:03:31.800 --> 00:03:34.033
เราตั้งชื่อง่ายๆ แล้วกัน จุด C จุด P

00:03:34.100 --> 00:03:35.533
เรามีเวคเตอร์ CP

00:03:35.600 --> 00:03:36.733
มีเวกเตอร์ CP

00:03:36.800 --> 00:03:38.632
เราเขียนแบบนี้สั้นสั้นก็ได้

00:03:38.700 --> 00:03:40.433
ซึ่งมันก็จะเข้าใจง่ายด้วยนะ

00:03:40.500 --> 00:03:41.733
เพราะว่าถ้าจุด-

00:03:41.800 --> 00:03:44.033
เพราะว่าถ้าจุด P มันอยู่นอกวงกลมเนี่ย

00:03:44.100 --> 00:03:46.833
เส้นนี้มันจะยาวกว่ารัศมี มันจะได้เลขบวก

00:03:46.900 --> 00:03:48.933
แต่ว่าถ้าจุดนี้มันย้ายไปข้างในเนี่ย

00:03:49.000 --> 00:03:51.033
เส้นนี้มันจะสั้นกว่ารัศมี

00:03:51.100 --> 00:03:51.933
จะได้เลขลบ

00:03:52.000 --> 00:03:53.533
ดังนั้นเขียนแบบนี้ได้

00:03:53.600 --> 00:03:55.132
ด้วยความที่เราเป็นโปรแกรมเมอร์ครับ

00:03:55.200 --> 00:03:57.533
เราตั้งชื่อ C ตั้งชื่อ P
มันไม่ดีนะครับ

00:03:57.600 --> 00:04:00.333
เราควรจะตั้งชื่อตัวแปรให้มันสื่อเข้าใจง่ายหน่อย

00:04:00.400 --> 00:04:03.533
พอมาเขียนเป็น GLSL ก็จะได้โค้ดประมาณนี้นะครับ

00:04:03.600 --> 00:04:06.132
และสุดท้ายถ้าเรารู้ว่าจุดศูนย์กลางอยู่ตรงไหน

00:04:06.200 --> 00:04:09.233
รัศมีอยู่ตรงไหน
เราสามารถ hard code เข้าไปได้

00:04:09.300 --> 00:04:11.833
ทำให้โค้ดมันสั้นลง ก็จะเหลือแค่นี้ครับ

00:04:11.900 --> 00:04:14.433
ฉะนั้นเนี่ยเราสามารถ represent วงกลมด้วย

00:04:14.500 --> 00:04:16.632
สูตรสั้นๆ แค่นี้ได้แล้วนะครับ

00:04:16.700 --> 00:04:18.832
ในเว็บของคุณ Inigo Quilez เนี่ย

00:04:18.899 --> 00:04:23.133
จะมีสูตรของ SDF ต่างๆ ให้ศึกษา
เยอะมากนะครับ

00:04:23.200 --> 00:04:25.633
ก็ลองไปศึกษากันได้นะครับ

00:04:25.700 --> 00:04:29.533
คราวนี้เนี่ยเรามี SDF แล้ว
เราเอาไปทำอะไรได้นะครับ

00:04:29.600 --> 00:04:33.633
สิ่งที่เราทำได้คือเราสามารถเช็คค่า SDF ณ จุดต่างๆ

00:04:33.700 --> 00:04:37.933
แล้วก็เอาระยะทางเนี่ยมา map เป็นสี

00:04:38.000 --> 00:04:40.633
พอ map เป็นสีแล้วก็ระบายสีลงไป

00:04:40.700 --> 00:04:44.332
ทำแบบเดียวกันกับทั้งภาพ
เราก็จะได้รูปวงกลมแบบนี้นะครับ

00:04:44.400 --> 00:04:47.533
ก็จะเห็นว่าโค้ดสั้นๆ แค่นี้
สามารถ present วงกลม

00:04:47.600 --> 00:04:51.433
ส่วนโค้ดตัวนี้เอาไว้คำนวณ
แปลงจาก distance กลายเป็นสี

00:04:51.500 --> 00:04:53.133
ด้วยความที่มันเป็นโค้ดเนี่ย

00:04:53.200 --> 00:04:57.133
เราก็สามารถปรับ shading ได้ตามใจ
ที่เราต้องการนะครับ

00:04:57.200 --> 00:05:00.133
คราวนี้ความเจ๋งต่อไปของ SDF คือ

00:05:00.200 --> 00:05:02.633
เราสามารถเอา SDF
มา compose กันได้นะครับ

00:05:02.700 --> 00:05:04.332
สมมุติว่าเรามีวงกลมสองวงนะ

00:05:04.400 --> 00:05:06.832
แต่ละวงกลมก็จะมี SDF ของมันเองนะ

00:05:06.900 --> 00:05:09.332
อันนี้คือระยะห่างจาก A ระยะห่างจาก B

00:05:09.400 --> 00:05:12.933
ถ้าเราเอาระยะห่างจาก A
และระยะห่างจาก B มา minimum กัน

00:05:13.000 --> 00:05:16.733
- คิดว่าเกิดอะไรขึ้นครับ?
- รวม?

00:05:16.800 --> 00:05:18.033
ใช่ครับ มันจะได้รูปนี้

00:05:18.100 --> 00:05:19.633
เหมือนกัน union เหมือนกัน

00:05:19.700 --> 00:05:21.533
เอารูปมา union กันนะครับ

00:05:21.600 --> 00:05:23.533
ก็จะได้รูปนี้ แล้วถ้าเอามา max กันล่ะ?

00:05:23.600 --> 00:05:27.633
- ตัดกัน
- มันก็จะได้รูปนี้ เหมือนเป็นการ intersect กันนะครับ

00:05:27.700 --> 00:05:31.933
ฉะนั้นเนี่ย จะเห็นว่า SDF ง่ายๆ
หลายๆ อันเนี่ย เอามารวมกัน

00:05:32.000 --> 00:05:33.533
ด้วย operation ง่ายๆ

00:05:33.600 --> 00:05:34.332
มันสร้างรูป

00:05:34.400 --> 00:05:35.233
ได้เยอะมากเลย

00:05:35.300 --> 00:05:37.433
เช่น ถ้าเอา SDF มาติดลบ

00:05:37.500 --> 00:05:40.832
ก็จะเหมือนกลับข้างในเป็นข้างนอก
ข้างนอกเป็นข้างใน

00:05:40.900 --> 00:05:43.533
พอเราเอามาติดลบแล้วเอามา max กัน

00:05:43.600 --> 00:05:48.233
ก็จะได้รูปนี้ เหมือนเอาเฉพาะ area
ที่อยู่ใน A แต่ไม่อยู่ใน B

00:05:48.300 --> 00:05:50.933
ทำกับอีกด้านนึงแล้วเอามารวมกันก็จะได้รูปนี้

00:05:51.000 --> 00:05:51.933
อ่า

00:05:52.000 --> 00:05:55.633
เอาตัวเลขมาลบออก มันจะทำให้รูปกว้างขึ้น

00:05:56.700 --> 00:05:58.533
เอาตัวเลขมาบวกเข้าไปเนี่ย

00:05:58.600 --> 00:06:00.633
มันจะทำให้รูปเล็กลง

00:06:00.700 --> 00:06:03.832
แล้วก็ตามเน็ตเนี่ย มันจะมีฟังก์ชัน

00:06:03.900 --> 00:06:05.533
ภาษา GLSL ให้เราไป

00:06:05.600 --> 00:06:06.233
โหลดใช้ได้เยอะ

00:06:06.300 --> 00:06:08.733
มากเลยครับ อย่างเช่นฟังก์ชัน smoothMin เนี่ย

00:06:08.800 --> 00:06:09.832
เป็นฟังก์ชันง่ายๆ

00:06:09.900 --> 00:06:13.033
ที่ทำหน้าที่คล้ายๆ ฟังก์ชัน min
แต่ว่าเวลาเอามาใช้กับ

00:06:13.100 --> 00:06:15.633
SDF เนี่ย ตอนที่ขอบมัน

00:06:15.700 --> 00:06:16.733
จะรวมกันน่ะ

00:06:16.800 --> 00:06:20.133
มันดูสวยขึ้นน่ะ มันดูมนๆ ขึ้นเนาะ ถ้าเรา

00:06:20.200 --> 00:06:21.533
เอา SDF

00:06:21.600 --> 00:06:22.533
มา absolute

00:06:22.600 --> 00:06:24.033
แล้วก็ลบตัวเลขออก

00:06:24.100 --> 00:06:26.832
จากรูปทึบมันจะกลายเป็น outline นะครับ

00:06:26.900 --> 00:06:29.233
เอาเป็นว่าทำได้หลายอย่างมากๆ เลยครับ

00:06:29.300 --> 00:06:30.033
จากรูป

00:06:30.100 --> 00:06:35.033
ง่ายๆ เล็กๆ นะครับ แล้วก็อย่างที่บอก
พอเรามี distance เนี่ย เราสามารถเอามาทำเป็น

00:06:35.100 --> 00:06:37.133
ระบายสีได้

00:06:37.200 --> 00:06:38.233
ฉะนั้นเดี๋ยวเรามา

00:06:38.300 --> 00:06:40.133
วาดรูปนี้กันนะครับ

00:06:40.200 --> 00:06:42.433
ผมเริ่มจากวงกลมเล็กๆ อันนี้ก่อน

00:06:42.500 --> 00:06:44.733
แล้วก็วงกลมใหญ่ๆ ชื่อว่า B เนาะ

00:06:44.800 --> 00:06:46.533
เสร็จแล้วผมมีแท่ง

00:06:46.600 --> 00:06:49.433
แท่งแนวตั้งเนี่ย ชื่อว่า C
แท่งแนวนอนชื่อว่า D

00:06:49.500 --> 00:06:51.933
เสร็จแล้วผมเอามา max กัน เกิดอะไรขึ้นครับ

00:06:54.200 --> 00:06:56.933
max กันกลายเป็นสี่เหลี่ยม

00:06:57.000 --> 00:06:58.332
กลายเป็นสี่เหลี่ยม

00:06:58.400 --> 00:06:59.033
เหลือรูปนี้

00:06:59.100 --> 00:07:02.033
เสร็จแล้วผมเอา E มา min กับ B

00:07:02.100 --> 00:07:03.633
ก็กลายเป็นรูปนี้

00:07:03.700 --> 00:07:08.332
เสร็จแล้วผมสร้างวงกลมอีกรูปนึง
แต่ว่าเอาเฉพาะพื้นที่ข้างนอก

00:07:08.400 --> 00:07:10.033
แล้วเอามาตัดกับรูปนี้

00:07:10.100 --> 00:07:12.533
ตัว F เนี่ย ก็จะเหลือตัวนี้

00:07:12.600 --> 00:07:17.332
สุดท้ายผมเอาตัว H เนี่ยมา min กับตัว A

00:07:17.400 --> 00:07:19.033
ก็จะได้รูปนี้ครับ

00:07:19.100 --> 00:07:22.832
คราวนี้ความเจ๋งอย่างถัดไปของ SDF นะครับคือ

00:07:22.900 --> 00:07:26.233
เราสามารถแก้ไขรูปโดยการปรับเปลี่ยนระบบพิกัดครับ

00:07:26.300 --> 00:07:30.533
จะเห็นโค้ดตรงนี้ที่ผมคอมเมนต์ไว้นะ p = abs(p)

00:07:30.600 --> 00:07:34.033
การที่เราเอา p มา absolute p = abs(p) เนี่ย

00:07:34.100 --> 00:07:35.233
การ absolute เกิดอะไรขึ้น

00:07:35.300 --> 00:07:38.332
คือระบบพิกัดที่-
พิกัดที่มันอยู่ตำแหน่งลบเนี่ย

00:07:38.400 --> 00:07:40.633
มันจะกลายเป็นภาพสะท้อนของตำแหน่งบวก

00:07:40.700 --> 00:07:43.633
สิ่งที่เกิดขึ้นคือกลายเป็นแบบนี้ครับ

00:07:43.700 --> 00:07:46.933
อย่างต่อไปคือการ modulo นะครับ

00:07:47.000 --> 00:07:51.933
การ modulo คือพิกัดที่มันเลยตัว divisor

00:07:52.000 --> 00:07:54.033
ผมจำไม่ได้ว่าเรียกว่าชื่อว่าอะไร

00:07:54.100 --> 00:07:56.433
แต่ว่ามันจะ wrap กลับไปข้างล่าง

00:07:56.500 --> 00:07:58.533
มันก็จะทำให้ pattern repeat

00:07:58.600 --> 00:08:06.133
สุดท้ายผมก็- อีกรูปนึงก็คือ
ตัวนี้ผมพลิกระบบพิกัด

00:08:06.200 --> 00:08:09.533
ให้มันเป็นแนวทะแยงก็จะได้รูปนี้นะครับ

00:08:09.600 --> 00:08:12.433
แล้วก็ปรับเฉดสีก็จะเป็นแบบนี้

00:08:12.500 --> 00:08:16.733
คราวนี้ก็เหลือแค่ inline โค้ดทั้งหมดเข้าไป

00:08:16.800 --> 00:08:23.533
มันก็จะเป็นแบบนี้

00:08:23.600 --> 00:08:27.733
เหลือแค่นี้
โอเค ใกล้หมดเวลาแล้วนะครับ

00:08:27.800 --> 00:08:31.933
นอกจาก 2 มิติ นะ SDF เนี่ย
สามารถใช้วาดรูป 3 มิติด้วย

00:08:32.000 --> 00:08:35.732
แต่ผมยังทำไม่เป็นเนาะ
แต่ว่าบนเว็บของคุณ Inigo Quilez

00:08:35.799 --> 00:08:40.232
เหมือนเดิมเนี่ย เขามีเว็บ
รวมสูตร SDF 3 มิติ ไปให้ศึกษากัน

00:08:40.299 --> 00:08:44.433
จริงๆ เนี่ยไอ้นี่ผมยกมาให้ดู
แค่นิดหน่อยนะ แต่ว่าเว็บของเขาเนี่ย

00:08:44.500 --> 00:08:47.833
คือแบบยาวมากๆ
มีสูตร SDF ต่างๆ เต็มไปหมดเลย

00:08:47.900 --> 00:08:51.933
ผมยังทำแบบที่เขาทำไม่เป็นนะ
แต่ว่าผมมี channel YouTube

00:08:52.000 --> 00:08:55.333
อะไรต่างๆ มาแนะนำ
ให้ลองไปศึกษาดูนะครับ ถ้าสนใจ

00:08:55.400 --> 00:08:59.733
channel แรกชื่อ SimonDev นะครับ
เขาจะสอนการทำเทคนิค

00:08:59.800 --> 00:09:04.333
ray marching แล้วก็ใช้ SDF เนี่ย
ในการวาดรูปด้วย math

00:09:04.400 --> 00:09:09.533
จะเห็นว่า SDF เนี่ยสามารถเรนเดอร์
พวกเงา สามารถเรนเดอร์

00:09:09.600 --> 00:09:13.033
พวก shading คำนวณแสงและเงาได้นะครับ

00:09:13.100 --> 00:09:16.633
อีก channel นึงคือ channel
Code Parade นะครับ เอา SDF

00:09:16.700 --> 00:09:20.033
เนี่ยแล้วก็ ray marching เนี่ย
มาสร้างเป็น fractal 3 มิติ

00:09:20.100 --> 00:09:23.733
สุดท้ายนะครับ Inigo Quilez
คนเดิมนะครับ คือ โหดมากๆ

00:09:23.800 --> 00:09:27.233
เขาสร้างภาพคน สร้างภาพวิวทิวทัศน์
สร้างภาพต่างๆ

00:09:27.300 --> 00:09:30.133
ด้วยเทคนิคพวกนี้
ทุกอย่างทำด้วยสูตรคณิตศาสตร์

00:09:30.200 --> 00:09:33.633
ไม่ใช้ไฟล์โมเดล ไม่ใช้ไฟล์ texture เลยนะครับ
มีโค้ดให้ศึกษาด้วย

00:09:33.700 --> 00:09:37.833
เดี๋ยวลองไปดูกันได้นะครับ
คุณ Inigo Quilez เขาทำเว็บเนี่ยครับ

00:09:37.900 --> 00:09:41.733
ชื่อ ShaderToy เนาะ ก็เข้าไปที่เว็บเนี้ย
แล้วก็ลองกดดูรูปต่างๆ

00:09:41.800 --> 00:09:44.333
เราจะเห็น source code นะครับ
แล้วลองไปแก้ source code

00:09:44.400 --> 00:09:48.733
ดูว่ามันมีผลกับรูปยังไงนะครับ
ก็เอาไว้ให้ศึกษาทำความเข้าใจ

00:09:48.800 --> 00:09:50.133
กับ SDF ได้นะครับ

00:09:50.200 --> 00:09:54.033
สุดท้ายก็จะมี hashtag ชื่อ
つぶやきGLSL นะครับ

00:09:54.100 --> 00:09:57.433
ที่คนใน Twitter เนี่ยก็จะมาโชว์พาวกัน
ว่าเขาสามารถสร้างรูป

00:09:57.500 --> 00:10:02.033
อะไรได้บ้าง โดยใช้โค้ด GLSL แค่ 1 ทวีตนะครับ

00:10:02.100 --> 00:10:06.833
ก็ผลงานเจ๋งเยอะมากนะครับ
ก็ลองเข้าไปดูใน hashtag นี้นะครับ

00:10:06.900 --> 00:10:11.833
พวกลิงก์ต่างๆ เกี่ยวกับ talk นี้นะครับ
ผมจะใส่ไว้ที่ URL นี้นะครับ

00:10:11.900 --> 00:10:16.933
โอเคครับ ก็เนื้อหาที่จะแชร์
ก็มีประมาณนี้ครับ ขอบคุณมากครับ
