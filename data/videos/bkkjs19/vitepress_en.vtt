WEBVTT - Generated by https://github.com/dtinth/subtitles

00:00:00.000 --> 00:00:03.353
HOST: This brings us to the next session…

00:00:03.620 --> 00:00:07.703
This next session is about creating
beautiful knowledge-oriented websites

00:00:07.930 --> 00:00:10.643
using a tool called VitePress.

00:00:14.000 --> 00:00:17.513
I think our speakers are ready.

00:00:17.780 --> 00:00:19.703
Let us welcome Thai to the stage.

00:00:20.790 --> 00:00:21.933
THAI: Ok.

00:00:24.500 --> 00:00:27.703
THAI: I’m excited, I’ve never been
on this stage at Siam Paragon.

00:00:27.970 --> 00:00:29.833
Anyways, let’s start!

00:00:30.060 --> 00:00:33.773
Hello everyone, my name is Thai.

00:00:34.000 --> 00:00:36.743
I’m a software engineer at Eventpop.

00:00:37.000 --> 00:00:39.933
In this short session,
I will introduce you a tool.

00:00:40.190 --> 00:00:45.743
When I build web applications,
I often use different frameworks,

00:00:46.000 --> 00:00:48.323
such as, Remix, Astro or Next.js.

00:00:48.590 --> 00:00:51.763
The choice of framework
depends on various factors.

00:00:52.000 --> 00:00:55.793
But when I build a website that is
more content-oriented,

00:00:56.000 --> 00:01:01.933
no matter the subject,
VitePress would be my first pick.

00:01:02.000 --> 00:01:07.133
Let me explain: most technologies,
languages, and frameworks each have

00:01:07.400 --> 00:01:11.883
their own “static site generator,” a tool
designed for making documentation

00:01:12.150 --> 00:01:13.933
or knowledge-based websites.

00:01:14.000 --> 00:01:17.933
In the React world, there’s
Docusaurus and Nextra.

00:01:18.000 --> 00:01:19.933
In Astro, there’s Starlight.

00:01:20.000 --> 00:01:21.933
And if you use other languages
(e.g. Go, Python, Rust),

00:01:22.000 --> 00:01:24.613
each language will have its own tool,

00:01:24.680 --> 00:01:27.933
and they produce websites
that look differently.

00:01:28.000 --> 00:01:30.303
But for today,
I will talk about VitePress,

00:01:30.370 --> 00:01:34.933
which is a static site generator
that is based on Vue.js.

00:01:35.000 --> 00:01:39.933
I want to share this because I have tried
using many static site generators,

00:01:40.000 --> 00:01:42.933
and I think VitePress
is currently my favorite,

00:01:43.000 --> 00:01:47.933
I say this both as a web developer,
and as a user who consumes contents.

00:01:48.000 --> 00:01:52.933
Currently, I am maintaining 4 websites
that are all built with VitePress.

00:01:53.000 --> 00:01:57.933
wonderful.software, a Thai website
about software engineering.

00:01:58.000 --> 00:02:00.933
Fresh App Factory, an open source project.

00:02:01.000 --> 00:02:04.503
showdown.space hosts
recreational tech contests.

00:02:04.570 --> 00:02:07.933
When we announce a new event
or share the results of past events,

00:02:08.000 --> 00:02:09.933
they will be posted on this website.

00:02:10.000 --> 00:02:15.933
And mjth.live, an online community
where people play music together

00:02:16.000 --> 00:02:17.933
using a software called Jamulus.

00:02:18.000 --> 00:02:20.473
These site are all built with VitePress.

00:02:20.540 --> 00:02:22.933
Let’s look at websites that
others have created.

00:02:23.000 --> 00:02:28.933
Rollup.js, Elysia.js, D3.js, Hono —

00:02:29.000 --> 00:02:34.933
These projects have nothing to do
with Vue.js, yet they use VitePress.

00:02:35.000 --> 00:02:40.933
What makes me like VitePress so much
is its default theme.

00:02:41.000 --> 00:02:43.933
Although these sites looks similar,

00:02:44.000 --> 00:02:48.933
every website can be customized
to have its own identity.

00:02:50.000 --> 00:02:53.933
Let’s first look at VitePress
from a user’s POV.

00:02:54.000 --> 00:02:57.933
In sites built with VitePress,
at the top left is a search bar.

00:02:58.000 --> 00:02:59.623
Cmd+K activates it.

00:02:59.690 --> 00:03:04.933
It doesn’t matter where you are, you can
press Cmd+K to go to the page you want.

00:03:05.000 --> 00:03:09.933
It also shows the preview of the page
in the search results.

00:03:10.000 --> 00:03:12.933
The sidebar is on the left side.

00:03:13.000 --> 00:03:18.933
And on the right, is the outline
that shows what is in this page.

00:03:19.000 --> 00:03:21.933
Its layout is pretty user-friendly.

00:03:22.000 --> 00:03:24.933
At the top, you can see
the navigation bar

00:03:25.000 --> 00:03:28.933
in which some items
can have its own menu.

00:03:29.000 --> 00:03:34.933
And I think VitePress’s default theme
has a lot of attention to detail.

00:03:35.000 --> 00:03:38.933
Here, the popup menu is divided
into two subsections.

00:03:39.000 --> 00:03:43.933
And if the menu is too long,
it is scrollable.

00:03:44.000 --> 00:03:47.433
(In some themes that don’t have
this much attention to detail,

00:03:47.700 --> 00:03:52.933
when a menu is too long, it might
overflow and become unusable.)

00:03:54.000 --> 00:03:56.933
At the top right corner,
you will see social icons.

00:03:57.000 --> 00:04:00.933
And at the end of the page, there are
links to the next and previous pages.

00:04:01.000 --> 00:04:03.933
It’s very easy to use.

00:04:04.000 --> 00:04:06.933
In the website contents,
you can add callouts and alerts,

00:04:07.000 --> 00:04:09.933
such as tips and warnings.

00:04:10.000 --> 00:04:16.933
You can hide some contents in a details
block, which can be expanded,

00:04:17.000 --> 00:04:19.933
so our webpage isn’t too long.

00:04:20.000 --> 00:04:25.933
We can also use group
code blocks into tabs.

00:04:26.000 --> 00:04:32.933
We can highlight some lines
to make them more prominent,

00:04:33.000 --> 00:04:39.933
or blur some lines that are irrelevant.

00:04:40.000 --> 00:04:43.933
These features are built into VitePress.

00:04:44.000 --> 00:04:45.933
It’s really comprehensive.

00:04:46.000 --> 00:04:52.933
And I think VitePress sites is one of the
best in class at responsive design.

00:04:53.000 --> 00:04:54.933
Let’s look at the example.

00:04:55.000 --> 00:04:56.933
I will show you.

00:05:02.000 --> 00:05:03.933
This is showdown.space.

00:05:04.000 --> 00:05:08.933
On desktop, you see all the components.

00:05:09.000 --> 00:05:10.933
Now I will make the viewport smaller.

00:05:11.000 --> 00:05:14.933
The social icons are now
hidden inside this ellipsis.

00:05:15.000 --> 00:05:20.933
And the outlines on the right
is now shown here instead.

00:05:21.000 --> 00:05:22.933
If we make it smaller,

00:05:23.000 --> 00:05:25.933
the left menu becomes a drawer,

00:05:26.000 --> 00:05:29.933
and the outline button moves to the right,

00:05:30.000 --> 00:05:32.933
making more efficient use
of screen real estate.

00:05:33.000 --> 00:05:34.513
And if we make it smaller,

00:05:34.580 --> 00:05:36.933
the search bar becomes a
button at the top right,

00:05:37.000 --> 00:05:40.933
and the nav bar becomes a hamburger menu.

00:05:41.000 --> 00:05:43.933
And it’s like, look at the animation.

00:05:44.000 --> 00:05:47.933
Lots of care put into it.

00:05:48.000 --> 00:05:49.933
Let’s go back to the slide.

00:05:50.000 --> 00:05:55.933
So, I think VitePress is great for users,

00:05:56.000 --> 00:05:59.223
While sites built with VitePress kinda
look similar to each other,

00:05:59.290 --> 00:06:04.143
it brings familiarity — I feel right
at home whever I use a VitePress site.

00:06:04.220 --> 00:06:08.933
So if a project uses VitePress
for its docs, I feel very happy.

00:06:09.000 --> 00:06:13.933
Because I know that if I have to read its
docs, I know how to navigate it very well.

00:06:14.000 --> 00:06:17.673
Now, let’s look at it from
a developer’s POV.

00:06:17.740 --> 00:06:19.303
It’s easy to get started,

00:06:19.370 --> 00:06:22.933
whether you have an existing project
and want to add documentation to it,

00:06:23.000 --> 00:06:24.933
or you’re starting a new web project.

00:06:25.000 --> 00:06:26.933
Just use these two commands.

00:06:27.000 --> 00:06:29.933
When you run the commands,
it’ll create various files.

00:06:30.000 --> 00:06:33.933
Content goes in a folder called “docs”.

00:06:34.000 --> 00:06:40.933
and the config files go into the
“.vitepress” folder inside “docs”.

00:06:41.000 --> 00:06:44.933
This is so that the files related
to docs don’t clutter your project.

00:06:45.000 --> 00:06:46.933
I think this is very well-designed.

00:06:47.000 --> 00:06:49.933
The default theme is very extensible.

00:06:50.000 --> 00:06:54.933
Some tools I used in the past come
with themes that are hard to extend.

00:06:55.000 --> 00:06:58.933
I’d have to fork the theme
if I wanted to modify it,

00:06:59.000 --> 00:07:01.023
and keep it up-to-date with the upstream.

00:07:01.090 --> 00:07:02.933
This sometimes lead to merge conflicts.

00:07:03.000 --> 00:07:07.933
But VitePress’s default theme
allows for easy customization.

00:07:08.000 --> 00:07:09.933
So, for this session,

00:07:10.000 --> 00:07:13.933
I’ll skip setting up VitePress.

00:07:14.000 --> 00:07:15.933
You can read the docs for that.

00:07:16.000 --> 00:07:16.933
But in this session,

00:07:17.000 --> 00:07:21.933
Instead, I’ll show you some websites
I’ve made using VitePress

00:07:22.000 --> 00:07:23.933
and the techniques I used.

00:07:24.000 --> 00:07:26.933
Let’s start simple: Color theme

00:07:27.000 --> 00:07:31.133
Every site has its own visual identity,
its own color scheme, right?

00:07:31.200 --> 00:07:33.933
In VitePress, you can customize
the site’s color palette.

00:07:34.000 --> 00:07:35.933
There are two main steps.

00:07:36.000 --> 00:07:43.933
First, choose a base theme,
either a light or a dark one,

00:07:44.000 --> 00:07:46.933
and set it in the config file.

00:07:47.000 --> 00:07:49.933
Second, tweak individual colors.

00:07:50.000 --> 00:07:55.933
Both light and dark themes
use CSS variables to style colors,

00:07:56.000 --> 00:08:02.063
You can customize any color
in the color palette.

00:08:02.130 --> 00:08:03.933
Pretty straightforward.

00:08:04.000 --> 00:08:08.933
Next up: Custom components
(or interactive components)

00:08:09.000 --> 00:08:16.343
In this example (MJTH.live),
this statistics page shows a chart.

00:08:16.420 --> 00:08:18.443
Here, on wonderful.software,

00:08:18.510 --> 00:08:23.933
some pages have a small image on the left,
with an explanation on the right.

00:08:24.000 --> 00:08:29.563
Other pages have JavaScript console
examples, with user input and output,

00:08:29.630 --> 00:08:32.403
as well as interactive exercises
right on the web page.

00:08:32.470 --> 00:08:35.933
You type in an answer,
and it checks it right there.

00:08:37.000 --> 00:08:42.933
For these, I used a VitePress feature
called “Vue in Markdown”.

00:08:43.000 --> 00:08:44.933
Let’s look at some examples.

00:08:45.000 --> 00:08:48.703
For instance, this component
is called “MonthlyTable”

00:08:48.770 --> 00:08:51.933
(bad name, I know, I wasn’t
thinking clearly when I named it).

00:08:52.000 --> 00:08:53.933
Let’s take a look at the code.

00:08:54.000 --> 00:08:57.933
This file, <i>index.md</i>,
is a regular Markdown file.

00:08:58.000 --> 00:09:01.933
Inside it, you’ll find regular
Markdown code like this,

00:09:02.000 --> 00:09:04.933
which creates a heading using <i>##</i>.

00:09:05.000 --> 00:09:10.933
In VitePress Markdown files,
we can use <i><script setup></i>,

00:09:11.000 --> 00:09:12.933
which is Vue.js syntax.

00:09:13.000 --> 00:09:17.933
We can also import JSON files
and Vue components (<i>.vue files</i>)

00:09:18.000 --> 00:09:20.933
and use them in our Markdown.

00:09:21.000 --> 00:09:24.933
This gives us a result like this.

00:09:25.000 --> 00:09:28.933
Or take this exercise, for example.

00:09:29.000 --> 00:09:32.933
As before, import the component
and use them in Markdown.

00:09:33.000 --> 00:09:37.933
But this time, we send data from
<i>$frontmatter</i> into the component.

00:09:38.000 --> 00:09:41.933
The front matter can be written
in YAML inside the Markdown file.

00:09:42.000 --> 00:09:47.033
This lets you send objects,
arrays, or other structured data

00:09:47.100 --> 00:09:49.933
to the component in the Markdown file.

00:09:50.000 --> 00:09:53.933
This keeps the component’s code
more readable.

00:09:54.000 --> 00:10:00.203
Alternatively, you can write JavaScript
in the <i><script setup></i> block

00:10:00.270 --> 00:10:02.933
and use that in the component.

00:10:03.000 --> 00:10:08.933
Some may wonder what this site is.
It’s like an online lesson or something?

00:10:09.000 --> 00:10:12.933
Let me announce it here — I’m working on
a beginner JavaScript course!

00:10:13.000 --> 00:10:16.503
I’ve wanted to create an online
lesson since I registered

00:10:16.570 --> 00:10:18.933
the wonderful.software domain
back in 2015,

00:10:19.000 --> 00:10:23.933
But I never got around to it.
Then, late last year, I finally started.

00:10:24.000 --> 00:10:29.933
I want this site to introduce people
to the world of building software.

00:10:30.000 --> 00:10:34.933
Programming gives us a kind of magic
in the realm of computers.

00:10:35.000 --> 00:10:36.933
We can make things happen.

00:10:37.000 --> 00:10:38.933
I’ve recently started on this journey.

00:10:39.000 --> 00:10:43.933
You can read it for free at
wonderful.software/js.

00:10:44.000 --> 00:10:47.933
It’s still a work in progress.

00:10:48.000 --> 00:10:51.933
I’m also working on
a video course with Skooldio.

00:10:52.000 --> 00:10:55.303
Skooldio helped me design
and produce the course,

00:10:55.370 --> 00:10:59.933
as well as providing early feedback
from their learners. Also WIP.

00:11:00.000 --> 00:11:02.933
I’ll share the news once we launch it.

00:11:03.000 --> 00:11:04.933
Now, let’s get back to VitePress.

00:11:05.000 --> 00:11:09.933
In the course, I’ve added a feedback form
at the end of each page,

00:11:10.000 --> 00:11:12.173
so people can leave feedback as they go.

00:11:12.240 --> 00:11:14.933
There’s also a comments
section at the bottom.

00:11:15.000 --> 00:11:18.393
These features aren’t
built-in to VitePress.

00:11:21.100 --> 00:11:25.263
If you go to wonderful.software/js,
and have any comment,

00:11:25.330 --> 00:11:27.933
feel free to provide feedback
with these buttons.

00:11:28.000 --> 00:11:31.933
Let’s see how I implemented
these two components.

00:11:32.000 --> 00:11:34.933
I used a feature called
“Layout Slots”.

00:11:35.000 --> 00:11:37.933
The default theme offers several slots,

00:11:38.000 --> 00:11:40.933
such as “#doc-footer-before”
and “#doc-after”.

00:11:41.000 --> 00:11:46.933
These slots allow you to insert
components into the layout.

00:11:47.000 --> 00:11:49.933
For example, the “#doc-footer-before”
slot will appear here —

00:11:50.000 --> 00:11:53.933
at the end of the page, but before
the next and previous links.

00:11:54.000 --> 00:11:56.933
while “#doc-after” will appear
after these links.

00:11:57.000 --> 00:12:01.283
The “#doc-before” slot shows up
at the top of the page.

00:12:01.350 --> 00:12:04.933
I use it to indicate
that this webpage is still WIP.

00:12:05.000 --> 00:12:08.933
Here’s the implementation:

00:12:09.000 --> 00:12:10.933
We import the necessary variables.

00:12:11.000 --> 00:12:13.933
(Check out the docs on layout slots
for more details.)

00:12:14.000 --> 00:12:16.933
Here’s how to use layout slots:

00:12:17.000 --> 00:12:20.933
<template #slot-name>.

00:12:21.940 --> 00:12:25.933
I used <i>v-if</i> to check the frontmatter
to see if the page is a draft.

00:12:26.000 --> 00:12:29.933
When <i>draft</i> is set to <i>true</i>,
this message appears.

00:12:30.000 --> 00:12:34.933
As you can see, the API we’ve
got here is remarkably flexible.

00:12:35.000 --> 00:12:38.423
The default theme provides
30 layout slots for your use.

00:12:38.490 --> 00:12:41.933
In other words, you can insert anything
you want in 30 different places.

00:12:42.000 --> 00:12:48.933
The last topic I’ll cover today
is typography,

00:12:49.000 --> 00:12:59.573
I’m not much of a designer, so VitePress’s
default theme was a big help to me.

00:12:59.640 --> 00:13:06.933
It comes with sensible defaults
that make text easy to read,

00:13:07.000 --> 00:13:13.933
And I simply changed the font
and font size to my liking.

00:13:14.000 --> 00:13:19.933
This was just a matter of adding CSS.

00:13:20.000 --> 00:13:27.333
There’s one more advanced feature
that I used that’s particularly useful

00:13:27.400 --> 00:13:32.933
for creating content in Thai.

00:13:33.000 --> 00:13:34.933
It’s about spacing.

00:13:35.000 --> 00:13:38.933
If you’ve read documentation
related to Thai language,

00:13:39.000 --> 00:13:41.933
you might find that there are
two types of spaces in Thai:

00:13:42.000 --> 00:13:43.933
small space and big space.

00:13:44.000 --> 00:13:49.933
This website contains a lot of
Thai and English text mixed together,

00:13:50.000 --> 00:13:53.933
and moreover, in Thai, we don’t usually
use a period at the end of sentences.

00:13:54.000 --> 00:13:59.163
If I used small spaces to link sentences,
the text might look cluttered,

00:13:59.230 --> 00:14:02.933
so I decided to use big spaces
to improve readability.

00:14:03.000 --> 00:14:07.623
Also, in Thai, the “ๆ” sign is supposed
to have a space before it

00:14:07.690 --> 00:14:09.933
according to the official rules.

00:14:10.000 --> 00:14:11.933
In practice, though,
people tend not to use it.

00:14:12.000 --> 00:14:12.933
Why?

00:14:13.000 --> 00:14:14.933
Well, if we add a space here,

00:14:15.000 --> 00:14:19.933
the browser might wrap lines
before the “ๆ” sign,

00:14:20.000 --> 00:14:21.933
which doesn’t look very good.

00:14:22.000 --> 00:14:28.933
I solved these issues by customizing
Markdown rendering in VitePress.

00:14:29.000 --> 00:14:34.933
VitePress uses the “markdown-it” library
to convert Markdown to HTML,

00:14:35.000 --> 00:14:37.933
and we can customize many
aspects of its behavior.

00:14:39.000 --> 00:14:46.933
I created a plugin to make newlines in
Markdown render as big spaces.

00:14:47.000 --> 00:14:50.933
For “ๆ” signs, I don’t put a space
before them in the Markdown file,

00:14:51.000 --> 00:14:56.933
But when rendered, the “ๆ” sign will be
wrapped in a <i><span class=“ๆ”></i>.

00:14:57.000 --> 00:14:59.933
This makes the rendered
HTML look like this.

00:15:00.000 --> 00:15:04.633
Finally, I added some margin
to these spans using CSS.

00:15:04.700 --> 00:15:07.933
As you can see, this approach
allows for a lot of customization.

00:15:08.000 --> 00:15:13.493
There’s a lot more that you can do,
but I don’t have time to cover it all.

00:15:13.560 --> 00:15:17.063
If you’re interested, you can check
the source code of these websites;

00:15:17.130 --> 00:15:18.933
they are open source.

00:15:19.000 --> 00:15:24.933
In summary, I think VitePress
is a really well-designed tool.

00:15:25.000 --> 00:15:30.933
Since it’s open source, we can look
at its code and learn the techniques used

00:15:31.000 --> 00:15:33.933
to achieve its great quality.

00:15:34.000 --> 00:15:38.933
I believe that studying the code of
well-designed open source software

00:15:39.000 --> 00:15:41.933
can help us become better
software designers ourselves.

00:15:42.000 --> 00:15:47.933
Just like artists study the works
of other great artists

00:15:48.000 --> 00:15:50.873
to expand their horizons.

00:15:50.940 --> 00:15:52.653
This concept isn’t new, of course.

00:15:52.720 --> 00:15:56.243
There’s a book called “The Architecture
of Open Source Applications”

00:15:56.310 --> 00:15:57.933
which has been around for years.

00:15:58.000 --> 00:16:00.873
It takes insights from popular
open source software

00:16:00.940 --> 00:16:03.933
and gives you ideas that you
can apply to your own work.

00:16:04.000 --> 00:16:07.023
Every chapter of this book
is available for free online.

00:16:07.090 --> 00:16:11.933
You can either read it on their website
or buy a printed copy.

00:16:12.000 --> 00:16:17.473
That’s all I have to share with you today.

00:16:17.540 --> 00:16:19.933
Thank you!

00:16:21.640 --> 00:16:23.933
HOST: Thank you Thai.

00:16:24.000 --> 00:16:29.933
If you’re interested, feel free to go
and experiment with VitePress at home.
