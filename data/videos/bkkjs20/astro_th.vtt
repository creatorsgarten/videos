WEBVTT

00:00:01.600 --> 00:00:02.400
ฮัลโหล 1 2 โอเค

00:00:02.900 --> 00:00:03.700
สวัสดีทุกท่านนะครับ สวัสดีครับ

00:00:03.700 --> 00:00:07.000
มีหลายคนคุ้นหน้าคุ้นตานะครับ

00:00:08.000 --> 00:00:11.200
แต่ว่าจริงๆ เหมือนกับว่าก่อนหน้านี้ผมก็

00:00:11.400 --> 00:00:13.000
ไม่ค่อยออกตัวว่าใช้ JavaScript นะ

00:00:13.000 --> 00:00:15.800
ก็มีทำโปรเจคให้มาหลายปีแล้วเหมือนกัน

00:00:16.000 --> 00:00:17.300
ส่วนใหญ่อยู่เบื้องหลังนะครับ

00:00:17.400 --> 00:00:20.800
แล้วก็รู้สึกว่าเราก็ไม่ค่อยรู้เรื่องอะไรนะครับ

00:00:20.900 --> 00:00:22.100
เพราะเราไม่ค่อยรู้เรื่องเราก็เลย เอ๊ะ

00:00:22.100 --> 00:00:25.200
เราก็ไม่ได้แบบว่ามาพูดมาอะไรด้วยนะครับ

00:00:25.600 --> 00:00:27.900
ทีนี้ด้วยความไม่รู้เรื่องเนี่ยนะครับ

00:00:28.100 --> 00:00:31.000
ผมก็เลยรู้สึกว่า ถ้ามีใครที่แบบ

00:00:31.300 --> 00:00:34.500
ยัง basic ไม่เยอะก็อาจจะฟังไปทันด้วยกันนะครับ

00:00:34.700 --> 00:00:37.200
ใคร basic เยอะก็อาจจะถือว่าเป็นช่วงเกริ่นแล้วกันเนาะ

00:00:37.400 --> 00:00:39.100
ก็ยังไม่ได้ลงลึกมากแล้วก็

00:00:40.100 --> 00:00:42.500
เป็นเรื่องที่แบบผมรู้สึกว่าคนที่เปลี่ยนจาก

00:00:42.700 --> 00:00:44.300
การทำเว็บแบบเก่าเนี่ย

00:00:44.300 --> 00:00:46.300
แล้วก็มาทำเว็บด้วย JavaScript เนี่ย

00:00:46.600 --> 00:00:48.000
Astro นี้จะแบบสุดยอดเลย

00:00:48.100 --> 00:00:49.900
จะรู้สึกเข้ามือมากนะครับ

00:00:51.100 --> 00:00:54.800
โอเค ก็เลยตั้งชื่อนะครับ framework น้องใหม่ครับ

00:00:54.800 --> 00:00:57.700
คำว่าน้องใหม่ตอนนี้มันก็หลายปีแล้วนะครับ

00:00:57.800 --> 00:01:00.700
หลายๆ ที่เขาให้เป็น production แบบใช้งานได้ได้นะครับ

00:01:00.900 --> 00:01:03.000
ผมเอง production มา 2 ปีด้วย

00:01:03.200 --> 00:01:06.300
ด้วยโหลดที่แบบว่าวันละสักล้าน visit อย่างเงี้ย

00:01:06.400 --> 00:01:07.600
ก็สบายๆ นะครับ

00:01:07.600 --> 00:01:09.900
เพราะฉะนั้นผมรู้สึกว่ามันเขียนว่าน้องใหม่

00:01:10.300 --> 00:01:11.800
แต่ว่ามันมัน stable มากๆ นะครับ

00:01:14.100 --> 00:01:16.100
โทษที พอดีรีบมานิดนึงอ่ะ

00:01:16.100 --> 00:01:17.800
โอเค งั้นเดี๋ยวเราเริ่มกันเลยนะครับ

00:01:17.800 --> 00:01:19.900
แนะนำตัวนะครับ ผมชื่อเม่นนะครับ

00:01:20.100 --> 00:01:21.200
จักรกฤษณ์ ตาฬวัฒน์ นะครับ

00:01:21.400 --> 00:01:26.100
ก็ก่อนหน้านี้ก็ทำ digital agency นะครับ

00:01:26.100 --> 00:01:26.900
อยู่ในกรุงเทพ

00:01:27.000 --> 00:01:30.000
แล้วก็สัก 10 กว่าปีที่แล้วก็ย้ายไปปายนะครับ

00:01:30.200 --> 00:01:32.500
แล้วก็ไปทำโปรเจคทำนู่นทำนี่

00:01:32.700 --> 00:01:33.900
สอนเด็กสอนอะไรนะครับ

00:01:35.700 --> 00:01:39.400
แล้วก็มีทำเป็น Muse foundation ที่เป็น

00:01:39.500 --> 00:01:42.900
coworking space กับพี่ฮั้นท์ น้องฮั้นท์นะครับ

00:01:43.100 --> 00:01:47.200
แล้วก็มีทำธุรกิจที่เป็น Seed Webs ที่เป็น

00:01:47.700 --> 00:01:49.700
เหมือนกับเป็นอะไรอ่ะ เราขายธีม

00:01:49.900 --> 00:01:51.600
ขาย solution ให้กับเว็บที่เป็น WordPress นะครับ

00:01:51.900 --> 00:01:54.800
แล้วก็มีทีมเล็กๆ ที่เป็นเด็กที่เคยสอนที่ปาย

00:01:54.900 --> 00:01:57.000
เมื่อสัก 10 กว่าปีที่แล้วนะครับ

00:01:57.100 --> 00:01:58.400
เขาก็จบมหาวิทยาลัยกันมา

00:01:58.500 --> 00:02:00.400
ก็เลย โอเค งั้นเราก็ set ทีมด้วยกันนะ

00:02:02.600 --> 00:02:06.200
ทีนี้หัวข้อวันนี้เราพูดถึงเรื่อง Astro นะครับ

00:02:06.500 --> 00:02:10.100
ผมรู้สึกว่า Astro เนี่ยสื่อสารดี

00:02:10.400 --> 00:02:11.700
เขาไม่ได้บอกว่าเขาทำได้ทุกอย่างนะครับ

00:02:12.700 --> 00:02:16.000
เขาบอกเขาเป็น web framework ไม่ได้พยายามเน้นว่า JavaScript ด้วยนะ

00:02:16.200 --> 00:02:18.200
เพราะว่าจริงๆแล้วเนี่ย พอมัน build เป็น static

00:02:18.300 --> 00:02:20.200
มันก็ไม่ได้ feel ว่าต้องเป็น JavaScript ขนาดนั้น

00:02:20.700 --> 00:02:22.500
แต่ว่าเราใช้ JavaScript ในการเขียนนะครับ

00:02:23.200 --> 00:02:27.300
เขาบอกว่าเป็น web framework สำหรับ content driven นะครับ

00:02:27.500 --> 00:02:29.900
ก็คือเว็บที่เป็น content ทั้งหลายนะครับ

00:02:30.900 --> 00:02:34.700
มันจะเหมาะกับ Astro เขาไม่ได้ไปสู้กับ web application

00:02:34.900 --> 00:02:36.900
ไม่ได้ไปสู้กับระบบที่มันซับซ้อนนะครับ

00:02:37.100 --> 00:02:40.900
แต่ตัวมันน่ะซับซ้อนนะครับ
แล้วก็ตัวมันก็มีเบื้องหลังที่ขยายได้หลายแบบนะครับ

00:02:41.000 --> 00:02:42.500
เดี๋ยวเรามาดูกัน

00:02:43.600 --> 00:02:46.100
ผมก็สะดุดใจคำว่า content driven นะครับ

00:02:46.500 --> 00:02:49.700
ในฐานะที่เราก็ทำพวก CMS มาก่อนนะครับ

00:02:49.700 --> 00:02:52.300
อย่างเช่น WordPress ข้างล่างเนี่ยนะครับ

00:02:52.300 --> 00:02:55.600
เราก็จะรู้สึกว่าเราจะต้องทำระบบ

00:02:56.000 --> 00:03:00.500
ถ้าทำเว็บที่เกี่ยวกับ content เราก็คิดถึง WordPress ก่อนแน่นอนนะครับ

00:03:01.200 --> 00:03:04.300
ซึ่งมันอิงกับ server ใช่ไหม มันก็จะเป็น

00:03:04.700 --> 00:03:07.500
อันนี้ผมยังไม่เจอฝรั่งเขียนนะ แต่ผมอาจจะเขียนผิดก็ได้นะครับ

00:03:07.700 --> 00:03:11.700
ผมแค่คิดเองว่า เออเนี่ย เวลาผมตัดสินใจว่าเรามาใช้ตัวนี้เหอะเนี่ย

00:03:11.900 --> 00:03:14.300
เพราะเรารู้สึกแบบนี้ เรารู้สึกว่า WordPress เนี่ย

00:03:14.600 --> 00:03:16.700
มันจมอยู่กับ server นะครับ ไม่ใช่ไม่ดีนะ

00:03:17.000 --> 00:03:19.900
มันดีในแง่ว่ามันครบวงจร สำหรับเว็บขนาดเล็กนะครับ

00:03:21.100 --> 00:03:23.800
แต่เมื่อไหร่ก็ตามที่เราต้องการ scale นะครับ

00:03:23.900 --> 00:03:28.300
เราต้องการการไม่พึ่งพา server นะครับ ก็คือเรียกว่า serverless นะครับ

00:03:28.400 --> 00:03:30.800
ก็คือมี server แหละ แต่ว่ามันไป scale ได้

00:03:31.000 --> 00:03:34.100
มันไป ทำ cache มันไป run ที่ device นะครับ

00:03:35.800 --> 00:03:37.300
ตรงนี้มันก็ขึ้นมาข้างบน

00:03:37.800 --> 00:03:40.000
แล้วผมก็ต้องไปลองเล่นตามสูตรเลยนะครับ

00:03:40.000 --> 00:03:42.600
Jekyll Hugo Gatsby นะครับ

00:03:43.300 --> 00:03:45.400
ซึ่งหลายๆ ตัวพวกนี้มันเป็น static

00:03:45.800 --> 00:03:49.600
คือพอมันเจนออกมาปุ๊บ มันกลายเป็น HTML ข้อดีคืออะไร

00:03:49.700 --> 00:03:51.400
ไม่มีทางล่ม ไม่มีทางโดนเจาะ

00:03:51.600 --> 00:03:53.400
ไม่มีใครทำอะไรกับมันได้แน่นอน

00:03:53.400 --> 00:03:57.100
ถูกมั้ย เพราะมันเป็น HTML นะครับ แต่ว่า Gatsby เนี่ย

00:03:57.100 --> 00:03:59.300
เห็นหลังๆ เค้าพยายามจะมี SSR

00:03:59.300 --> 00:04:00.800
ก็คือ server-side rendering ละ

00:04:00.800 --> 00:04:04.800
นะครับ ก็เลยให้อยู่ตรงกลางก่อนนะครับ ในฐานะที่เรามา

00:04:05.800 --> 00:04:07.100
ตกหลุมรัก Astro มากกว่า

00:04:07.500 --> 00:04:08.700
แต่จริงๆ มันอาจจะดีก็ได้นะ

00:04:08.800 --> 00:04:10.400
แต่เดี๋ยวขอสาวกมา defend หน่อย

00:04:12.000 --> 00:04:13.400
นะครับ ทีนี้ ในกราฟนี้ ผมก็เลยมองว่า

00:04:13.700 --> 00:04:17.400
ถ้าไป dynamic จ๋าๆ เลยนะครับ ไปทางพวก React

00:04:17.400 --> 00:04:20.300
ไปทางพวก Vue นะครับ เป็น Nuxt เป็น Next เนี่ย

00:04:20.400 --> 00:04:23.900
อันนี้ดีนะครับ แต่ในส่วนตัวจะรู้สึกมันใช้ยากนิดนึง

00:04:24.100 --> 00:04:28.300
มันก็เลยมาจบที่ว่า Astro เนี่ย ตอบโจทย์ทั้งเป็น serverless

00:04:28.400 --> 00:04:29.600
ก็คือ scale ไม่มีปัญหา

00:04:29.600 --> 00:04:32.100
แล้วก็ยัง dynamic ก็คือสามารถที่จะ

00:04:32.200 --> 00:04:35.300
ไปดึง database ไปเอา content มา

00:04:35.900 --> 00:04:36.800
ไปทำ login

00:04:37.100 --> 00:04:38.700
อะไรหลายๆ อย่างได้นะครับ

00:04:39.400 --> 00:04:41.400
ศัพท์เทคนิคที่เราใช้กันก็ SSG

00:04:41.500 --> 00:04:43.200
นะครับ ใครรู้จักคำนี้อยู่แล้วเนาะ ยกมือ

00:04:43.400 --> 00:04:44.400
นะครับ หลายๆ คน

00:04:44.600 --> 00:04:45.900
คุ้นมั้ย ไม่คุ้นกันเหรอ

00:04:46.300 --> 00:04:49.400
แต่ว่าพอเฉลยก็คือ static site generator

00:04:49.400 --> 00:04:50.900
ก็คือตัวที่สร้างไฟล์ static นะครับ

00:04:52.200 --> 00:04:53.900
กับ SSR อันนี้คุ้นกันมั้ย

00:04:54.000 --> 00:04:54.800
นะครับ คุ้นกันมั้ย

00:04:55.800 --> 00:05:00.700
ก็คือ หลังๆ เนี่ย static มันไม่ได้ครบวงจร

00:05:00.900 --> 00:05:03.900
ก็เลยมาเป็นต้องขอข้อมูลจาก server ด้วย

00:05:04.000 --> 00:05:06.400
นะครับ เราก็เลยเรียกว่า server-side rendering นะครับ

00:05:08.100 --> 00:05:11.000
เนี่ย ทั้งหมดเท่าที่ทำมา ผมก็เลยส่วนตัวนะ

00:05:11.100 --> 00:05:13.300
ผมประทับใจ Next ในแง่ความ dynamic ความ

00:05:15.300 --> 00:05:17.400
ทำเว็บแล้ว เว็บ content ด้วยนะ

00:05:17.600 --> 00:05:20.200
ติด Google ได้ดี แต่เวลาเขียนเนี่ย

00:05:20.400 --> 00:05:21.600
มันก็ยังมีจุดที่รู้สึกว่า

00:05:21.800 --> 00:05:23.200
Astro เนี่ย เขียนสนุกกว่า

00:05:23.600 --> 00:05:25.500
นะครับ แล้ว Astro เนี่ย

00:05:26.000 --> 00:05:28.400
ก็รีบขิงก่อนเลยเพราะมันมาทีหลังนะครับ ว่า

00:05:29.400 --> 00:05:32.600
ถ้าทำด้วย Astro เนี่ย เร็วแน่นอนนะครับ ก็แหงสิ

00:05:32.800 --> 00:05:35.800
มันเกิดมาในยุคนี้ best practice มันมีหมดแล้ว

00:05:36.100 --> 00:05:39.600
มันสร้าง WebP ให้อัตโนมัติ มัน minify

00:05:40.200 --> 00:05:43.300
มันทำทุกอย่าง แล้วกลายเป็น static ไม่รอให้เค้าโหลด

00:05:43.300 --> 00:05:46.600
JavaScript ที่เป็น framework นึกออกมั้ย

00:05:46.900 --> 00:05:48.200
ถ้าเราใช้ React ต้องโหลด React มา

00:05:48.800 --> 00:05:50.400
ก้อนนึงก่อนนะครับ

00:05:50.400 --> 00:05:51.400
แล้วก็ก้อนนี้ ต้องไป process ดึงนู่นดึงนี่มา

00:05:52.400 --> 00:05:55.800
นะครับ แต่ Astro ไม่ใช่ Astro เจนมาเป็น HTML

00:05:55.800 --> 00:05:57.400
สำหรับหน้านั้น เร็วที่สุดแล้ว

00:05:57.900 --> 00:06:00.100
นะครับ เพราะฉะนั้นเค้าก็เลยมาขิง

00:06:00.800 --> 00:06:03.300
ด้วยกันว่า ในเว็บปัจจุบันนะครับ เพราะว่า

00:06:03.300 --> 00:06:06.000
เว็บที่เพิ่งใช้ Astro ยังไงก็มา best practice ไปแล้วนะครับ

00:06:08.100 --> 00:06:10.100
ถ้าเราเริ่มนะครับ เราเริ่มต้น

00:06:10.900 --> 00:06:14.000
ผมคิดว่าตรงนี้คงไม่ได้ลงเดโมนะครับ

00:06:14.100 --> 00:06:15.100
เดี๋ยวดูเวลาอาจจะไม่ทัน

00:06:15.400 --> 00:06:18.200
คร่าวๆ เลยนะครับ npm create

00:06:18.300 --> 00:06:20.700
แล้วก็ npm run dev นะครับ

00:06:20.900 --> 00:06:22.400
ใน doc ของ Astro เนี่ย

00:06:22.700 --> 00:06:24.300
จะใช้ npm ก็ได้ yarn ก็ได้นะครับ

00:06:24.500 --> 00:06:25.700
หรือว่า pnpm ก็ได้นะครับ

00:06:25.900 --> 00:06:30.300
แต่ว่าผมเคยใช้พวกตัวใหม่ๆ นะครับ ตัว pnpm

00:06:30.500 --> 00:06:33.900
แล้วพอไป build บนระบบนะครับ บน GitHub

00:06:34.200 --> 00:06:37.300
หรือว่าบน Cloudflare Page นะครับ

00:06:37.700 --> 00:06:40.300
บางทีมันเจอปัญหาเหมือนกันว่าบางโมดูลมันไม่มาอย่างที่คิด

00:06:40.700 --> 00:06:41.600
ใช่มั้ย เจอเหมือนกันเนาะ

00:06:41.800 --> 00:06:44.000
ก็เลยกลับมาตายรัง npm นะครับ

00:06:44.400 --> 00:06:47.600
แล้วเราก็ host พอรันเสร็จปุ๊บเราก็จะได้ URL

00:06:47.800 --> 00:06:48.600
ซึ่งน่ารักมากเลย

00:06:48.800 --> 00:06:51.400
ทีมเค้าทำ marketing ดีเนาะ เค้าสื่อสารดี

00:06:51.500 --> 00:06:54.000
ก็คือ Astro คือการแบบออกไปนอกอวกาศ

00:06:54.600 --> 00:06:55.200
และเร็วใช่มั้ย

00:06:55.800 --> 00:06:59.100
ก็ 4 3 2 1 นะ พอร์ต ก็น่ารักดีนะครับ

00:06:59.500 --> 00:07:01.400
ก็ใช้ localhost แล้วก็พอร์ตนี้เลยนะครับ

00:07:02.700 --> 00:07:06.100
ทีนี้ถ้าเราเปิดนะครับ เมื่อกี้ผมใช้คำสั่ง run นะครับ

00:07:06.300 --> 00:07:08.100
คำสั่ง setup นะครับ มันก็จะได้แบบ

00:07:08.400 --> 00:07:10.500
ไฟล์มานิดเดียวเลย ไม่ได้เยอะเลยนะครับ

00:07:10.600 --> 00:07:13.000
ถ้าลองแกะดูก็แทบจะเข้าใจเลยนะครับ

00:07:14.200 --> 00:07:16.100
หลักๆ ถ้าเกิดใครไม่เคยมาจาก

00:07:16.300 --> 00:07:19.600
ถ้าใครมาจากฝั่งพวก WordPress PHP พวกอะไรอย่างเงี้ยนะครับ

00:07:19.800 --> 00:07:22.000
ก็คงต้องมาทำความคุ้นชินกับว่า

00:07:22.400 --> 00:07:25.000
ทุกอย่างที่จะเอาขึ้นเว็บมันอยู่ในโฟลเดอร์ public นะ

00:07:25.200 --> 00:07:25.700
นะครับ อันนี้ผมคิดว่า

00:07:25.800 --> 00:07:28.300
น่าจะดูแววตาน่าจะเข้าใจหมดละนะครับ

00:07:29.400 --> 00:07:32.300
โอเค ก็ถ้าอะไรไว้ใน public ก็ไปอยู่ใน root

00:07:32.700 --> 00:07:34.200
แล้วมันก็จะบอกว่าวิธีการเนี้ย

00:07:34.400 --> 00:07:36.900
มันจะไม่ทำการ optimize

00:07:37.100 --> 00:07:40.200
ไม่ทำการแบบลดขนาด ไม่ทำอะไรทั้งสิ้นนะ เพราะว่า

00:07:40.700 --> 00:07:42.800
คุณเลือกที่จะไว้ใน public อยู่แล้วนะครับ

00:07:43.100 --> 00:07:45.100
ไม่เหมือนบาง framework บางทีมันแอบไปทำเหมือนกันนะครับ

00:07:45.600 --> 00:07:48.200
แต่ถ้าเกิดอยู่ใน Astro public ก็คือ public เลยนะครับ

00:07:49.900 --> 00:07:53.100
ทีนี้ใน source file นะครับ ก็คือ folder ที่

00:07:53.100 --> 00:07:54.800
เอาไว้เก็บ source ของเรานะครับ

00:07:55.100 --> 00:07:59.500
มีอะไรบ้างนะครับ ก็มาถึงก็เป็น pages นะครับ

00:07:59.700 --> 00:08:01.600
ซึ่งอันเนี้ยใครเคยใช้ next อยู่แล้วบ้าง

00:08:01.600 --> 00:08:04.000
ใครเคยใช้บ้างยกมือนิดนึงนะครับ

00:08:04.000 --> 00:08:05.600
โอเคน่าจะครึ่งห้องเลยนะครับ

00:08:05.800 --> 00:08:09.600
ก็คงสร้างเหมือนกับ next ที่เป็น pages ในยุคแรกๆ จนถึง

00:08:09.800 --> 00:08:13.100
เวอร์ชันซัก 12 13 เนาะ หรือตอนนี้ก็ยังทำได้

00:08:13.200 --> 00:08:14.400
ก็คือเราสร้าง folder ชื่อ pages

00:08:14.700 --> 00:08:18.000
แล้วก็เขียนไปเลยว่าอยากได้ URL อะไรนะครับ

00:08:19.000 --> 00:08:22.600
ก็ใช้ about.astro อะไรอย่างเงี้ยนะครับ ก็เป็นหน้า about นะครับ

00:08:23.000 --> 00:08:26.800
ถ้าใช้ index ก็จะกลายเป็นหน้าหลักหน้า root นะครับ

00:08:27.900 --> 00:08:30.700
แล้วก็อีก folder นึงก็คือ layout นะครับ

00:08:31.100 --> 00:08:34.000
folder layout เนี่ยถ้าเราไม่มีเลยก็ได้นะครับ

00:08:34.100 --> 00:08:35.800
คือถ้าเกิดเราสร้างมาแค่ file เดียว

00:08:35.900 --> 00:08:37.300
เราก็ไม่จำเป็นต้องใช้ layout นะครับ

00:08:37.600 --> 00:08:40.000
แต่ว่าใน best practice ที่เราทำกันเนาะ

00:08:40.200 --> 00:08:44.300
เราก็คงจะต้องมีตัวที่เป็นครอบ HTML จนถึงเปิดปิดนะครับ

00:08:44.600 --> 00:08:45.400
แล้วก็ไอ้ตัวครอบเนี้ย

00:08:45.700 --> 00:08:47.900
เราก็อาจจะมีหลายๆ template ได้ด้วยนะครับ

00:08:48.000 --> 00:08:50.000
เพราะฉะนั้นถ้าเราทำ layout เอาไว้หลายแบบ

00:08:50.100 --> 00:08:52.800
มันก็อาจจะเหมาะกับ landing page หลายๆ แบบนะครับ

00:08:53.400 --> 00:08:55.500
ก็อันนี้ก็ตั้งขึ้นมาได้เลยนะครับ

00:08:56.600 --> 00:08:58.400
ส่วนอันสุดท้ายก็คือ component

00:08:58.400 --> 00:09:01.800
component ก็เหมือนกับตัว module ที่เราจะเติมเข้าไปนะครับ

00:09:01.900 --> 00:09:04.000
ถ้ามาจากฝั่ง JavaScript ก็ component อยู่แล้วนะครับ

00:09:04.300 --> 00:09:08.800
ถ้ามาจากฝั่งพวก PHP WordPress ก็เหมือน include file เข้ามานะครับ

00:09:10.700 --> 00:09:14.800
ทีนี้ถ้าเกิดเราเจนนะครับ อันนี้อาจจะไม่ต้องดูโค้ดออกก็ได้นะครับ

00:09:14.800 --> 00:09:18.000
ไม่ต้องซีเรียสนะครับ ถ้าเราได้ลองทำสักรอบนึงเนี่ยนะครับ

00:09:18.600 --> 00:09:22.200
หลักการของมันจะง่ายมากเลยคือมันแบ่งข้างบนด้วยขีด 3 ขีดนะครับ

00:09:23.100 --> 00:09:25.900
แล้วก็ใส่ฟังก์ชันที่ตามที่เราต้องการนะครับ

00:09:26.500 --> 00:09:30.400
เช่นจะ JavaScript จะทำนู่นทำนี่ทำอะไรก็ไป process ให้เรียบร้อย

00:09:30.500 --> 00:09:32.400
ใครที่เคยใช้ React มาก็จะคุ้นเลยนะครับ

00:09:32.500 --> 00:09:34.500
ก็คือเราทำ process ให้เรียบร้อยก่อน

00:09:34.700 --> 00:09:36.500
แล้วค่อยมาพ่นก็คือ export ออกมานะครับ

00:09:37.600 --> 00:09:41.900
แต่ทีนี้สิ่งที่มันพ่นเนี่ย มันออกมาทาง Vue ทาง Nuxt มากกว่า

00:09:42.000 --> 00:09:45.600
ก็คือไม่ได้ใช้ class name นะครับ มันก็ตรงไปตรงมามากเลย

00:09:45.700 --> 00:09:49.800
HTML ก็เป็น HTML class ก็เป็น class นะครับ พ่นออกมาตรงๆ เลย

00:09:50.000 --> 00:09:52.400
ซึ่งตรงเนี้ยเราเรียกว่า template นะครับ

00:09:53.100 --> 00:09:58.700
แล้วก็บวกกับ component ก็ได้ถ้าเราจะไป include component มานะครับ feeling เหมือน PHP ไป include ไฟล์มานะครับ

00:09:59.900 --> 00:10:02.100
แล้วก็ JS expression ก็คือ

00:10:02.400 --> 00:10:04.600
ถ้าเราเป็น PHP เราก็ต้องวนลูป

00:10:04.900 --> 00:10:10.500
ถ้าเราเป็น JavaScript เราก็ใช้คำสั่งในการที่จะดึงค่าออกมา

00:10:10.700 --> 00:10:14.400
จะ map ก็ได้หรือจะ for each อะไรเงี้ยก็ไป process ใน template เอานะครับ

00:10:15.800 --> 00:10:19.300
และตัวสุดท้ายนะครับ ที่มันทำให้รู้สึกใช้ง่ายดีมากเลยก็คือ

00:10:19.600 --> 00:10:21.500
มันเอาสไตล์ไว้ข้างล่างนะครับ

00:10:21.700 --> 00:10:23.000
มันเหมาะกับเว็บยุคนี้เพราะอะไร

00:10:23.300 --> 00:10:28.100
เว็บยุคเนี้ยเราไม่ควรที่จะเอาสไตล์ทั้งก้อนเนี่ยมาอยู่ในไฟล์ๆ เดียว

00:10:28.100 --> 00:10:28.500
แล้วก็เล่นโหลดทีเดียวหนักๆ

00:10:29.100 --> 00:10:32.100
หนักๆ นี่คือ 100K นะ 100K นี่นิดเดียวนะแต่ว่า

00:10:32.400 --> 00:10:34.800
ไอ้ page speed มันก็จะถือว่าหนักมากละนะครับ

00:10:34.800 --> 00:10:37.500
เพราะฉะนั้นถ้าเราเอาสไตล์มาผูกไว้ข้างล่างตรงนี้นะครับ

00:10:37.800 --> 00:10:40.900
ก็จะกลายเป็นว่ามันก็จะเป็นสไตล์สำหรับหน้านั้นโดยเฉพาะ

00:10:41.100 --> 00:10:43.000
โดยที่อาจจะมีหน้า global ด้วยก็ได้นะครับ

00:10:43.800 --> 00:10:46.600
เพราะฉะนั้นเราก็จะมีไฟล์สไตล์ชีทที่อาจจะเป็น global อยู่

00:10:46.900 --> 00:10:49.300
หรือเป็น Tailwind อยู่นะครับ

00:10:49.600 --> 00:10:52.900
แล้วก็มีสไตล์ที่เสริมสำหรับตัวนี้โดยเฉพาะนะครับ

00:10:53.300 --> 00:10:55.600
เพราะฉะนั้นมันก็ทำให้โครงสร้างเนี่ยง่ายมากเลย

00:10:55.600 --> 00:10:59.400
คือข้างบนเหมือนทำฟังก์ชัน ตรงกลางเอาไว้พ่นก็คือ template

00:10:59.700 --> 00:11:02.400
แล้วข้างล่างเอาไว้ปรับแต่งก็คือสไตล์นะครับ

00:11:02.800 --> 00:11:04.300
อันนี้คือตัวอย่างที่เขาสร้างมาเลยนะ

00:11:04.400 --> 00:11:06.000
ถ้าเกิดเราสร้างเดโม่ก็ได้แบบนี้เลยนะครับ

00:11:07.700 --> 00:11:09.500
แต่ทีนี้ถ้าเราแอบไปดูตัวอย่างเมื่อกี้

00:11:09.500 --> 00:11:10.800
เราไม่ได้เปิด HTML

00:11:10.800 --> 00:11:13.200
มันใช้คำว่าเปิดเป็น layout นะครับ

00:11:13.800 --> 00:11:16.700
เหตุผลก็เพราะว่าถ้าเราทำเป็น 10 หน้าล่ะ

00:11:17.000 --> 00:11:18.300
เราต้องมาเปิด HTML ทุกหน้าเหรอ

00:11:18.600 --> 00:11:19.800
มันก็ยากไป ถูกไหม

00:11:20.100 --> 00:11:23.800
เขาก็เลยแนะนำว่างั้นเราสร้างโฟลเดอร์ที่เปิด HTML

00:11:24.000 --> 00:11:26.200
ปิด HTML มาเป็น layout แล้วกันนะครับ

00:11:26.400 --> 00:11:28.200
เหมือนเป็น page template ไปนะครับ

00:11:28.800 --> 00:11:30.800
ก็คงสร้างก็ง่ายมากเลยนะครับ

00:11:30.800 --> 00:11:32.500
แล้ววิธีการก็ยังเหมือนเดิมอีก ก็คือ

00:11:32.800 --> 00:11:34.200
ข้างบนเอาไว้ process นะครับ

00:11:35.400 --> 00:11:38.900
ทีนี้การ process ของมันเนี่ย มันมีการรับค่าส่งค่าได้

00:11:39.100 --> 00:11:41.800
นะครับ ใน Astro เนี่ยใช้คำว่า Astro.props

00:11:41.800 --> 00:11:43.300
ตัวนี้ก็คือ property นั่นแหละนะครับ

00:11:43.600 --> 00:11:45.700
ก็สามารถส่งค่าเข้ามา อย่างเช่น

00:11:46.200 --> 00:11:48.300
เราอยากจะให้เว็บนี้มี title ชื่ออะไร

00:11:48.400 --> 00:11:49.600
ก็ส่งค่า title เข้ามา

00:11:50.000 --> 00:11:52.100
แล้วก็เอา title ที่เป็นตัวแปรเนี่ยนะครับ

00:11:52.500 --> 00:11:54.800
มาพ่นข้างล่าง พ่นก็คือ

00:11:55.100 --> 00:11:57.900
อยู่ในปีกกาข้างล่างที่มีคำว่า title นะครับ

00:11:58.700 --> 00:12:00.100
อันนี้คือการส่งค่าตัวแปรมา

00:12:00.700 --> 00:12:02.500
กับนอกจากส่งค่าตัวแปร

00:12:02.700 --> 00:12:06.200
สิ่งที่เป็น layout เนี่ย ถ้ามันไปครอบอะไรนะครับ

00:12:06.200 --> 00:12:08.300
อย่างเช่นเราเปิด layout แล้วก็ปิด layout

00:12:08.600 --> 00:12:11.300
ของที่อยู่ข้างในเนี่ย เราจะเรียกว่า slot นะครับ

00:12:11.400 --> 00:12:13.100
ก็คือเอาของเนี่ยมากองไว้ในนี้เลยนะครับ

00:12:13.800 --> 00:12:15.900
เพราะฉะนั้นมันก็เหมือนตัวที่เอาไว้ครอบนะ

00:12:16.100 --> 00:12:18.600
พอเราเห็นโครงสร้างแบบเนี่ย ผมว่ามันเข้าใจง่าย

00:12:18.600 --> 00:12:20.900
นะครับ แล้วเราก็อยากจะหยิบอะไรก็วาง

00:12:21.000 --> 00:12:23.100
และ slot ไม่ได้มีที่เดียวด้วยนะครับ

00:12:23.300 --> 00:12:25.200
ถ้าเราจะทำให้มันเพิ่มขึ้นก็

00:12:25.200 --> 00:12:28.300
บางคนอยากจะแก้พวกอะไรนะ OG image

00:12:28.500 --> 00:12:31.300
แก้พวก header แล้วก็เอา slot อีกก้อนนึงไว้

00:12:31.600 --> 00:12:32.900
อะไรอย่างเงี้ยนะครับ หรือ

00:12:32.900 --> 00:12:35.200
page template บางก้อน เราอยากจะเจาะ

00:12:35.200 --> 00:12:37.600
เจาะพื้นที่ที่แต่ละที่ แล้วก็ slot หลาย slot

00:12:37.800 --> 00:12:37.900
นะครับ

00:12:40.700 --> 00:12:45.000
อีกอันนึงคือ component ถ้าเกิดเราใช้ demo นะครับก็คือ npm

00:12:45.000 --> 00:12:47.800
แล้วก็ตัวที่ติดตั้งของ Astro ถ้าเป็น demo เนี่ย

00:12:47.800 --> 00:12:49.700
มันจะให้ตัวอย่าง component มาตัวนึง

00:12:49.700 --> 00:12:51.600
ก็เป็น card card ก็ง่ายๆเลย

00:12:51.600 --> 00:12:53.800
ก็คือ li ที่ครอบนะครับ

00:12:53.800 --> 00:12:55.200
ใส่ title ใส่อะไรเงี้ย

00:12:55.200 --> 00:12:57.400
body แค่นี้เอง ซึ่งถามว่า

00:12:57.400 --> 00:12:59.200
เอามาจากไหน ก็เอามาจาก

00:12:59.200 --> 00:13:00.500
props เหมือนกันนะครับก็คือ

00:13:00.500 --> 00:13:02.600
ส่งค่ามานะครับ สมมุติว่า

00:13:02.600 --> 00:13:03.600
ตอนที่เราจะเรียกมันน่ะ

00:13:03.600 --> 00:13:06.100
เมื่อกี้จำได้มั้ยเราเรียก layout ครอบ

00:13:06.100 --> 00:13:07.700
แล้วก็ layout แล้วก็ส่ง

00:13:07.700 --> 00:13:09.700
ค่าอะไรบางอย่าง อันนี้ก็เรียก

00:13:09.700 --> 00:13:11.100
เหมือนกันเลย component เลย

00:13:11.100 --> 00:13:12.500
เหมือน component ที่ชื่อว่า card เลย

00:13:12.500 --> 00:13:14.400
นะครับว่า href คืออะไร

00:13:14.400 --> 00:13:15.800
title คืออะไร body คืออะไร

00:13:15.800 --> 00:13:17.800
นะครับ เพราะฉะนั้นมันก็เหมือนแบบ

00:13:17.800 --> 00:13:19.300
ถ้าเป็น function ก็คือ

00:13:19.300 --> 00:13:21.900
ใส่ parameter เข้าไปด้วยนะครับ

00:13:21.900 --> 00:13:23.300
แต่อันนี้มันเป็น component ก็

00:13:23.300 --> 00:13:24.900
อยากได้ค่าอะไรก็ใส่เข้าไปนะครับ

00:13:24.900 --> 00:13:27.200
เพราะฉะนั้นพอเราเข้าใจโครงสร้างเงี้ย

00:13:27.200 --> 00:13:28.700
มันก็จะแบบหยิบนู่นหยิบนี่

00:13:28.700 --> 00:13:29.700
มาผสมได้ง่ายมากเลยนะครับ

00:13:31.700 --> 00:13:33.200
สิ่งที่ทำให้ Astro เนี่ย

00:13:33.200 --> 00:13:35.900
เหนือกว่า static site

00:13:35.900 --> 00:13:38.000
generator ตัวอื่นๆนะครับ

00:13:38.000 --> 00:13:39.400
ก็คือ มันไม่ใช่ทุกอย่าง

00:13:39.400 --> 00:13:40.100
ต้องเป็น static

00:13:41.800 --> 00:13:43.600
Astro เนี่ยบอกว่าเรามี Island ได้

00:13:43.600 --> 00:13:45.400
Island คือเกาะเนาะ ก็เหมือนกับว่า

00:13:45.400 --> 00:13:47.900
วางแผนไว้ปุ๊บ โหลดข้อมูลเสร็จเรียบร้อย

00:13:47.900 --> 00:13:49.500
แต่เจาะช่องตรงนี้ไว้นะฮะ

00:13:49.500 --> 00:13:51.700
เจาะกล่องตรงนี้ไว้ แล้วกล่องตรงเนี้ย

00:13:51.700 --> 00:13:53.600
ค่อยไปโหลด ในตอนที่

00:13:53.600 --> 00:13:55.100
โหลดหน้าเว็บเสร็จแล้วนะครับ

00:13:55.900 --> 00:13:59.400
ถ้าเกิดนิยามแบบสั้นๆก็เลย ผมเลยคิดว่านะก็คือ

00:13:59.400 --> 00:14:00.400
มันก็คือ component แหละ

00:14:00.400 --> 00:14:02.600
ที่โหลด ตอนที่

00:14:02.600 --> 00:14:03.800
ไปอยู่ใน client ไป

00:14:03.800 --> 00:14:06.000
โหลด ไปตอนที่ไปอยู่ใน

00:14:06.000 --> 00:14:07.400
เงื่อนไขต่างๆ คือตอนที่

00:14:07.400 --> 00:14:09.100
เว็บมันว่างๆนะครับ หรือ

00:14:09.100 --> 00:14:11.200
เมื่อมันมองเห็น หรือเมื่อมัน

00:14:11.200 --> 00:14:12.700
เป็น media query อะไรเงี้ยนะครับ

00:14:12.700 --> 00:14:14.300
พูดง่ายๆคือ เราตั้งเงื่อนไข

00:14:14.300 --> 00:14:16.400
ของการโหลด ทุก component ได้

00:14:16.400 --> 00:14:18.400
แปลว่าอะไร ถ้าเกิดในทางปฏิบัติ

00:14:18.400 --> 00:14:20.700
สมมุติว่าผมโหลดหน้าข่าวมาเสร็จละ

00:14:20.700 --> 00:14:22.900
อยากได้ยอดวิว ที่เป็นวิวแบบ

00:14:22.900 --> 00:14:23.600
real time จริงๆเลย

00:14:23.600 --> 00:14:25.400
ก็แอบโหลดวิวมา นะครับ

00:14:25.400 --> 00:14:28.100
สมมุติว่าโหลดข่าวหน้าเนี้ยเสร็จ

00:14:28.100 --> 00:14:30.800
ข้างล่าง มีแบบ suggest ใช่มั้ย

00:14:30.800 --> 00:14:32.000
suggest ข่าวที่เกี่ยวข้อง

00:14:32.000 --> 00:14:34.300
หรือ ข่าวที่คุณเคยอ่านแล้ว

00:14:34.300 --> 00:14:35.900
เพิ่งอ่านเมื่อกี้ เค้าอ่าน

00:14:35.900 --> 00:14:37.200
อะไรกันอีก ใช่มั้ยก็เหมือนพวก

00:14:37.200 --> 00:14:39.200
e-commerce ที่เราเห็นๆกัน

00:14:39.200 --> 00:14:40.500
เพราะฉะนั้นทุกอย่างมัน

00:14:40.500 --> 00:14:42.100
จะ real time โดยที่หน้าเนี้ย

00:14:42.100 --> 00:14:43.300
มันโหลดเสร็จไปแล้ว แล้วมันก็

00:14:43.300 --> 00:14:45.000
เร็วมากด้วยนะครับ เพราะฉะนั้น

00:14:45.000 --> 00:14:47.300
การที่ใช้ Island เนี่ย

00:14:47.300 --> 00:14:48.200
ผมว่านี่คือจุดขายที่ทำให้

00:14:48.200 --> 00:14:49.700
Astro เนี่ย แตกต่างจาก

00:14:49.700 --> 00:14:50.800
static site นะครับ แล้วก็

00:14:50.800 --> 00:14:52.500
เป็นถือว่าเป็นพวกฝั่ง

00:14:52.500 --> 00:14:53.700
frontend ที่ใช้ง่าย

00:14:53.700 --> 00:14:55.100
นะครับ มันก็เลยกลายเป็นว่า

00:14:55.100 --> 00:14:56.600
ผมว่ามันเป็นจุดกึ่งกลางที่เหมาะเลย

00:14:56.600 --> 00:14:56.600
นะครับ

00:14:58.600 --> 00:15:01.200
ทีนี้แล้วเอาข้อมูลที่ไหนล่ะครับ

00:15:02.000 --> 00:15:05.400
การที่เราพ่นค่าเมื่อกี้ มันคือพ่นดีไซน์เนาะ

00:15:05.600 --> 00:15:08.400
แต่ตัวคอนเทนต์เนี่ย เราต้องดึงมาจากที่ต่างๆ นะครับ

00:15:09.800 --> 00:15:13.000
จุดแข็งของ Astro ก็คือ Markdown ซัพพอร์ตตั้งแต่แรกครับ

00:15:13.800 --> 00:15:15.400
พอมาถึงปุ๊บ เราเติม md

00:15:15.700 --> 00:15:18.800
สังเกต อันนี้เป็นตัวอย่างของใน docs เค้าเลยนะครับ

00:15:18.800 --> 00:15:20.000
week 1 week 2 เนี่ย

00:15:20.200 --> 00:15:21.800
ดอท md ดื้อๆ เลยนะครับ

00:15:23.100 --> 00:15:25.200
ดอท md ก็แอบมีใส่ข้างบนได้ด้วยนะครับ

00:15:25.200 --> 00:15:26.300
เดี๋ยวอธิบายต่อว่าคืออะไรนะครับ

00:15:26.700 --> 00:15:28.900
ก็คือเนี่ย เลเอาท์อะไร ไตเติ้ลอะไรนะครับ

00:15:29.200 --> 00:15:32.000
ข้างล่าง ก็เป็นเท็กธรรมดาเลย ที่เป็น Markdown นะครับ

00:15:32.900 --> 00:15:35.400
เพราะฉะนั้น มันการว่า ถ้าเราอยากได้เว็บแบบขนาดเล็ก

00:15:35.400 --> 00:15:36.500
5 หน้า 10 หน้า

00:15:36.800 --> 00:15:38.700
ทุกอย่าง manage ด้วย Markdown จบเลยนะครับ

00:15:39.300 --> 00:15:43.600
โดยที่ไม่ต้องไปทำอะไรก็ได้นะครับ ไม่ต้องไปใช้

00:15:43.800 --> 00:15:44.900
ไม่ต้องไปต่อ API

00:15:45.100 --> 00:15:46.000
ไม่ต้องทำอะไรเลยนะครับ

00:15:46.200 --> 00:15:50.800
ถ้าเป็นพวก Next พวก React ก็ยังจะต้องลงตัวเสริมนะครับ

00:15:50.900 --> 00:15:53.100
เพื่อทำให้อ่านได้ แต่ถ้าเกิดเป็น Astro เนี่ย

00:15:53.100 --> 00:15:54.500
มันซัพพอร์ตตั้งแต่แรกนะครับ

00:15:54.700 --> 00:15:56.900
ก็เลยรู้สึกว่า เอ้ย มันลงตัวดี

00:15:56.900 --> 00:15:59.000
ทำเว็บขนาดเล็กนี่เหมาะมากๆ เลยนะครับ

00:16:00.200 --> 00:16:02.000
ทีนี้ แล้วไอ้ Markdown เมื่อกี้

00:16:02.000 --> 00:16:04.600
ข้างบนที่ผมครอบไว้เนี่ย มันคืออะไร

00:16:04.600 --> 00:16:06.000
มันเหมือน Custom Field นะครับ

00:16:06.400 --> 00:16:09.200
จริงๆ เนี่ย มันมีคนที่ชื่อ อีลิโอ เนี่ย เค้าบอกว่า

00:16:09.200 --> 00:16:11.400
เค้าจะย้ายจาก WordPress ไป Hugo นะครับ

00:16:11.600 --> 00:16:13.300
แล้วก็มี Custom Field อยู่จำนวนมาก

00:16:13.300 --> 00:16:14.600
ที่ไม่รู้จะจัดการยังไงกับมัน

00:16:15.000 --> 00:16:17.000
เค้าก็เลยบอกว่า งั้น เติมแล้วกัน

00:16:17.100 --> 00:16:18.900
แล้วเค้าตั้งชื่อมาตรฐานนี้ว่า Front Matter นะครับ

00:16:19.500 --> 00:16:21.700
ที่ทำให้ Markdown แอบใส่ตัวแปร

00:16:21.700 --> 00:16:23.800
ที่เป็น Custom Field ต่างๆ ได้นะครับ

00:16:24.300 --> 00:16:25.700
แล้วนิยามเองได้เลยนะครับ

00:16:26.000 --> 00:16:27.300
นิยามเป็นอะไรก็ได้นะครับ

00:16:27.300 --> 00:16:29.500
หรือว่าจะใช้เทมเพลตมาตรฐานที่เค้ามี

00:16:29.800 --> 00:16:31.800
พวกแบบว่า ชื่อ description อะไรเงี้ย

00:16:31.800 --> 00:16:33.000
วันที่ อะไรเงี้ยนะครับ

00:16:33.200 --> 00:16:36.100
เพื่อมันจะได้ทำให้ Markdown ตัวเนี่ย

00:16:36.100 --> 00:16:37.900
มันมี Custom Field เพิ่มนะครับ

00:16:37.900 --> 00:16:39.000
แล้วเราก็พร้อมใช้งานเลยครับ

00:16:41.300 --> 00:16:44.200
ต่อไปนะครับ ถ้าคอนเทนต์ไม่ได้มาจาก Markdown

00:16:44.200 --> 00:16:48.000
คอนเทนต์มาจาก CMS เจ้าอื่นๆ นะครับ ก็ได้หมดเลย

00:16:48.000 --> 00:16:50.000
แม้กระทั่ง WordPress ที่ทำตัวเป็น Headless CMS

00:16:50.000 --> 00:16:52.100
Headless คือตัดหัวทิ้ง ก็คือตัด Front ทิ้ง

00:16:52.100 --> 00:16:55.100
ตัดหน้าทิ้ง แล้วก็เก็บแค่ Database นะครับ

00:16:55.100 --> 00:16:58.100
ได้หมดเลยนะครับ จริงๆ พอมันเป็น JSON

00:16:58.100 --> 00:17:00.600
มันอะไรก็ได้อยู่แล้วนะครับ แต่ว่าส่วนตัวผม

00:17:00.600 --> 00:17:03.900
แอบเชียร์ Directus เลย ไฮไลต์มานะครับ

00:17:04.200 --> 00:17:05.900
อันนี้ก็ว้าวมากเหมือนกันนะครับ

00:17:05.900 --> 00:17:08.300
ก็ย้ายลูกค้าหลายคนจาก WordPress ไป Directus

00:17:08.300 --> 00:17:09.800
ได้เวิร์คดีนะครับ

00:17:11.300 --> 00:17:14.400
แล้วก็ในเดโมนะครับ ผมก็มีเดโมที่ทำเป็น

00:17:14.400 --> 00:17:17.200
เอาไทยโทน ไทยโทนมันก็คือชื่อสีของไทยนะ

00:17:17.200 --> 00:17:18.900
แดงชาด หงชาด อะไรเงี้ย

00:17:18.900 --> 00:17:20.500
คืออาจารย์ที่ศิลปากรเค้าทำไว้ให้นะครับ

00:17:20.500 --> 00:17:25.800
เราก็เอาตรงเนี้ยนะครับ ใส่ Google Sheet นะครับ

00:17:25.800 --> 00:17:27.900
พอเราใส่ Google Sheet มีตัวที่แปลงเป็น JSON

00:17:27.900 --> 00:17:29.900
ให้ได้อยู่แล้วนะครับ แต่ว่าคงไม่ได้ลงในวันนี้นะครับ

00:17:29.900 --> 00:17:32.700
แต่ว่ามีตัวอย่างโค้ด มีอะไร ก็เอา JSON

00:17:32.700 --> 00:17:36.600
มาแปลงให้กลายเป็น HTML แค่นั้นเองนะครับ

00:17:36.600 --> 00:17:39.300
เพราะฉะนั้นมันกลายเป็นว่า Data เราไม่ได้ต้องเป็นไฟล์

00:17:39.300 --> 00:17:42.900
ที่เราหรือเป็นระบบที่เราต้องมี มันเป็นอะไรก็ได้เลยนะ

00:17:42.900 --> 00:17:46.300
มาจาก Notion ก็มีคนทำนะครับ

00:17:46.300 --> 00:17:48.300
มาจาก Google Sheet ก็มีคนทำนะครับ

00:17:48.300 --> 00:17:51.700
แอบดูโค้ดนิดนึงก็คือมันใช้วิธี fetch นะครับ

00:17:51.700 --> 00:17:54.400
เราต้องทำให้ Google Sheet ก้อนเนี้ยกลายเป็น JSON

00:17:54.400 --> 00:17:55.900
ให้ได้ก่อน ไป fetch มานะครับ

00:17:55.900 --> 00:17:59.600
พอ fetch มาปุ๊บ .json ก็แปลงก้อนนี้เป็น JSON นะครับ

00:17:59.600 --> 00:18:03.700
เสร็จแล้วก็ง่ายมากเลยคือ map แล้วก็วนลูปเนาะ

00:18:03.700 --> 00:18:07.200
วนลูป color มา ก็คือวนลูปมันทีละฟิลด์ทีละฟิลด์

00:18:07.200 --> 00:18:12.500
แล้วก็เรามีแค่ 2 คอลัมน์ มันก็เลยเป็น .code กับ .name

00:18:12.500 --> 00:18:13.600
อันนี้ง่ายๆ นะครับ

00:18:13.600 --> 00:18:16.200
เพราะฉะนั้นเนี่ย จะเห็นว่าโครงสร้างของมันเนี่ย

00:18:16.200 --> 00:18:20.300
ข้างบน process ข้างล่าง output โดยไม่ต้องใช้คำว่า

00:18:20.300 --> 00:18:24.000
class name อะไรเงี้ย มันก็เป็น feeling ของคนที่

00:18:24.000 --> 00:18:28.500
งงๆ มาจาก React รู้สึกว่าเอ้ยอันนี้เราเข้าใจง่ายนะครับ

00:18:28.500 --> 00:18:31.700
และสุดท้ายนะครับ คอนเทนต์ที่มาจากที่อื่นเนี่ย

00:18:31.700 --> 00:18:34.800
ถ้ามันจะต้องแบบทำซับซ้อนแล้วมีระบบอื่นมันยุ่งยาก

00:18:34.800 --> 00:18:36.800
Astro ก็ออกเองเลยว่าเฮ้ยผมก็มี DB นะ

00:18:36.800 --> 00:18:39.900
มี Database ให้เป็น Managed SQL นะครับ

00:18:39.900 --> 00:18:43.900
SQL ก็คือสามารถทำเอา table มาลิงก์กันได้

00:18:43.900 --> 00:18:47.700
และเป็น Managed ก็แปลว่าถ้ามีคนถล่ม

00:18:47.700 --> 00:18:49.400
เดี๋ยวเค้า scale ให้เอง มันไม่ล่มหรอก

00:18:49.400 --> 00:18:51.400
แล้วเค้าก็คิดตังค์ถูกมาก Free Tier เนี่ย

00:18:51.400 --> 00:18:55.400
ผมว่าเว็บทั่วๆ ไป ไม่ได้คนเข้าเป็นแสนเป็นล้านเนี่ย

00:18:55.400 --> 00:18:57.000
Free Tier น่าจะเหลือเฟือมากเลยนะครับ

00:18:57.000 --> 00:19:00.200
ก็เลยเชียร์อีกอันนึงว่าถ้าอยากใช้ก็ลองดูก็ได้

00:19:00.200 --> 00:19:02.100
เค้าก็ให้ use case มานะครับ

00:19:02.100 --> 00:19:05.700
เนื่องจาก Astro บอกอยู่แล้วตัวเองเป็น content-driven นะครับ

00:19:05.700 --> 00:19:09.100
เค้าเลยไม่ได้ให้ในสิ่งที่จะต้องทำระบบซับซ้อน

00:19:09.100 --> 00:19:11.200
ไม่ได้ทำระบบแบบ backend ซับซ้อนอะไร

00:19:11.200 --> 00:19:13.800
ทำเนี่ยระบบ comment ระบบ blog ระบบ form

00:19:13.800 --> 00:19:15.800
ระบบ feedback ระบบ auth อะไรเงี้ย

00:19:15.800 --> 00:19:18.600
คือเป็นระบบสมาชิกง่ายๆ feedback ง่ายๆ

00:19:18.600 --> 00:19:23.000
หรือว่าลงทะเบียนง่ายๆ ที่ไม่ล่มแล้วก็ฟรีอะไรเงี้ยนะครับ

00:19:23.000 --> 00:19:25.800
ผมคิดว่ามันเป็นตัวที่น่าสนใจดีนะครับ

00:19:25.800 --> 00:19:30.000
ก็คิดว่าเดี๋ยวคงได้ทำเดโมสิ่งที่เป็นพวกระบบลงทะเบียนง่ายๆ

00:19:30.000 --> 00:19:32.800
แจกฟรีอะไรเงี้ยที่มันไม่ล่มนะครับ

00:19:32.800 --> 00:19:34.800
จะได้เอาลองมาลองเผยแพร่กันดูนะครับ

00:19:34.800 --> 00:19:37.700
แล้วก็สุดท้ายนะครับ

00:19:52.300 --> 00:19:54.200
โอเค แล้วก็สุดท้ายก็

00:19:54.400 --> 00:19:55.000
เมื่อเราทำเสร็จ

00:19:55.600 --> 00:19:57.000
ในยุคนี้เราก็ push ขึ้น Git

00:19:57.200 --> 00:19:59.300
แล้ว push ขึ้น Git เสร็จก็ deploy นะครับ

00:19:59.700 --> 00:20:00.400
เพราะฉะนั้น

00:20:01.200 --> 00:20:02.900
เวลาที่ผมรู้สึกว่ามันว้าวมากก็คือ

00:20:03.600 --> 00:20:04.400
สิ่งที่เราทำ

00:20:04.800 --> 00:20:06.800
เราไปขึ้น Cloudflare Page ได้นะครับ

00:20:07.000 --> 00:20:08.200
พอขึ้น Cloudflare Page

00:20:08.400 --> 00:20:09.100
ก็ฟรีด้วย

00:20:09.300 --> 00:20:10.900
จะสังเกตผมไปลองใช้

00:20:11.000 --> 00:20:12.200
PNPM แล้วไม่รอดนะครับ

00:20:13.300 --> 00:20:14.900
NPM run build นะครับ

00:20:15.100 --> 00:20:16.700
ก็การว่าเว็บเนี่ยได้ฟรี

00:20:16.700 --> 00:20:18.300
ไม่ต้องดูแล ไม่ต้องอัปเดต

00:20:18.300 --> 00:20:19.800
ไม่ต้องทำอะไร ทำแล้วทิ้งนะครับ

00:20:20.100 --> 00:20:21.600
ดังนั้นจบงานแล้วเนี่ย

00:20:21.800 --> 00:20:22.900
เราไม่ดูแลต่อไม่อะไร

00:20:23.200 --> 00:20:23.600
ไม่โดนแฮ็ก

00:20:24.500 --> 00:20:25.200
อันนี้คือ

00:20:25.200 --> 00:20:26.600
มันก็เป็นจุดขายอีกแบบนึงนะ

00:20:26.700 --> 00:20:28.200
ผมรู้สึกว่าบางทีเรา

00:20:28.200 --> 00:20:29.800
รู้สึกว่างานบางอย่าง

00:20:29.900 --> 00:20:31.300
พอเราไม่ได้ดูแลต่อแล้วมันโดนแฮ็ก

00:20:31.400 --> 00:20:32.300
เราก็เสียชื่อเหมือนกันเนาะ

00:20:32.400 --> 00:20:33.600
แล้วก็กลายเป็นว่า

00:20:33.900 --> 00:20:35.800
เอ้ย เออ ระบบแบบนี้มันก็เหมาะดีนะครับ

00:20:36.300 --> 00:20:37.800
แต่ว่านอกจาก Cloudflare Page

00:20:38.000 --> 00:20:38.600
มีอีกเพียบเลย โทษที

00:20:39.000 --> 00:20:41.300
ในนี้ไม่ได้เติมมา

00:20:41.500 --> 00:20:42.000
พอดีว่ามัน

00:20:42.000 --> 00:20:43.700
มันก็มีหลายตัวที่ดังๆ อยู่แล้ว

00:20:43.900 --> 00:20:45.700
Vercel เนาะ Netlify นะครับ

00:20:45.700 --> 00:20:48.400
ซึ่งพวกนี้มันก็จะมี Free Tier ที่เยอะนะครับ

00:20:48.800 --> 00:20:49.800
คนทั่วไปที่ไม่ใช่

00:20:51.300 --> 00:20:51.500
อะไรอ่ะ

00:20:52.000 --> 00:20:54.400
ไม่ใช่แบบว่าเว็บที่โหลดเยอะนะครับ

00:20:54.600 --> 00:20:55.200
ผมว่าเหลือเฟือ

00:20:55.500 --> 00:20:56.800
แต่ว่า Cloudflare Page เนี่ย

00:20:56.800 --> 00:20:58.400
เนื่องจากผมเอาไปใช้กับโปรเจคที่

00:20:58.400 --> 00:21:00.100
อย่างที่บอกคนเข้าวันละล้านอะไรเงี้ย

00:21:00.300 --> 00:21:02.100
แล้วมันไม่ล่มนะ ใช้มาเป็นปีละ

00:21:02.300 --> 00:21:03.800
เราก็แฮปปี้อยู่นะครับ

00:21:03.800 --> 00:21:06.100
ดังนั้นก็คิดว่าน่าจะเวิร์กสุดละนะครับ

00:21:08.100 --> 00:21:09.900
แล้วก็สุดท้ายนะครับ

00:21:10.200 --> 00:21:10.900
ก็คือ

00:21:11.300 --> 00:21:12.300
ไอ้ยูไอบรรดาเนี้ย

00:21:12.400 --> 00:21:13.600
ก็คุยกับน้องภูมิครับว่า

00:21:14.100 --> 00:21:15.400
เฮ้ย เราน่าจะทำแบบ

00:21:15.500 --> 00:21:16.900
UI Component แจกดีมั้ย

00:21:17.200 --> 00:21:18.600
ที่เป็นรองรับภาษาไทยดีๆ หน่อย

00:21:18.800 --> 00:21:20.400
แล้วก็พร้อมใช้หน่อยนะครับ

00:21:21.000 --> 00:21:21.600
ผมเอง

00:21:22.000 --> 00:21:22.900
เหมือนตอนแรกไม่ได้แนะนำ

00:21:23.000 --> 00:21:25.100
เป็นนายกสมาคมศึกษาพัฒนา Open Source

00:21:25.300 --> 00:21:26.200
นะครับ ต่อจากพี่บัง

00:21:26.400 --> 00:21:27.900
ก็ยังไม่ได้ทำอะไรเป็นชิ้นเป็นอันนะครับ

00:21:28.000 --> 00:21:30.400
ก็เลยรู้สึกว่าเดี๋ยวจะได้ทำ UI แจกนะครับ

00:21:30.700 --> 00:21:33.300
แต่คำว่าเดี๋ยวเนี่ย

00:21:33.700 --> 00:21:35.000
พอผมทำจริงๆ เนี่ย

00:21:35.300 --> 00:21:35.800
เวอร์ชันแรกนะครับ

00:21:35.800 --> 00:21:36.100
อันนี้เดี๋ยว

00:21:36.400 --> 00:21:37.200
ใกล้ละเนาะ โอเค ก็

00:21:37.800 --> 00:21:38.700
พอดีนะครับ

00:21:38.700 --> 00:21:38.700
ปี

00:21:42.700 --> 00:21:47.200
เวอร์ชั่นแรกเนี่ย มีลิงก์ให้นะครับ

00:21:47.300 --> 00:21:49.500
แล้วพรีเซนต์นี้เดี๋ยวส่งลิงก์ให้อีกทีนึง

00:21:49.500 --> 00:21:53.000
คือตอนแรกเราก็พยายามจะทำแบบลองเว็บราชการที่มันไม่ล่มอ่ะ

00:21:53.000 --> 00:21:54.000
ทำไงดีอะไรอย่างเงี้ย นะครับ

00:21:54.300 --> 00:21:57.000
เราก็เลยพยายามจะทำแบบ UI ง่ายๆ

00:21:57.300 --> 00:21:58.900
แล้วก็พยายามแจก นะครับ

00:21:59.100 --> 00:22:01.100
ก็มีแบบเฮดเดอร์แบบนู้นแบบนี้

00:22:01.100 --> 00:22:03.400
ตัวอย่างแหล่งข้อมูลไปดึงมาจาก WordPress ก็ได้นะ

00:22:03.900 --> 00:22:07.800
ไปดึงมาจาก Google Sheets แบบเมื่อกี๊ก็ได้นะ อะไรอย่างเงี้ย นะครับ

00:22:07.800 --> 00:22:12.200
แต่พอทำไปทำมา เอ๊ะ การที่เราจะต้อง maintain ทุกอย่างรู้สึกมัน

00:22:12.200 --> 00:22:13.100
เหนื่อยไปหน่อย นะครับ

00:22:13.400 --> 00:22:16.100
ผมก็เลยไปทำ thaiui.org นะครับ

00:22:18.200 --> 00:22:23.000
ซึ่งใช้วิธีง่ายที่สุดเลยว่า ผมขอฟันธงแล้วว่า ผมจะดูแลแค่ Astro

00:22:23.000 --> 00:22:26.300
ขี้เกียจดูแลทุกๆ อย่าง ทุกๆ HTML ไฟล์ ทุกๆ อะไรอย่างเงี้ย

00:22:26.300 --> 00:22:29.200
ไม่อยากดูแล แล้วก็ CSS ก็ขี้เกียจดูแลอยู่เหมือนกัน

00:22:29.200 --> 00:22:30.500
ก็ใช้ Tailwind ไปเลยละกัน

00:22:31.400 --> 00:22:33.400
แล้วเทมเพลตละ มีสวยๆ เยอะมั้ย

00:22:33.400 --> 00:22:34.800
เอ้าคนอื่นเค้าทำไว้เยอะอยู่แล้วนี่

00:22:34.800 --> 00:22:36.300
ผมแค่เติมภาษาไทยก็จบแล้วนี่นา

00:22:36.600 --> 00:22:41.000
ก็เลยบอกว่าโอเค งั้นอันนี้มันเป็น framework

00:22:41.000 --> 00:22:42.400
ที่คนอื่นเค้าทำอยู่แล้วนะครับ

00:22:42.400 --> 00:22:43.800
ของ Astro เนี่ยเค้าแจกกันเพียบเลย

00:22:44.100 --> 00:22:46.200
ผมก็บอกว่าเอาตัวนี้มาแล้วใส่ภาษาไทยให้ดู

00:22:46.200 --> 00:22:47.300
แค่นั้นเอง นะครับ

00:22:47.600 --> 00:22:50.000
ส่วนตัวนี้ก็เหมือนกันก็ใส่ภาษาไทยให้ดู นะครับ

00:22:50.700 --> 00:22:52.700
ตัวพวกนี้มันดียังไง นะครับ เนี่ย

00:22:53.000 --> 00:22:54.200
อันนี่ผมเขียนอย่างงี้ก็จริง

00:22:54.200 --> 00:22:56.300
แต่ว่าจริงๆ มันก็แค่เอาโค้ดมาใส่ฟอนต์ไทยนะ พี่

00:22:57.600 --> 00:22:59.900
มันดีเพราะว่าเขาก็มีแบบคิดมาให้แล้ว

00:23:00.200 --> 00:23:02.800
แล้วไลเซนส์มันก็คือเป็น open source หมดนะครับ

00:23:03.000 --> 00:23:04.800
อยากได้หน้าแรกเป็น SaaS

00:23:04.800 --> 00:23:05.800
อยากได้หน้าแรกเป็น startup

00:23:06.400 --> 00:23:08.700
น่าจะทำประมาณนี้นะครับ

00:23:09.000 --> 00:23:12.100
ซึ่งพวกนี้ก็คือ tailwind component หมดเลยนะครับ

00:23:12.500 --> 00:23:13.500
อยากได้แบบนี้

00:23:13.800 --> 00:23:15.300
เพราะฉะนั้นถ้าเราหยิบตัวนี้ไป

00:23:15.500 --> 00:23:17.500
แปลงเป็นภาษาไทยก็จบแล้วนะครับ

00:23:17.800 --> 00:23:20.200
แล้วที่ผมแปลงผมก็แปลงแค่หน้าแรกหน้าเดียวด้วย

00:23:20.400 --> 00:23:21.400
ก็เอาแค่นี้แค่ให้รู้ว่า

00:23:21.700 --> 00:23:23.100
ใส่ฟอนต์ไทยแล้วมันได้นะ

00:23:23.700 --> 00:23:26.200
แล้วก็ dark mode ก็มาพร้อมแล้วนะครับ

00:23:26.500 --> 00:23:29.600
ถ้ากดดาวน์โหลดก็ไปที่ GitHub ก็ fork ไปได้เลยนะครับ

00:23:29.900 --> 00:23:32.300
อันนี้ก็จะอยู่ใน GitHub ของ ThaiUI นะครับ

00:23:32.600 --> 00:23:35.000
แล้วก็เดี๋ยวพยายามจะทำพวกนี้มาแจก

00:23:35.400 --> 00:23:37.400
มากขึ้นเพื่อให้เห็น best practice ว่า

00:23:37.700 --> 00:23:40.600
เราใช้ของฝรั่งแล้วเราก็แปลงฟอนต์ไทยมา

00:23:40.700 --> 00:23:41.600
ก็นิดเดียวนะครับ

00:23:42.100 --> 00:23:44.300
แต่ว่าถ้ามีเกินเพิ่มขึ้นก็คือ

00:23:44.300 --> 00:23:45.600
นอกจากฟอนต์ไทยเนี่ย

00:23:45.600 --> 00:23:49.000
สิ่งที่เราต้องเจอก็คือบางทีฝรั่งเนี่ยมันจะมีเขาเรียกว่า line height

00:23:49.000 --> 00:23:49.600
ระยะระหว่างบรรทัด

00:23:49.900 --> 00:23:51.600
ที่ไม่ค่อยเหมาะกับภาษาไทยนะครับ

00:23:51.800 --> 00:23:54.500
ภาษาไทยมีไม้เอกไม้โทนึกออกไหมมีสระอูอะไรอย่างเงี้ย

00:23:54.500 --> 00:23:56.400
line height ที่เหมาะมันควรจะซัก 1.6

00:23:56.400 --> 00:23:57.700
จนถึงอาจจะ 1.8 เลย

00:23:57.800 --> 00:24:01.800
แต่ของฝรั่ง 1.1 1.2 อะไรอย่างเงี้ยมันก็ฟอนต์ก็จะบีบ

00:24:02.300 --> 00:24:02.800
กับ

00:24:03.300 --> 00:24:04.800
เขาเรียกว่า letter spacing นะครับ

00:24:05.000 --> 00:24:06.900
ฝรั่งเนี่ยทำ letter spacing แล้วสวย

00:24:07.300 --> 00:24:09.400
ฟอนต์ไทยพอทำ letter spacing แล้วมันพังนะครับ

00:24:09.800 --> 00:24:13.200
ผมรู้สึกว่ามันมีนิดเดียวเองที่จะต้องระวัง

00:24:13.200 --> 00:24:15.300
นอกนั้นเนี่ยพอเราเอามาจัดปุ๊บมันก็จบแล้วนะครับ

00:24:15.300 --> 00:24:17.400
ก็เลยพยายามจะเอาตัวนี้ออกมาว่า

00:24:17.800 --> 00:24:19.500
เดี๋ยวคงได้ทำอย่างอื่นเพิ่มมาอีกนะครับว่า

00:24:19.700 --> 00:24:21.300
มีอะไรที่มันเหมาะกับ

00:24:21.500 --> 00:24:23.700
แปลงเป็น UI ภาษาไทยนะครับ

00:24:24.500 --> 00:24:25.800
สุดท้ายนะครับ

00:24:25.800 --> 00:24:28.800
หลังจากนี้ถ้าอยากดูมากขึ้นนะครับ

00:24:29.300 --> 00:24:31.800
Astro เนี่ยผมว่าเขาทำเว็บได้ดีสุดๆ เลยนะครับ

00:24:31.800 --> 00:24:32.700
ครบวงจรมาก

00:24:33.900 --> 00:24:35.100
แล้วก็ใน

00:24:35.900 --> 00:24:37.200
resource นะครับ

00:24:37.700 --> 00:24:39.200
เขาเรียกว่าธีมนะครับ ก็คือ

00:24:39.200 --> 00:24:41.400
เราเอาธีมพวกนี้ไปโหลด แล้วก็แปลงฟรีเนี่ย

00:24:41.500 --> 00:24:42.400
อย่าง AstroWind เนี่ย

00:24:42.400 --> 00:24:43.600
เมื่อกี้ที่ผมทำก็เอาตัวนี้มา

00:24:43.900 --> 00:24:45.000
แล้วก็ฟรีด้วยนะครับ

00:24:45.000 --> 00:24:46.500
เขามีทั้งฟรีทั้งเสียอยู่ในนี้นะครับ

00:24:47.200 --> 00:24:48.600
ลองไปดูได้ แล้วเขาก็แบ่งเป็น

00:24:48.600 --> 00:24:49.600
category ไว้

00:24:49.800 --> 00:24:50.800
พอสมควรนะครับ

00:24:51.000 --> 00:24:52.200
เนี่ยเป็น blog เป็น e-commerce

00:24:52.900 --> 00:24:54.000
อะไรอย่างเงี้ยนะครับ

00:24:54.000 --> 00:24:55.200
แต่ว่าอย่างที่บอกว่า

00:24:55.200 --> 00:24:56.700
มันเหมาะกับเว็บ content นะครับ

00:24:56.700 --> 00:24:58.500
มันไม่ได้เหมาะกับเว็บที่มันมีระบบ

00:24:58.500 --> 00:25:00.300
เบื้องหลังซับซ้อนนะครับ เพราะว่า

00:25:00.300 --> 00:25:02.100
สุดท้ายเนี่ย ผมคิดว่า

00:25:02.400 --> 00:25:03.900
มันยังมีความหน่วงบางอย่าง

00:25:04.300 --> 00:25:06.000
ถ้าเราอยากได้ application ลื่นๆ นะครับ

00:25:06.000 --> 00:25:07.700
ไปทาง React ไปทาง Next เนี่ย

00:25:07.700 --> 00:25:08.700
ผมรู้สึกว่ามันลื่นกว่า

00:25:09.000 --> 00:25:10.100
แต่ถ้าเกิดอยากได้เว็บ

00:25:10.100 --> 00:25:10.800
content

00:25:11.100 --> 00:25:13.700
ที่ไม่ต้องดูแล แล้วก็ไม่ล่มนะครับ

00:25:13.700 --> 00:25:16.800
แล้วก็บริหารงานง่ายอะไรอย่างเงี้ยนะครับ

00:25:17.000 --> 00:25:17.900
ผมว่า Astro ก็

00:25:17.900 --> 00:25:19.700
ดีที่สุดเท่าที่ลองมานะครับ

00:25:21.100 --> 00:25:22.900
โอเคนะครับ คิดว่าน่าจะประมาณนี้นะครับ

00:25:23.900 --> 00:25:25.000
หมดเวลาพอดีนะครับ

00:25:25.000 --> 00:25:27.400
ไม่แน่ใจใครมีคำถามอะไรเพิ่มเติมก่อนมั้ย

00:25:33.500 --> 00:25:34.700
มีมั้ยครับ

00:25:34.700 --> 00:25:36.100
ส่วนสไลด์เดี๋ยวคงได้ฝาก

00:25:36.800 --> 00:25:38.000
ทางน้องภูมิเนาะ

00:25:38.300 --> 00:25:41.000
เดี๋ยวคงได้เอามาให้โหลดอีกทีนึงนะครับ ตัวนี้

00:25:41.000 --> 00:25:41.000
ครับ

00:25:44.200 --> 00:25:45.500
ใครเคยใช้บ้างแล้ว

00:25:45.500 --> 00:25:47.300
ใครเคยลองใช้กับ Astro บ้างแล้ว

00:25:47.300 --> 00:25:48.300
โอ้ เยอะเหมือนกัน โอเค

00:25:50.500 --> 00:25:52.600
นะครับ ก็ดูแล้วน่าจะโอเคแล้วนะครับ

00:25:53.700 --> 00:25:55.200
งั้นก็ขอบคุณทุกคนมากเลยนะครับ

00:25:55.200 --> 00:25:57.300
มีอะไรก็สอบถามกันได้ ขอบคุณครับ
