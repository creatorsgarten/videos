WEBVTT - Auto-generated by https://github.com/dtinth/autosub

00:00:37.864 --> 00:00:41.000
A big round of applause to welcome Mr. Alon Kiriati,

00:00:41.320 --> 00:00:44.279
Tech Lead from Dropbox from Israel.

00:00:44.760 --> 00:00:46.160
A big round of applause, please.

00:01:02.079 --> 00:01:02.920
Hi everyone.

00:01:03.079 --> 00:01:04.436
So excited to be today.

00:01:04.519 --> 00:01:06.600
Just like a great conference.

00:01:06.720 --> 00:01:08.440
Thank you everyone for being here.

00:01:08.640 --> 00:01:10.237
So my name is Alon Kiriati.

00:01:10.320 --> 00:01:11.637
I'm from the Tel Aviv site.

00:01:11.720 --> 00:01:12.840
I work for Dropbox.

00:01:13.200 --> 00:01:16.400
And today we're going to talk about Chrome extensions.

00:01:16.520 --> 00:01:18.477
So just to know you guys better, I'd like to take

00:01:18.560 --> 00:01:19.240
a short poll.

00:01:19.759 --> 00:01:22.517
And ask you like which browser are you using?

00:01:22.600 --> 00:01:24.120
So let's like raise hands.

00:01:24.240 --> 00:01:27.520
Who here uses Chrome?

00:01:28.040 --> 00:01:29.520
Anyone use Firefox?

00:01:31.680 --> 00:01:33.639
Safari, anyone?

00:01:34.159 --> 00:01:34.760
Not much.

00:01:35.159 --> 00:01:35.559
Edge?

00:01:36.159 --> 00:01:37.760
Edge with Chromium?

00:01:38.040 --> 00:01:39.036
Any brave people here?

00:01:39.119 --> 00:01:40.680
Yeah, I see some brave people here.

00:01:41.280 --> 00:01:41.680
Cool.

00:01:42.439 --> 00:01:45.639
So this talk will be focused on Chrome.

00:01:46.079 --> 00:01:48.636
But you'll also be glad to know that even if you

00:01:48.719 --> 00:01:51.676
don't use Chrome, most of the browsers use the same

00:01:51.759 --> 00:01:53.837
API and the same architecture.

00:01:53.920 --> 00:01:56.356
So you'll be able to understand everything except

00:01:56.439 --> 00:01:57.237
one browser.

00:01:57.320 --> 00:01:58.520
Any guesses which one?

00:01:58.840 --> 00:01:59.479
Shout out.

00:02:00.960 --> 00:02:01.880
So Safari.

00:02:02.079 --> 00:02:05.036
Well, Apple do their own thing in their own way.

00:02:05.119 --> 00:02:07.719
So Safari will be excluded today from this talk.

00:02:08.319 --> 00:02:09.280
So let's start.

00:02:09.479 --> 00:02:12.120
Well, my story starts a few years ago.

00:02:12.319 --> 00:02:14.160
I got this mail with this title,

00:02:14.560 --> 00:02:16.160
"What a great extension!"

00:02:16.440 --> 00:02:17.639
Well, I opened up the mail.

00:02:18.120 --> 00:02:22.436
And I see this recommendation for extension that helps

00:02:22.519 --> 00:02:26.319
me render the code I'm writing in different browsers.

00:02:26.480 --> 00:02:29.357
Well, as a front-end developer, I thought, well,

00:02:29.440 --> 00:02:31.080
it's like something I really need.

00:02:31.360 --> 00:02:33.837
So I went, I didn't think twice, and I downloaded

00:02:33.920 --> 00:02:35.120
the extension.

00:02:35.400 --> 00:02:37.516
Then I saw another extension that helped me measure

00:02:37.599 --> 00:02:40.200
the distance between two points on the screen.

00:02:40.720 --> 00:02:42.597
Well, another great extension.

00:02:42.680 --> 00:02:44.040
I went and downloaded this one.

00:02:44.480 --> 00:02:46.717
Another extension that helps me pick a color on

00:02:46.800 --> 00:02:53.039
the screen and more and more extensions.

00:02:53.239 --> 00:02:57.317
At the time, I thought that every extension is just

00:02:57.400 --> 00:02:59.480
another tool in my toolkit.

00:02:59.879 --> 00:03:02.796
So every extension will make me a better developer,

00:03:02.879 --> 00:03:04.520
a more efficient one.

00:03:06.040 --> 00:03:08.359
Well, until Hack Week came.

00:03:08.519 --> 00:03:09.559
So what is a Hack Week?

00:03:10.120 --> 00:03:13.076
Hack Week is an extended hackathon that we do at

00:03:13.159 --> 00:03:14.876
Dropbox twice a year.

00:03:14.959 --> 00:03:17.279
It's a one week that we can build everything we want.

00:03:17.799 --> 00:03:22.317
From product, new product, to business improvements,

00:03:22.400 --> 00:03:26.240
closing some tech debt, literally everything that we want.

00:03:26.720 --> 00:03:29.397
And in that Hack Week, I decided to build a Chrome

00:03:29.480 --> 00:03:33.600
extension that will help me manage my tasks better.

00:03:34.040 --> 00:03:37.320
Well, the extension was a huge success.

00:03:37.680 --> 00:03:41.800
It had a grand number of total one download.

00:03:42.080 --> 00:03:44.520
Well, the only one who downloaded it was me.

00:03:45.280 --> 00:03:48.640
But from every success, or should I say success,

00:03:49.000 --> 00:03:50.760
you can learn some lessons.

00:03:51.120 --> 00:03:54.716
So the two lessons I learned during this Hack Week was

00:03:54.799 --> 00:03:59.197
the first one is how easy it is to build a Chrome

00:03:59.280 --> 00:04:00.000
extension.

00:04:00.400 --> 00:04:04.397
It only took me about five minutes to download a demo

00:04:04.480 --> 00:04:06.720
from the internet and run the extension.

00:04:06.920 --> 00:04:10.757
And it took something about one hour to two to build

00:04:10.840 --> 00:04:13.280
all the functionality that we want for our extension.

00:04:13.519 --> 00:04:16.077
So for the rest of the Hack Week, we can just like add

00:04:16.160 --> 00:04:17.959
more and more features.

00:04:18.239 --> 00:04:19.920
Which leads me to the second point.

00:04:20.359 --> 00:04:24.277
The second lesson I learned is how powerful these

00:04:24.360 --> 00:04:25.999
extensions can actually be.

00:04:26.560 --> 00:04:29.357
So for every functionality, every feature that we added,

00:04:29.440 --> 00:04:33.160
we're surprised like, "Really? Can extension do this?"

00:04:33.560 --> 00:04:36.680
And then we added more functionalities and, "Really?

00:04:37.000 --> 00:04:39.320
Can extension also do that?"

00:04:40.000 --> 00:04:41.956
So this is what we're going to do today.

00:04:42.039 --> 00:04:44.880
The first thing that we're going to do is build

00:04:45.400 --> 00:04:47.400
together a Chrome extension.

00:04:47.680 --> 00:04:50.277
Then we're going to take this Chrome extension and

00:04:50.360 --> 00:04:52.320
turn it into a malicious one.

00:04:53.000 --> 00:04:56.277
So the goals here, the first goal is to build

00:04:56.360 --> 00:04:57.320
an extension.

00:04:57.479 --> 00:05:01.437
The second goal is not to make you guys, not to turn

00:05:01.520 --> 00:05:05.357
you guys into malicious hackers, but to rethink

00:05:05.440 --> 00:05:06.320
extensions.

00:05:06.440 --> 00:05:08.956
Stop thinking about them as these cute tools that you

00:05:09.039 --> 00:05:12.237
add to your browser, but think about them as dangerous

00:05:12.320 --> 00:05:19.199
things that can harm your computer and your company.

00:05:19.639 --> 00:05:20.437
So let's start.

00:05:20.520 --> 00:05:24.197
So what we're going to build today is, I think it's

00:05:24.280 --> 00:05:28.597
pretty cool and something that can be really helpful

00:05:28.680 --> 00:05:29.040
for us.

00:05:29.759 --> 00:05:32.717
Some it's a tool, extension, that will help us do

00:05:32.800 --> 00:05:35.079
a conversion, currency conversions.

00:05:35.199 --> 00:05:38.560
So I picked here amazon.co.uk, just a random site.

00:05:38.759 --> 00:05:40.760
I'm not getting any commission from them.

00:05:41.360 --> 00:05:44.717
So as you can see on the right top side, you can see

00:05:44.800 --> 00:05:45.437
the extension.

00:05:45.520 --> 00:05:49.997
And then once you click on it, so first we'll pick

00:05:50.080 --> 00:05:53.239
the product, which is a Kindle, just like a random one.

00:05:53.479 --> 00:05:56.197
And once you click the extension, you can pick your

00:05:56.280 --> 00:06:00.560
target currency, which in our case will be US dollars.

00:06:01.000 --> 00:06:02.720
As you can see, all the prices in pounds.

00:06:03.080 --> 00:06:07.680
So when we mark the price, it switches to dollars,

00:06:08.120 --> 00:06:08.799
as you can see.

00:06:09.039 --> 00:06:09.439
Cool.

00:06:09.720 --> 00:06:12.680
And also if you are from Europe, for example, you can

00:06:12.800 --> 00:06:19.440
choose euros, and you mark the price and it changes.

00:06:19.880 --> 00:06:25.159
Well, so let's start.

00:06:25.759 --> 00:06:28.157
But before we start, a short disclaimer.

00:06:28.240 --> 00:06:29.597
So, all the code you're going to see today

00:06:29.680 --> 00:06:31.599
in this extension will be pretty shitty.

00:06:32.039 --> 00:06:34.157
I'm sorry just like want to make this one simple.

00:06:34.240 --> 00:06:36.080
So I'm not going to use any TypeScript ES5, ES6,

00:06:37.199 --> 00:06:38.200
promises, let, const.

00:06:38.880 --> 00:06:41.000
Probably you saw all this in the other talks today.

00:06:41.240 --> 00:06:42.797
I really want to make this one simple.

00:06:42.880 --> 00:06:44.917
So even if you didn't like write JavaScript

00:06:45.000 --> 00:06:45.717
in last few years,

00:06:45.800 --> 00:06:48.479
you're going to be able to understand everything.

00:06:48.599 --> 00:06:50.516
Also I'm not going to cover any edge cases.

00:06:50.599 --> 00:06:53.600
I know sometimes developers can be nitpicky.

00:06:53.880 --> 00:06:56.200
So I promise you there are tons of bugs here.

00:06:56.319 --> 00:06:58.320
Just trying to understand the concept.

00:06:58.680 --> 00:07:00.077
The code is less important.

00:07:00.160 --> 00:07:02.197
But it doesn't mean that you should write code

00:07:02.280 --> 00:07:05.079
like this, of course.

00:07:05.599 --> 00:07:07.839
Well, so what is an extension?

00:07:07.960 --> 00:07:11.519
An extension is just a zip file with one

00:07:11.720 --> 00:07:12.680
required file.

00:07:13.280 --> 00:07:15.317
This is the `𝚖𝚊𝚗𝚒𝚏𝚎𝚜𝚝.𝚓𝚜𝚘𝚗`.

00:07:15.400 --> 00:07:19.116
Which is the glue for all the extension.

00:07:19.199 --> 00:07:22.120
It has all the configuration that you need.

00:07:22.639 --> 00:07:25.480
The permissions, all the files you're going to use,

00:07:26.160 --> 00:07:28.600
the name of the extension, icon, and so on.

00:07:29.720 --> 00:07:31.440
And then you can add more and more files.

00:07:31.759 --> 00:07:33.399
So let's see how it's built.

00:07:33.599 --> 00:07:35.479
So it's built from two contexts.

00:07:35.720 --> 00:07:39.477
The first context is the core of the extension.

00:07:39.560 --> 00:07:40.640
It has two parts.

00:07:40.960 --> 00:07:44.400
The first part is the HTML, the popup HTML.

00:07:45.000 --> 00:07:47.836
So which will be the HTML that you see once you

00:07:47.919 --> 00:07:48.877
click the extension.

00:07:48.960 --> 00:07:51.920
And then you can also load more JavaScript files.

00:07:52.440 --> 00:07:55.320
The second part is a `𝚋𝚊𝚌𝚔𝚐𝚛𝚘𝚞𝚗𝚍.𝚓𝚜` which runs

00:07:55.479 --> 00:07:57.120
always in the background.

00:07:57.240 --> 00:08:00.120
And it can interact with your browser and your

00:08:00.840 --> 00:08:01.560
extension.

00:08:01.840 --> 00:08:03.239
So let's see how it works.

00:08:03.599 --> 00:08:04.720
Let's write some code now.

00:08:05.080 --> 00:08:08.439
So as you can see here, it's only like simple HTML,

00:08:09.039 --> 00:08:10.840
nothing that you haven't seen before.

00:08:11.120 --> 00:08:13.199
It has a header which is a currency,

00:08:13.400 --> 00:08:16.760
then a dropdown with all the target currencies.

00:08:16.960 --> 00:08:19.279
And we also want to load a JavaScript.

00:08:19.479 --> 00:08:20.396
You can see here.

00:08:20.479 --> 00:08:23.836
We want to sync between the HTML and the local

00:08:23.919 --> 00:08:25.520
storage to save the currency.

00:08:25.759 --> 00:08:29.320
So once the HTML loads, it loads a JavaScript.

00:08:29.599 --> 00:08:33.479
And we take the value from the local storage.

00:08:33.839 --> 00:08:39.399
Once we make some change, we also save the value

00:08:39.519 --> 00:08:42.120
to the local storage.

00:08:42.560 --> 00:08:42.960
Cool.

00:08:43.200 --> 00:08:45.241
So also what we have in the `𝚋𝚊𝚌𝚔𝚐𝚛𝚘𝚞𝚗𝚍.𝚓𝚜`,

00:08:45.600 --> 00:08:47.240
we have the conversion function.

00:08:47.480 --> 00:08:50.557
The conversion function gets three parameter:

00:08:50.640 --> 00:08:54.040
from currency, to currency, and amount.

00:08:54.560 --> 00:08:58.280
And it returns the new currency and the new amount.

00:08:58.720 --> 00:09:02.599
So as you can see here, it's a XML HTTP request

00:09:02.800 --> 00:09:07.199
to an external site that returns all the currencies.

00:09:07.399 --> 00:09:11.797
And once it's returned, we do some like simple math

00:09:11.880 --> 00:09:16.240
just to make a conversion and return it back.

00:09:16.920 --> 00:09:19.159
So that's for the core context.

00:09:19.519 --> 00:09:21.920
But the more interesting, at least for me,

00:09:22.240 --> 00:09:23.680
is a content context.

00:09:23.839 --> 00:09:27.077
Because there you can actually interact with

00:09:27.160 --> 00:09:29.120
the user's browser.

00:09:29.720 --> 00:09:31.876
After the page finishes load,

00:09:31.959 --> 00:09:34.876
you can run some of your JavaScript.

00:09:34.959 --> 00:09:36.920
If you put in a `𝚌𝚘𝚗𝚝𝚎𝚗𝚝.𝚓𝚜`.

00:09:38.200 --> 00:09:40.000
So this is how it looks like.

00:09:40.480 --> 00:09:43.797
So we have an event listener to the mouse up.

00:09:43.880 --> 00:09:45.880
Every time the user clicks the mouse,

00:09:46.480 --> 00:09:47.517
we get this event.

00:09:47.600 --> 00:09:49.600
We take a selection from the window,

00:09:49.920 --> 00:09:51.399
what the user selects.

00:09:51.839 --> 00:09:55.559
Then we parse out the amount and the currency.

00:09:55.839 --> 00:09:57.797
And once we have the amount and the currency,

00:09:57.880 --> 00:10:01.520
the next thing we want to do is call our conversion

00:10:03.760 --> 00:10:04.400
function.

00:10:04.760 --> 00:10:08.560
Call our conversion function and inject the result

00:10:09.000 --> 00:10:10.880
back to the DOM.

00:10:11.640 --> 00:10:13.760
But we have some problem here.

00:10:14.360 --> 00:10:17.316
Well, we talked about two contexts and we can't call

00:10:17.399 --> 00:10:20.000
directly from one context to another.

00:10:20.440 --> 00:10:23.037
So thanks to Google who built this great mechanism

00:10:23.120 --> 00:10:24.077
of messaging,

00:10:24.160 --> 00:10:27.756
we can actually send message from the content to

00:10:27.839 --> 00:10:28.677
the background,

00:10:28.760 --> 00:10:30.480
from the content to the `𝚙𝚘𝚙𝚞𝚙.𝚓𝚜`,

00:10:30.920 --> 00:10:34.599
and vice versa on the other side.

00:10:35.279 --> 00:10:38.240
So let's see how it looks like.

00:10:38.920 --> 00:10:41.680
So on the sender side, which is the content,

00:10:42.040 --> 00:10:44.520
once we have the amount and the currency,

00:10:44.800 --> 00:10:45.717
we send the message.

00:10:45.800 --> 00:10:48.237
So the first parameter is null because we send

00:10:48.320 --> 00:10:51.160
the message to ourself, to our extension.

00:10:51.360 --> 00:10:54.399
The second parameter is a message.

00:10:54.839 --> 00:10:59.517
So the first, it's just a JSON with a type which is

00:10:59.600 --> 00:11:04.280
the type of the message to get converted currency,

00:11:04.560 --> 00:11:07.360
the amount, and the currency.

00:11:07.720 --> 00:11:11.080
Then the last parameter is the callback.

00:11:11.440 --> 00:11:14.436
So in our case, once we get the response,

00:11:14.519 --> 00:11:16.357
we want to inject the result to the DOM,

00:11:16.440 --> 00:11:23.520
as you can see here.

00:11:24.200 --> 00:11:26.921
And from on the other side, on the `𝚋𝚊𝚌𝚔𝚐𝚛𝚘𝚞𝚗𝚍.𝚓𝚜`,

00:11:27.360 --> 00:11:29.560
we want to receive the message.

00:11:29.959 --> 00:11:32.080
We check the header.

00:11:32.600 --> 00:11:35.996
And once we have the match, we can take the currency

00:11:36.079 --> 00:11:38.999
and the amount.

00:11:39.519 --> 00:11:41.756
We get the target currency from the local storage

00:11:41.839 --> 00:11:44.077
that we saved before from the extension,

00:11:44.160 --> 00:11:44.999
from the dropdown.

00:11:46.600 --> 00:11:52.560
And we can now call the conversion function

00:11:52.920 --> 00:11:58.199
and inject the result to the DOM.

00:11:58.959 --> 00:11:59.359
Cool.

00:11:59.800 --> 00:12:01.917
So this is all the code that you need for our

00:12:02.000 --> 00:12:02.357
extension.

00:12:02.440 --> 00:12:04.277
As you can see, a very cool extension.

00:12:04.360 --> 00:12:06.556
We built it with only a few lines of code.

00:12:06.639 --> 00:12:07.720
That's all we need.

00:12:08.320 --> 00:12:10.639
So now let's see it all from the beginning.

00:12:10.839 --> 00:12:12.756
But this time I'm going to show you the same demo,

00:12:12.839 --> 00:12:16.920
but I ask you to pay attention to the small details.

00:12:17.360 --> 00:12:19.316
Once this demo ends, I'll ask a question if you

00:12:19.399 --> 00:12:21.880
let's see if we paid attention to all the details.

00:12:22.199 --> 00:12:28.400
So let's see it now.

00:13:00.320 --> 00:13:03.399
Did you notice anything weird happening here?

00:13:04.079 --> 00:13:05.760
Someone maybe?

00:13:06.440 --> 00:13:08.640
Well, I'll show it again.

00:13:08.959 --> 00:13:13.960
This time, focus only on the URL top bar.

00:13:14.720 --> 00:13:18.039
So, as you can see, I pick the product that I want.

00:13:18.639 --> 00:13:20.160
I press enter.

00:13:20.880 --> 00:13:24.119
Then something was added there.

00:13:24.639 --> 00:13:27.200
A tag with a unique identifier.

00:13:27.320 --> 00:13:29.520
This tag wasn't added by the user.

00:13:30.079 --> 00:13:31.879
Also, it wasn't added by Amazon.

00:13:32.079 --> 00:13:33.960
It was added by my extension.

00:13:34.160 --> 00:13:36.879
So what I'm doing here, I'm trying to abuse

00:13:37.399 --> 00:13:40.237
the programs that Amazon and other sites have,

00:13:40.320 --> 00:13:42.720
which called referrer or affiliate,

00:13:42.920 --> 00:13:45.316
where you can distribute like a link to some product,

00:13:45.399 --> 00:13:47.436
and then you can get small amount of money

00:13:47.519 --> 00:13:49.600
from every time the user buy something.

00:13:49.800 --> 00:13:52.839
So I just use my extension to add this tag.

00:13:53.759 --> 00:13:55.159
Let's see now the code.

00:13:57.360 --> 00:13:59.597
So, if you look at what we're doing here,

00:13:59.680 --> 00:14:03.119
we use the event of 𝚘𝚗𝙱𝚎𝚏𝚘𝚛𝚎𝚁𝚎𝚚𝚞𝚎𝚜𝚝.

00:14:04.519 --> 00:14:06.680
We take the URL, we add a tag,

00:14:07.320 --> 00:14:10.996
and we redirect the user to the new site

00:14:11.079 --> 00:14:14.079
with a tag and our unique identifier.

00:14:14.199 --> 00:14:15.920
And it only works on Amazon now.

00:14:16.480 --> 00:14:19.756
Of course, I can extend this extension

00:14:19.839 --> 00:14:24.440
to also work with AliExpress, eBay,

00:14:25.040 --> 00:14:28.319
most of the sites have this affiliate program.

00:14:28.759 --> 00:14:30.957
And if you think this is not malicious enough,

00:14:31.040 --> 00:14:32.957
we can also go and maybe redirect the user

00:14:33.040 --> 00:14:34.360
to our shopping site,

00:14:35.040 --> 00:14:37.079
or even more malicious and more evil,

00:14:37.759 --> 00:14:40.039
we can also redirect the user to a phishing site,

00:14:40.560 --> 00:14:42.279
steal their credential,

00:14:42.399 --> 00:14:49.676
and then hack their accounts.

00:14:49.759 --> 00:14:51.479
Let's take a look at another example.

00:14:51.839 --> 00:14:56.119
So you could probably see that we can listen to events,

00:14:56.600 --> 00:14:59.680
and we can also call an external API.

00:15:00.440 --> 00:15:03.599
So why not taking two of them together

00:15:03.959 --> 00:15:06.399
and do a classic key logging?

00:15:07.079 --> 00:15:08.800
On the top, you can see the content JS.

00:15:09.440 --> 00:15:11.999
We just listen to every key event,

00:15:12.399 --> 00:15:14.560
and send every time the user press some key,

00:15:15.000 --> 00:15:16.876
we send the event to the background.

00:15:16.959 --> 00:15:19.637
And on the background, we take the key

00:15:19.720 --> 00:15:20.920
that the user pressed,

00:15:21.240 --> 00:15:23.360
and we send it to a malicious server.

00:15:23.800 --> 00:15:27.919
In my case, I built on top of a Firebase.

00:15:28.560 --> 00:15:30.639
Let's see how it works in practice now.

00:15:31.600 --> 00:15:36.360
On the left side, you can see the user's browser.

00:15:36.800 --> 00:15:39.919
And on the right side, you can see my database,

00:15:40.199 --> 00:15:42.320
which is a Firebase database, a malicious one.

00:15:42.839 --> 00:15:46.840
So the user use the extension as usual,

00:15:47.000 --> 00:15:48.760
nothing to suspect here.

00:15:49.360 --> 00:15:50.759
Everything works as usual.

00:15:51.000 --> 00:15:52.880
But when they're going to the bank accounts,

00:15:53.240 --> 00:15:55.597
as you can see, they're putting their username

00:15:55.680 --> 00:15:56.840
and password.

00:15:57.120 --> 00:15:59.240
Everything is sent to the server,

00:15:59.360 --> 00:16:00.839
to my malicious server,

00:16:01.279 --> 00:16:03.040
with the best password ever, of course, 123456.

00:16:05.440 --> 00:16:09.000
Whenever you can, use this password.

00:16:10.120 --> 00:16:12.597
So, if this hasn't frightened you enough,

00:16:12.680 --> 00:16:14.560
let's take a look at another example.

00:16:15.000 --> 00:16:20.160
Extensions can also take pictures from your browser.

00:16:20.600 --> 00:16:26.279
So in this case, I just use the event of going between

00:16:26.560 --> 00:16:28.560
changing the active tab.

00:16:29.000 --> 00:16:31.839
Every time the user changes the active tab,

00:16:32.519 --> 00:16:34.880
I'm taking a picture of the tab

00:16:35.560 --> 00:16:38.480
and send it to my malicious server.

00:16:39.240 --> 00:16:40.959
Let's see now an example.

00:16:41.319 --> 00:16:43.240
So on the left side, you can see,

00:16:43.639 --> 00:16:46.000
okay, so the user plays between the tabs.

00:16:46.560 --> 00:16:49.157
As you can see, all financial data is sent as a picture,

00:16:49.240 --> 00:16:50.720
all your user's database,

00:16:50.880 --> 00:16:53.519
your private code from GitHub,

00:16:53.959 --> 00:16:55.559
your currency wallet,

00:16:56.079 --> 00:16:58.199
and the worst thing you can think about,

00:16:59.920 --> 00:17:02.719
your embarrassing photos from Facebook.

00:17:03.720 --> 00:17:06.836
There are some pictures you don't want to send

00:17:06.919 --> 00:17:08.720
to a malicious server, believe me.

00:17:08.959 --> 00:17:10.637
And in this case, you can even see that

00:17:10.720 --> 00:17:12.840
the extension is not even there.

00:17:13.000 --> 00:17:16.077
The user maybe hid it or even forgot that it's there,

00:17:16.160 --> 00:17:21.320
but it always runs in the background.

00:17:21.600 --> 00:17:24.600
Well, luckily, or not,

00:17:25.280 --> 00:17:27.159
extensions don't want to steal your photos.

00:17:27.520 --> 00:17:30.440
What they really want to do is make money, of course.

00:17:30.799 --> 00:17:32.159
So how do they do it?

00:17:32.559 --> 00:17:35.397
The most common ways, I'm going to show you now.

00:17:35.480 --> 00:17:38.439
So the most common way is adware,

00:17:38.799 --> 00:17:42.680
taking advertisements and inject them to the DOM,

00:17:42.840 --> 00:17:43.640
to your DOM.

00:17:44.320 --> 00:17:46.560
The second thing is also collecting your data

00:17:46.919 --> 00:17:50.639
and sending it to third-party companies.

00:17:50.919 --> 00:17:54.000
Also, they can steal credentials, as we saw before.

00:17:54.440 --> 00:17:57.160
And of course, riding the trend of crypto.

00:17:58.600 --> 00:18:01.360
So they can mine crypto from the background JS,

00:18:02.000 --> 00:18:05.920
and also trying to hijack transactions from the user.

00:18:06.520 --> 00:18:08.117
For some case, I don't know why,

00:18:08.200 --> 00:18:17.760
Monero seems to be the most popular crypto.

00:18:18.320 --> 00:18:21.596
But the reason you don't see everyday malicious extensions

00:18:21.679 --> 00:18:24.280
is that we have the Chrome Web Store that protects us.

00:18:25.120 --> 00:18:28.080
And the Chrome Web Store uses the mechanism

00:18:28.280 --> 00:18:31.360
to try to find these malicious extensions.

00:18:31.480 --> 00:18:33.677
The first mechanism is automatic review

00:18:33.760 --> 00:18:35.560
that they do for every extension.

00:18:35.840 --> 00:18:37.877
The second one, which not always happen,

00:18:37.960 --> 00:18:42.320
is the manual review that they do to suspicious extensions.

00:18:42.440 --> 00:18:44.360
And the third one is reports from users,

00:18:44.520 --> 00:18:47.117
which is why it's very important to report and review

00:18:47.200 --> 00:18:47.999
if you see one.

00:18:48.520 --> 00:18:50.319
And with all those three,

00:18:50.640 --> 00:18:55.720
they get a great rate of 96.5% success rate.

00:18:55.880 --> 00:19:00.040
This is from 2015, and they're always trying to improve.

00:19:00.400 --> 00:19:03.517
Lately I've even seen some rumors of they're trying

00:19:03.600 --> 00:19:06.760
to integrate machine learning to their system.

00:19:07.200 --> 00:19:10.877
I actually couldn't find any evidence for that,

00:19:10.960 --> 00:19:12.877
but everyone wants to say machine learning

00:19:12.960 --> 00:19:14.000
because it's cool.

00:19:14.600 --> 00:19:17.760
Everyone needs to say machine learning once in a lifetime.

00:19:19.000 --> 00:19:22.956
So I told you in the beginning that I'm not going

00:19:23.039 --> 00:19:26.277
to help you try to move over this one,

00:19:26.360 --> 00:19:28.720
and not trying to crack this Chrome Web Store,

00:19:29.280 --> 00:19:30.799
because first it's not legal

00:19:30.960 --> 00:19:34.720
and my purpose is not to make you hackers.

00:19:35.080 --> 00:19:37.397
But from the past I can tell you that extensions

00:19:37.480 --> 00:19:41.037
that did pass this review used three techniques.

00:19:41.120 --> 00:19:42.760
The first technique is remote code,

00:19:43.240 --> 00:19:45.520
loading your code from a remote server.

00:19:45.799 --> 00:19:48.160
The second technique is dynamic code,

00:19:48.320 --> 00:19:49.197
loading dynamic code,

00:19:49.280 --> 00:19:51.600
for example in JavaScript, something like 𝚎𝚟𝚊𝚕.

00:19:52.200 --> 00:19:53.960
And also using obfuscation.

00:19:54.200 --> 00:19:56.596
If you don't know, obfuscation is a process of making

00:19:56.679 --> 00:19:58.840
a code not readable for humans,

00:19:59.240 --> 00:20:03.520
but readable by machines.

00:20:03.880 --> 00:20:08.040
So also Google launched some new update last year.

00:20:08.600 --> 00:20:12.360
So this is like trying to also close more gaps

00:20:12.799 --> 00:20:15.840
of security in malicious extensions.

00:20:15.960 --> 00:20:19.639
So the first thing that they released is more user controls,

00:20:19.919 --> 00:20:22.200
moving more responsibility to the users.

00:20:22.720 --> 00:20:26.197
So now you can right-click an extension from Chrome 70.

00:20:26.280 --> 00:20:29.197
You can right-click an extension and limit it

00:20:29.280 --> 00:20:31.600
to work only on specific site,

00:20:32.120 --> 00:20:35.880
or to never run in the background, for example.

00:20:36.320 --> 00:20:39.076
They also from now require you to only use

00:20:39.159 --> 00:20:40.596
narrowly scoped permission

00:20:40.679 --> 00:20:45.400
and not use more permission that you really need.

00:20:46.080 --> 00:20:51.280
They also restricted any use of obfuscation,

00:20:51.480 --> 00:20:52.479
as we saw before.

00:20:52.679 --> 00:20:54.677
So you can't use any more obfuscation.

00:20:54.760 --> 00:20:57.076
You can still use minify or things that will make

00:20:57.159 --> 00:20:58.720
your code more efficient,

00:20:59.039 --> 00:21:04.160
but nothing that deliberately make your code unreadable.

00:21:04.360 --> 00:21:07.476
They also require you to use two-step verification,

00:21:07.559 --> 00:21:09.437
just to make sure that your extension

00:21:09.520 --> 00:21:13.120
is not hijacked by malicious hackers

00:21:13.360 --> 00:21:18.359
and then they can push their malicious code.

00:21:19.039 --> 00:21:21.120
And also they added the manifest V3,

00:21:22.159 --> 00:21:24.919
which should make a huge revolution

00:21:25.039 --> 00:21:27.159
on the way permissions are built.

00:21:27.679 --> 00:21:30.037
So I'm not going to talk more about that,

00:21:30.120 --> 00:21:31.357
it's like a huge subject,

00:21:31.440 --> 00:21:34.800
you can go and read about it more.

00:21:35.480 --> 00:21:38.517
So this is not going to end any soon,

00:21:38.600 --> 00:21:40.357
like it's going to be like an endless race

00:21:40.440 --> 00:21:43.600
of a cat and mouse.

00:21:43.880 --> 00:21:49.400
So the hackers will try and find more ways

00:21:50.080 --> 00:21:52.760
to hack the extensions and find more ways

00:21:53.279 --> 00:21:54.720
to push malicious code,

00:21:55.039 --> 00:21:57.920
and Google will find more ways to close these gaps.

00:21:58.919 --> 00:22:01.880
So it's not going to end in the near future.

00:22:02.279 --> 00:22:07.679
So this moved the responsibility towards us, the users.

00:22:08.279 --> 00:22:11.157
And maybe we can stop thinking extensions are these

00:22:11.240 --> 00:22:13.076
cute tools that we add to the browser

00:22:13.159 --> 00:22:16.120
and start thinking about them as programs.

00:22:16.400 --> 00:22:19.639
Instead of thinking about them as we're adding an extension,

00:22:19.919 --> 00:22:22.080
think about installing an extension.

00:22:22.360 --> 00:22:23.757
So once you install program,

00:22:23.840 --> 00:22:27.879
all the world of the software that we know today is relevant.

00:22:30.200 --> 00:22:31.596
So how can you protect yourself?

00:22:31.679 --> 00:22:33.560
Same as you protect from every software.

00:22:38.279 --> 00:22:39.879
Before you install anything,

00:22:40.159 --> 00:22:42.120
make sure that you absolutely need it.

00:22:42.240 --> 00:22:46.400
Don't install something if you don't really need it.

00:22:47.240 --> 00:22:49.157
Also, before you install something,

00:22:49.240 --> 00:22:51.519
review, check for stars, users,

00:22:51.799 --> 00:22:57.120
check for the publisher, if it's a company you know or not.

00:22:57.880 --> 00:23:08.119
Remove every extension that you don't use anymore.

00:23:08.559 --> 00:23:12.080
Turn off extension that you temporarily don't use.

00:23:12.840 --> 00:23:15.677
Limit, as we saw few slides before,

00:23:15.760 --> 00:23:19.199
if you need an extension to a specific site,

00:23:19.480 --> 00:23:23.080
only limit the extension to work on this site.

00:23:23.760 --> 00:23:27.320
And you can also use multiple profiles in Chrome.

00:23:27.679 --> 00:23:29.799
For example, you can use one profile

00:23:30.080 --> 00:23:31.637
for all the development and then have all

00:23:31.720 --> 00:23:33.200
the crazy extensions,

00:23:33.320 --> 00:23:36.157
but don't load any private data there.

00:23:36.240 --> 00:23:40.880
And then have one profile for all your private data,

00:23:41.039 --> 00:23:42.596
but don't have any extension there.

00:23:42.679 --> 00:23:46.400
So you can always play with multiple profiles.

00:23:46.760 --> 00:23:49.760
And also most of you are probably developers,

00:23:49.880 --> 00:23:51.119
so you have a bonus part.

00:23:51.440 --> 00:23:57.277
You can read the code and report malicious extensions

00:23:57.360 --> 00:23:58.280
when you see them.

00:24:00.240 --> 00:24:03.400
So that's all. But what's next?

00:24:03.600 --> 00:24:07.000
So, as you see, go and build your extension.

00:24:07.200 --> 00:24:09.797
It's just a zip file with a manifest,

00:24:09.880 --> 00:24:12.240
one required file with the manifest.

00:24:12.520 --> 00:24:16.716
And also the rest of the extension is HTML and JavaScript,

00:24:16.799 --> 00:24:18.080
as you know it.

00:24:18.840 --> 00:24:20.797
Second thing, rethink extensions.

00:24:20.880 --> 00:24:22.956
Stop thinking about them as these cute tools

00:24:23.039 --> 00:24:25.319
that you add to your browser.

00:24:25.679 --> 00:24:27.716
Once this talk is over,

00:24:27.799 --> 00:24:29.357
I'd be happy if you take a few minutes,

00:24:29.440 --> 00:24:30.920
look on the extension that you have,

00:24:31.159 --> 00:24:33.080
remove the ones you can,

00:24:33.360 --> 00:24:36.840
and next time, before you add extension, think twice.

00:24:37.440 --> 00:24:39.640
The most important thing, be good.

00:24:40.039 --> 00:24:41.720
Take everything that you saw today,

00:24:42.000 --> 00:24:43.160
play with it locally,

00:24:43.360 --> 00:24:45.520
but don't distribute it to anyone.

00:24:45.760 --> 00:24:47.719
And if you're not sure if it's legit or not,

00:24:47.919 --> 00:24:50.280
you can always read the policies.

00:24:50.640 --> 00:24:52.320
They're very clear.

00:24:52.840 --> 00:24:55.280
This was just the tip of the iceberg.

00:24:55.440 --> 00:24:57.076
There are much to read here,

00:24:57.159 --> 00:24:59.560
so you can read more about permissions model,

00:25:00.080 --> 00:25:00.877
all the mitigation,

00:25:00.960 --> 00:25:03.120
how Google finds the malicious extensions.

00:25:03.240 --> 00:25:06.640
You have tons of information about it.

00:25:07.480 --> 00:25:08.560
So that was me.

00:25:09.840 --> 00:25:11.877
alon3030 at gmail, akiriati at LinkedIn,

00:25:11.960 --> 00:25:14.440
akiriati at GitHub, and alon at freecodecamp.

00:25:15.080 --> 00:25:17.917
And I really would like if you have some questions,

00:25:18.000 --> 00:25:21.680
I'll be near the Q&A for the next few minutes.

00:25:22.120 --> 00:25:26.000
I really welcome any questions or in one of these means.

00:25:26.600 --> 00:25:28.320
Well, that's all. Thank you very much.

00:25:29.000 --> 00:25:31.120
Thank you.

00:25:31.880 --> 00:25:33.716
Thank you so much, Mr. Kiriati.

00:25:33.799 --> 00:25:36.716
So he's going to stand by at the Q&A room.

00:25:36.799 --> 00:25:40.237
The Q&A room is just out of this theater and turn right,

00:25:40.320 --> 00:25:43.760
you'll see the Q&A room.