WEBVTT - Auto-generated by https://github.com/dtinth/autosub

00:00:02.960 --> 00:00:04.000
Hello guys.

00:00:05.600 --> 00:00:08.280
I hope this is translated correctly.

00:00:08.439 --> 00:00:09.797
สวัสดีครับ

00:00:09.880 --> 00:00:11.520
My name is Louis Yoong.

00:00:11.799 --> 00:00:15.040
I'm from Malaysia, Penang.

00:00:15.400 --> 00:00:17.680
I'm not sure if you all heard about Penang before.

00:00:21.279 --> 00:00:24.439
I'm a software developer from the APHIS Group.

00:00:24.720 --> 00:00:27.600
I'm also the Cypress Ambassador in the group.

00:00:27.880 --> 00:00:30.436
Previously, I was also the Google Developer Group

00:00:30.519 --> 00:00:31.720
Georgetown leader.

00:00:32.960 --> 00:00:35.400
This is a little introduction about myself.

00:00:36.000 --> 00:00:38.917
Today we will learn about modern JavaScript testing

00:00:39.000 --> 00:00:40.959
with Cypress, beyond the basics.

00:00:41.360 --> 00:00:44.117
This talk is very suitable for juniors,

00:00:44.800 --> 00:00:46.837
or if you never heard about Cypress before

00:00:46.920 --> 00:00:49.757
and want to learn about test cases.

00:00:49.840 --> 00:00:58.280
Let me introduce my background as a software developer.

00:00:58.600 --> 00:01:00.399
My company is a US company.

00:01:00.640 --> 00:01:04.239
We normally use custom floating data to protect

00:01:04.400 --> 00:01:05.719
species around the world.

00:01:06.799 --> 00:01:12.157
The species we protect include dolphins, whales,

00:01:12.240 --> 00:01:15.877
and turtles in the Indian, Pacific,

00:01:15.960 --> 00:01:17.560
and Atlantic Oceans.

00:01:18.560 --> 00:01:23.799
We also use new technology like AI to protect

00:01:24.159 --> 00:01:26.036
species observations.

00:01:26.119 --> 00:01:30.557
We're not just using vessels for tracking,

00:01:30.640 --> 00:01:33.399
but also using drones.

00:01:34.479 --> 00:01:37.917
You can imagine that we need to handle

00:01:38.000 --> 00:01:40.080
a lot of data daily.

00:01:40.200 --> 00:01:47.916
We need to ensure the data is correct for users

00:01:47.999 --> 00:01:49.117
and clients to reduce bugs.

00:01:49.880 --> 00:01:53.319
That's why we need Cypress.

00:01:54.520 --> 00:02:01.000
Cypress is for test cases and front-end testing

00:02:03.280 --> 00:02:04.356
using JavaScript.

00:02:04.439 --> 00:02:07.599
We can use JavaScript to write, run, and debug.

00:02:08.039 --> 00:02:13.079
As I mentioned, we have Cypress end-to-end testing tools

00:02:13.360 --> 00:02:15.477
and component testing tools.

00:02:15.560 --> 00:02:18.200
Today we'll focus more on end-to-end testing.

00:02:18.440 --> 00:02:20.957
End-to-end testing is more basic and easier

00:02:21.040 --> 00:02:23.637
for you to understand.

00:02:23.720 --> 00:02:29.316
We can easily preview in the browser after installation,

00:02:29.399 --> 00:02:30.999
with no complicated setup.

00:02:32.200 --> 00:02:34.837
It's very user-friendly and easy to start

00:02:34.920 --> 00:02:35.820
immediately after installation.

00:02:36.200 --> 00:02:39.560
It's also easy to integrate with CI/CD pipelines.

00:02:39.840 --> 00:02:45.397
It automates test executions tools like Azure, GitHub,

00:02:45.480 --> 00:02:46.639
GitLab, and AWS.

00:02:49.640 --> 00:02:53.560
Before you install, make sure your Node version is 16+

00:02:54.680 --> 00:02:57.239
and NPM version is 9+.

00:02:59.920 --> 00:03:02.560
After that, just run these two commands:

00:03:02.800 --> 00:03:05.680
`𝚗𝚙𝚖 𝚒𝚗𝚜𝚝𝚊𝚕𝚕 𝚌𝚢𝚙𝚛𝚎𝚜𝚜` in your existing project,

00:03:05.799 --> 00:03:07.760
and `𝚗𝚙𝚡 𝚌𝚢𝚙𝚛𝚎𝚜𝚜 𝚘𝚙𝚎𝚗`.

00:03:12.200 --> 00:03:13.480
Actually, there's a video.

00:03:17.400 --> 00:03:19.997
Okay, is something like that.

00:03:20.080 --> 00:03:22.719
This is the video previously I record.

00:03:23.480 --> 00:03:27.637
After you open, you will show some UI something like this.

00:03:27.720 --> 00:03:28.719
They will pop up the modal.

00:03:29.200 --> 00:03:32.359
They have something like a scaffold example spec

00:03:33.120 --> 00:03:34.436
and create a new spec.

00:03:34.519 --> 00:03:37.117
Because now I want you all more understanding what is

00:03:37.200 --> 00:03:39.559
the test case first, what is Cypress first,

00:03:39.799 --> 00:03:42.920
so we can just select the scaffold example.

00:03:43.200 --> 00:03:46.317
Cypress will give you a list of examples how we can write

00:03:46.400 --> 00:03:49.520
the test case even you don't have any experience.

00:03:49.640 --> 00:03:51.597
Okay, so something like that, you just tick all

00:03:51.680 --> 00:03:54.480
the configuration files, then click continue.

00:03:54.760 --> 00:03:57.677
And this one they will detect by your laptop.

00:03:57.760 --> 00:04:00.999
My laptop just has Google Chrome.

00:04:01.280 --> 00:04:04.959
So if you have Firefox, they will show Firefox.

00:04:05.879 --> 00:04:09.197
So it depends on what kind of environment and browser

00:04:09.280 --> 00:04:10.000
you need to test.

00:04:10.760 --> 00:04:12.957
But now I'm just using Google Chrome, then I just click

00:04:13.040 --> 00:04:17.077
Google Chrome and click start E2E testing in Google Chrome.

00:04:17.160 --> 00:04:21.120
E2E means end-to-end, okay?

00:04:21.720 --> 00:04:25.480
So you will see that they will pop up something over here.

00:04:26.080 --> 00:04:29.200
Is showing another browser in your dock.

00:04:30.520 --> 00:04:34.477
After that, you will see they show you a list of example

00:04:34.560 --> 00:04:34.960
files.

00:04:35.520 --> 00:04:36.800
Then you just click this.

00:04:37.320 --> 00:04:39.956
Okay, so this is some record video previously I record

00:04:40.039 --> 00:04:40.599
before.

00:04:42.320 --> 00:04:45.396
So they will show you how we can start.

00:04:45.479 --> 00:04:46.800
This is the to-do.

00:04:47.320 --> 00:04:52.159
And how Cypress will automatically read the test case.

00:04:53.520 --> 00:04:58.600
This is a list of examples how we can write very simple

00:04:59.320 --> 00:05:03.480
common test cases like using 𝚝𝚢𝚙𝚎, 𝚏𝚘𝚌𝚞𝚜, 𝚌𝚕𝚒𝚌𝚔,

00:05:04.000 --> 00:05:06.920
how we can check box, how we can select things,

00:05:07.160 --> 00:05:09.199
how we can trigger, and how we can scroll to.

00:05:09.800 --> 00:05:12.237
So this is one of the examples.

00:05:12.320 --> 00:05:15.399
Later our hands-on will show you the basics

00:05:15.720 --> 00:05:16.760
how we can start that.

00:05:18.000 --> 00:05:23.277
Before we start, let me try to explain to you

00:05:23.360 --> 00:05:26.956
this is the Cypress dashboard when you install,

00:05:27.039 --> 00:05:27.840
you will see that.

00:05:28.080 --> 00:05:31.799
So this is the test status menu and this is the URL.

00:05:32.000 --> 00:05:33.717
It depends on your local machines.

00:05:33.800 --> 00:05:35.477
And we have the viewport sizing also.

00:05:35.560 --> 00:05:37.797
We can test a specified viewport.

00:05:37.880 --> 00:05:40.637
Like sometimes we need to test the responsive or maybe

00:05:40.720 --> 00:05:45.717
we test the bigger screen or like 1440, something like that.

00:05:45.800 --> 00:05:46.880
So it depends on you.

00:05:47.319 --> 00:05:50.277
And so this is your app view and this one is your

00:05:50.360 --> 00:05:51.480
command log.

00:05:52.080 --> 00:05:54.360
So are you ready?

00:05:54.960 --> 00:05:56.439
Okay, yeah, I quite like that.

00:05:56.680 --> 00:05:59.236
The มู่แดง is very famous in Thailand right now.

00:05:59.319 --> 00:06:00.760
Yeah, I hope I can visit that.

00:06:02.400 --> 00:06:05.959
So this is the very simple Cypress syntax.

00:06:06.720 --> 00:06:09.637
I think you all need to know and very easy because

00:06:09.720 --> 00:06:12.760
it's English like 𝚌𝚢.𝚟𝚒𝚜𝚒𝚝 is visit the URL.

00:06:13.240 --> 00:06:15.317
𝚌𝚢.𝚝𝚢𝚙𝚎 is typing something.

00:06:15.400 --> 00:06:18.920
Like 𝚍𝚋𝚕𝚌𝚕𝚒𝚌𝚔 is double click the thing,

00:06:19.160 --> 00:06:21.999
like 𝚙𝚊𝚞𝚜𝚎, like 𝚐𝚎𝚝, like 𝚌𝚘𝚗𝚝𝚊𝚒𝚗𝚜, 𝚎𝚊𝚌𝚑.

00:06:22.160 --> 00:06:25.800
I think if you all have background about programming

00:06:26.080 --> 00:06:28.799
language, this is very easy for you all to start it.

00:06:30.160 --> 00:06:35.879
So this is one of the examples how we write the test case.

00:06:36.039 --> 00:06:37.360
So we need to describe.

00:06:37.599 --> 00:06:39.680
This is the definitions of Cypress.

00:06:40.120 --> 00:06:42.516
And also this is the test case scenario.

00:06:42.599 --> 00:06:43.357
What kind of scenario?

00:06:43.440 --> 00:06:44.840
We can create a list of scenarios.

00:06:45.319 --> 00:06:47.560
It depends what kind of situations.

00:06:47.680 --> 00:06:51.799
And also, the syntax is we need to visit this URL.

00:06:52.720 --> 00:06:54.676
Because normally we will run on a local machine.

00:06:54.759 --> 00:06:57.120
So this is one of the examples.

00:06:57.560 --> 00:07:00.439
So now, let's follow me.

00:07:01.039 --> 00:07:03.200
We try to do the login page.

00:07:03.520 --> 00:07:04.556
So give me a second.

00:07:04.639 --> 00:07:08.120
I try to show you the code.

00:07:10.599 --> 00:07:12.317
Okay, too small.

00:07:12.400 --> 00:07:16.839
Let me zoom a little bit.

00:07:18.280 --> 00:07:22.956
So this is very simple and because I try to hard code

00:07:23.039 --> 00:07:23.717
everything.

00:07:23.800 --> 00:07:27.080
So it's very simple React Next.js.

00:07:27.520 --> 00:07:31.236
So Cypress is not just used for React or Angular

00:07:31.319 --> 00:07:33.080
or you can just use pure HTML also,

00:07:33.400 --> 00:07:36.037
but I try using React and Next.js because

00:07:36.120 --> 00:07:37.480
my daily is using this.

00:07:37.759 --> 00:07:43.200
So after you install, you will go to your local file.

00:07:44.479 --> 00:07:48.597
So my login file is my login and my correct password's name

00:07:48.680 --> 00:07:49.076
is what?

00:07:49.159 --> 00:07:50.279
Because this is just the UI.

00:07:50.440 --> 00:07:51.719
I want you all to know that.

00:07:52.080 --> 00:07:56.477
So as usual, because we have the username,

00:07:56.560 --> 00:07:59.076
we have the input, and we have the password.

00:07:59.159 --> 00:08:04.477
So in Cypress how we gonna do is you will see here

00:08:04.560 --> 00:08:05.760
have the Cypress file.

00:08:06.360 --> 00:08:08.560
I hope you all are seeing clear.

00:08:09.639 --> 00:08:12.357
Then after E2E, you can create a new folder.

00:08:12.440 --> 00:08:13.157
It depends on you.

00:08:13.240 --> 00:08:16.560
Because my habit is I try to do something

00:08:16.680 --> 00:08:17.840
the folder is called demo,

00:08:17.960 --> 00:08:19.240
then I just show in demo.

00:08:19.599 --> 00:08:22.599
Then you just create a new file called login.cy.js.

00:08:24.199 --> 00:08:28.877
Then after that, we can do some scenario over here.

00:08:28.960 --> 00:08:32.120
So let me try to hide my code first.

00:08:32.640 --> 00:08:35.876
Okay, so let's see this test case scenario one.

00:08:35.959 --> 00:08:37.600
So we have two cases here.

00:08:38.440 --> 00:08:42.997
My first scenario is I want to test incorrect credentials.

00:08:43.080 --> 00:08:47.557
Like imagine sometimes the user type is not correct email

00:08:47.640 --> 00:08:50.316
and also the password is not correct.

00:08:50.399 --> 00:08:53.560
So what kind of error messages I expect to show up?

00:08:54.040 --> 00:08:55.040
So let's see.

00:08:55.320 --> 00:08:57.960
Like what I mentioned that, okay, let me try to

00:09:00.760 --> 00:09:03.240
Okay, give me a second.

00:09:04.720 --> 00:09:08.400
Normally, you all just try to ignore others first, okay?

00:09:08.839 --> 00:09:10.120
So, yeah, just this one.

00:09:10.720 --> 00:09:12.400
Then we npm Cypress open,

00:09:12.680 --> 00:09:14.760
then will pop up something like this.

00:09:15.440 --> 00:09:17.680
Then just click E2E Testing.

00:09:18.120 --> 00:09:19.680
So, they will pop up another Chrome.

00:09:20.000 --> 00:09:20.999
This is previous.

00:09:21.680 --> 00:09:22.996
Try to ignore that, okay?

00:09:23.079 --> 00:09:24.477
So, they will show us something like that.

00:09:24.560 --> 00:09:29.316
So, this is the UI, the overall is in the Cypress.

00:09:29.399 --> 00:09:32.359
So, just now, our folder is called 𝚕𝚘𝚐𝚒𝚗.𝚌𝚢.𝚓𝚜, right?

00:09:32.839 --> 00:09:34.876
So, we can just click over here.

00:09:34.959 --> 00:09:36.680
You can see the scenario is running now.

00:09:36.800 --> 00:09:38.837
So, means this test case is correct.

00:09:38.920 --> 00:09:40.520
You will see the green tick over here.

00:09:40.959 --> 00:09:43.440
Okay, I hope you all seeing clear, okay?

00:09:43.640 --> 00:09:48.720
So, you will see that the username is wrong.

00:09:48.959 --> 00:09:50.117
The password is wrong.

00:09:50.200 --> 00:09:53.037
That's why this credential, this scenario and incorrect

00:09:53.120 --> 00:09:54.876
credential is this is what we expect.

00:09:54.959 --> 00:09:56.800
So, the test case is correct.

00:09:57.000 --> 00:10:03.200
So, how about another second test case?

00:10:04.320 --> 00:10:04.720
Okay.

00:10:05.320 --> 00:10:08.037
So, imagine the second one is the user just direct

00:10:08.120 --> 00:10:09.520
click the submit button.

00:10:09.920 --> 00:10:14.876
So, the type, you can see, okay, I try to explain

00:10:14.959 --> 00:10:15.520
to you all.

00:10:15.839 --> 00:10:18.680
The 𝚌𝚢.𝚐𝚎𝚝, they will get the input ID.

00:10:19.200 --> 00:10:20.480
So, what kind of the input ID?

00:10:20.760 --> 00:10:23.517
The input ID is we can set over here.

00:10:23.600 --> 00:10:24.920
So, this is the input ID.

00:10:25.360 --> 00:10:28.439
This is one of the way we can detect the input.

00:10:28.839 --> 00:10:30.876
So, we can detect the input over here.

00:10:30.959 --> 00:10:32.359
So, we can just like this.

00:10:32.800 --> 00:10:36.440
Then type the incorrect password.

00:10:36.680 --> 00:10:38.359
So, you can see the incorrect password.

00:10:38.639 --> 00:10:40.839
And also, they will find the submit button.

00:10:41.040 --> 00:10:42.640
So, this is the submit button.

00:10:43.000 --> 00:10:44.999
So, they will find the submit button.

00:10:45.680 --> 00:10:48.439
And this is what we expect the result.

00:10:48.959 --> 00:10:52.120
And they will still continue stay on the login page

00:10:52.320 --> 00:10:54.400
because this is what we expect, right?

00:10:54.600 --> 00:10:58.277
So, the second scenario, you can see the second

00:10:58.360 --> 00:11:03.917
scenario is we should show the required input

00:11:04.000 --> 00:11:05.839
because the user didn't do any actions.

00:11:06.120 --> 00:11:07.840
Let's see the second ones.

00:11:08.160 --> 00:11:09.960
We can refresh again.

00:11:10.480 --> 00:11:12.080
So, you can see, yep.

00:11:12.720 --> 00:11:17.160
This test case is correct also because we expect

00:11:17.279 --> 00:11:23.599
is we need both the required is showing out.

00:11:24.120 --> 00:11:27.480
So, how about the last one?

00:11:28.240 --> 00:11:34.279
The last one, test case three is should successful

00:11:34.399 --> 00:11:36.597
and with the correct credentials.

00:11:36.680 --> 00:11:39.319
So, they will go to the base URL.

00:11:40.079 --> 00:11:42.120
Okay, so this is one of the example.

00:11:42.279 --> 00:11:43.917
It's run very fast, okay?

00:11:44.000 --> 00:11:46.277
So, yeah, every time you just save on your code,

00:11:46.360 --> 00:11:47.237
they will run very fast.

00:11:47.320 --> 00:11:50.237
So, you can see, yeah, this is the correct credentials.

00:11:50.320 --> 00:11:51.280
We can check that.

00:11:51.839 --> 00:11:54.597
Okay, yeah, the type, you can see they type

00:11:54.680 --> 00:11:58.837
the username is over here, and they type the password,

00:11:58.920 --> 00:12:00.277
then they will click the submit button

00:12:00.360 --> 00:12:01.919
and everything is correct.

00:12:02.279 --> 00:12:04.239
So, yeah, this is what we expected.

00:12:04.399 --> 00:12:07.080
So, this is the test case.

00:12:07.760 --> 00:12:09.080
Is very simple, right?

00:12:09.240 --> 00:12:09.640
Yeah.

00:12:10.480 --> 00:12:15.999
So, let's go to the slide.

00:12:16.279 --> 00:12:16.679
Okay.

00:12:17.079 --> 00:12:20.316
So, like what I mentioned that we have two type

00:12:20.399 --> 00:12:22.277
of the test case we can doing.

00:12:22.360 --> 00:12:24.837
One is the E2E and another one is component testing.

00:12:24.920 --> 00:12:27.876
Component testing, we can doing is more like

00:12:27.959 --> 00:12:30.277
the component button or the component modal.

00:12:30.360 --> 00:12:31.677
You all can test about that.

00:12:31.760 --> 00:12:33.800
Like make sure the modal was showing out or not.

00:12:34.079 --> 00:12:38.439
So, but now, we just focus on the E2E testing first.

00:12:38.959 --> 00:12:40.720
So, like what I mentioned, right?

00:12:41.399 --> 00:12:44.436
The best practice for the element selector is like

00:12:44.519 --> 00:12:47.480
just now we are using we are detect by the input ID,

00:12:47.880 --> 00:12:49.599
we are detect by the input type.

00:12:50.279 --> 00:12:53.199
So, sometimes the input ID, we will change it,

00:12:53.639 --> 00:12:55.917
and sometimes the class name, we will change it.

00:12:56.000 --> 00:12:58.560
So, what is the best practice is we try to use

00:13:00.519 --> 00:13:05.999
the data-cy and this one, you can rename by yourself

00:13:06.199 --> 00:13:08.037
or data-testId.

00:13:08.120 --> 00:13:12.280
These two is I recommend you all because also,

00:13:12.880 --> 00:13:16.517
we impossible we will change the data-cy or data-testId.

00:13:16.600 --> 00:13:19.797
But sometimes if you do the but I think less people

00:13:19.880 --> 00:13:21.440
doing pure HTML right now.

00:13:21.600 --> 00:13:23.436
But if you do a pure HTML, sometimes you will

00:13:23.519 --> 00:13:24.720
change the ID also.

00:13:24.920 --> 00:13:26.917
So, this one is impossible you will change because

00:13:27.000 --> 00:13:30.876
you write the test case already.

00:13:30.959 --> 00:13:34.196
But I will show you later on why we were doing that,

00:13:34.279 --> 00:13:39.200
but try to remember data-cy and data-testId, okay?

00:13:39.639 --> 00:13:42.000
So, this is another example.

00:13:42.360 --> 00:13:45.079
So, how we can add over here, but this is the login

00:13:45.199 --> 00:13:47.720
just now we testing one, right?

00:13:48.240 --> 00:13:49.599
So, this is another one.

00:13:49.959 --> 00:13:55.799
So, you can see just now we are okay.

00:13:56.399 --> 00:14:01.920
So, just now, we are 𝚌𝚢.𝚐𝚎𝚝 the input ID, right?

00:14:02.040 --> 00:14:04.959
But the best practice is we can just direct like this.

00:14:05.360 --> 00:14:07.879
data-testId, the user input.

00:14:08.079 --> 00:14:10.879
So, how we can just add this the data-testId?

00:14:11.519 --> 00:14:14.597
So, actually, data-testId and data-cy is both

00:14:14.680 --> 00:14:15.397
is working also.

00:14:15.480 --> 00:14:17.639
It depends on your habit, but my habit is

00:14:18.120 --> 00:14:19.676
I know this test ID, okay?

00:14:19.759 --> 00:14:23.996
I know this page have test case already, okay?

00:14:24.079 --> 00:14:25.720
So, we just add on over here.

00:14:26.320 --> 00:14:28.357
If you change anything over here, is not conflict

00:14:28.440 --> 00:14:30.116
with the ID or your class name.

00:14:30.199 --> 00:14:32.640
So, is more your code is more clean.

00:14:32.959 --> 00:14:35.199
Okay, so this is what I suggest it.

00:14:35.399 --> 00:14:40.196
So, after that, you can see we can check this test

00:14:40.279 --> 00:14:42.960
case over here, the login with the data-testId.

00:14:44.279 --> 00:14:48.839
Everything is look same, but I try to show to you

00:14:49.519 --> 00:14:51.000
why we need to use that.

00:14:51.720 --> 00:14:52.120
Okay.

00:14:52.720 --> 00:14:56.316
If you click this selector, you click this selector

00:14:56.399 --> 00:14:59.397
here, you are very easy to detect that.

00:14:59.480 --> 00:15:03.800
Oh, yeah, this is the input username data-testId

00:15:04.040 --> 00:15:06.200
and this is the username password.

00:15:06.560 --> 00:15:08.679
And this one is the submit button.

00:15:09.199 --> 00:15:11.996
Okay, so is more easy to recognize that, oh, yeah,

00:15:12.079 --> 00:15:14.157
this button is what, another button is what.

00:15:14.240 --> 00:15:16.200
Okay, this input is what, okay?

00:15:16.720 --> 00:15:17.876
So, this is the best way.

00:15:17.959 --> 00:15:22.157
And also later, I will show you that the most useful

00:15:22.240 --> 00:15:23.996
way why we need to use that, but this I will put

00:15:24.079 --> 00:15:24.800
on the behind.

00:15:25.120 --> 00:15:28.040
So, let's go through back the slide first.

00:15:33.480 --> 00:15:33.800
Okay.

00:15:34.360 --> 00:15:37.517
So, now, because my daily job is I need to handle

00:15:37.600 --> 00:15:38.316
a lot of the data.

00:15:38.399 --> 00:15:40.597
You imagine, I always need to see the map and need

00:15:40.680 --> 00:15:42.800
see little the species over here.

00:15:43.360 --> 00:15:49.840
So, now, we try to check is more other way part.

00:15:51.160 --> 00:15:53.000
So, okay.

00:15:53.600 --> 00:15:57.679
So, this is how we can check a list of the data.

00:15:58.199 --> 00:16:00.320
Is check the data is written correct or not.

00:16:00.600 --> 00:16:02.600
Okay, I hope you all see the thing clear.

00:16:03.600 --> 00:16:09.517
So, normally, I was using the MacBook, okay?

00:16:09.600 --> 00:16:10.479
And also the VS Code.

00:16:10.680 --> 00:16:12.159
So, I just remain that same.

00:16:12.600 --> 00:16:15.996
So, like now, because I want you all more clear

00:16:16.079 --> 00:16:18.556
about what is the returning data, so I didn't use

00:16:18.639 --> 00:16:19.559
the API yet.

00:16:19.680 --> 00:16:22.236
So, this is how I hardcoded the data for you all

00:16:22.319 --> 00:16:23.600
temporary know first.

00:16:24.120 --> 00:16:27.320
So, like now, we have the few observation data.

00:16:27.839 --> 00:16:30.519
So, we have the turtles, we have the dolphins,

00:16:30.839 --> 00:16:32.077
and we have the whales.

00:16:32.160 --> 00:16:35.876
So, each observations written different color.

00:16:35.959 --> 00:16:41.239
So, that's why you will see in the UI here.

00:16:46.600 --> 00:16:46.920
Okay.

00:16:47.600 --> 00:16:53.400
So you will see in the UI here, we have different color.

00:16:54.000 --> 00:16:57.576
Different color and when you hold the tooltip,

00:16:57.659 --> 00:16:58.960
it's showing different things.

00:17:02.560 --> 00:17:06.077
Then this is I think you all are quite familiar with,

00:17:06.160 --> 00:17:09.319
it's just a record and how we can load the data out.

00:17:09.919 --> 00:17:14.640
So when we write the test case,

00:17:15.600 --> 00:17:18.160
we need to do something like that.

00:17:18.559 --> 00:17:22.040
Let me try hide this first.

00:17:23.319 --> 00:17:26.437
So this is the example because I need to check

00:17:26.520 --> 00:17:28.879
the unit ID and also the latitude, longitude.

00:17:29.200 --> 00:17:31.917
And because now I need to let you all be more clear

00:17:32.000 --> 00:17:32.757
what happened right now,

00:17:32.840 --> 00:17:36.000
so I hardcoded the data out first.

00:17:36.160 --> 00:17:37.836
Actually, if you have the API,

00:17:37.919 --> 00:17:40.480
it's very easy, just put the API over there.

00:17:41.760 --> 00:17:44.720
Like normal how we fetch the API data and return it.

00:17:45.200 --> 00:17:49.079
So as usual, because I need to force them to log in first.

00:17:49.679 --> 00:17:50.797
Then you can see here,

00:17:50.880 --> 00:17:56.560
the scenario is we force the user to visit the login URL first.

00:17:56.679 --> 00:17:58.080
Then after that, they log in,

00:17:58.840 --> 00:18:01.596
they find the button to submit,

00:18:01.679 --> 00:18:05.397
but now I didn't use the data test ID,

00:18:05.480 --> 00:18:07.320
but this is one example I can show you.

00:18:07.880 --> 00:18:10.359
Then after login successful,

00:18:10.480 --> 00:18:12.320
they should go to this URL.

00:18:13.000 --> 00:18:18.640
So you can see the syntax over here is

00:18:18.840 --> 00:18:21.358
𝚌𝚢.𝚞𝚛𝚕().𝚜𝚑𝚘𝚞𝚕𝚍('𝚎𝚚', 𝚝𝚑𝚒𝚜𝚄𝚁𝙻).

00:18:21.640 --> 00:18:23.159
It's very easy and very clear.

00:18:23.679 --> 00:18:26.239
Then after that, they will load the map out.

00:18:26.919 --> 00:18:29.716
And they will check all the tooltip is showing out or not.

00:18:29.799 --> 00:18:31.797
So let's see and after that,

00:18:31.880 --> 00:18:35.357
they will check all the expected observation data

00:18:35.440 --> 00:18:36.999
is returned correctly or not.

00:18:37.679 --> 00:18:45.200
So you can see, they will log in,

00:18:45.400 --> 00:18:49.760
after login, they will directly go to these pages.

00:18:50.360 --> 00:18:52.517
So we can see all the data they expect,

00:18:52.600 --> 00:18:55.360
okay, this wheel, the latitude and longitude is from where,

00:18:55.720 --> 00:18:56.920
what kind of species.

00:18:57.200 --> 00:19:00.157
So this is not just for my project,

00:19:00.240 --> 00:19:01.318
actually can be for all projects.

00:19:01.480 --> 00:19:03.277
Like sometimes you have a list of data,

00:19:03.360 --> 00:19:06.476
you can check if the user is in this group or not,

00:19:06.559 --> 00:19:07.836
or is in another group.

00:19:07.919 --> 00:19:09.280
Sometimes mistake on the front end,

00:19:09.799 --> 00:19:10.677
we mapping wrong,

00:19:10.760 --> 00:19:13.319
or sometimes the backend returning wrong data,

00:19:13.440 --> 00:19:16.320
or sometimes maybe the user filter is wrong.

00:19:16.720 --> 00:19:18.797
So we can make sure everything we write,

00:19:18.880 --> 00:19:20.076
that's why we need to write the test case.

00:19:20.159 --> 00:19:22.277
We need to make sure things and also prove yourself

00:19:22.360 --> 00:19:23.840
and reduce more bugs.

00:19:24.320 --> 00:19:27.280
So this is one very good example.

00:19:30.440 --> 00:19:31.400
Let me try zoom.

00:19:42.520 --> 00:19:44.399
How about another scenario?

00:19:44.960 --> 00:19:49.199
Incorrect data and also like example,

00:19:49.360 --> 00:19:52.677
if you see the expectation data is actually turtle, right?

00:19:52.760 --> 00:19:53.840
You can see over here.

00:19:54.440 --> 00:19:56.076
Our expectation data is this,

00:19:56.159 --> 00:19:59.840
the species is turtle, but I change it to fish.

00:20:00.880 --> 00:20:03.716
So then, but I need to show the example,

00:20:03.799 --> 00:20:06.239
but if we have the API, it's easier.

00:20:06.520 --> 00:20:07.480
But now I'm hardcoding,

00:20:07.679 --> 00:20:10.840
let you all know first how we can do that.

00:20:12.640 --> 00:20:14.237
Then after that, we log in,

00:20:14.320 --> 00:20:16.760
we should fetch the incorrect data.

00:20:18.000 --> 00:20:21.760
So we can compare the correct data.

00:20:22.360 --> 00:20:24.517
The ID, if it's not correct,

00:20:24.600 --> 00:20:25.877
the species is not correct,

00:20:25.960 --> 00:20:28.479
they will show the error message.

00:20:28.679 --> 00:20:31.040
What is the expected species?

00:20:31.480 --> 00:20:33.800
And what's the data ID over here?

00:20:34.039 --> 00:20:35.677
So they will show the error message.

00:20:35.760 --> 00:20:37.440
It's very easy for you all to know

00:20:38.720 --> 00:20:40.920
what error you are facing right now.

00:20:42.600 --> 00:20:44.800
So you will see they will load.

00:20:46.600 --> 00:20:49.160
If the data is not correct,

00:20:49.400 --> 00:20:52.199
you will see they have the error over here.

00:20:52.480 --> 00:20:53.840
And they will show you that

00:20:54.240 --> 00:20:57.440
actually expected fish to equal turtle.

00:20:58.039 --> 00:21:00.716
It's actually the correct data is turtle,

00:21:00.799 --> 00:21:01.440
not fish.

00:21:01.640 --> 00:21:04.079
And they will show you on the visual line.

00:21:04.679 --> 00:21:06.277
The expected data over here,

00:21:06.360 --> 00:21:10.480
so you can very easily debug over here.

00:21:11.039 --> 00:21:13.476
So the line over here.

00:21:13.559 --> 00:21:14.716
So you will know that okay,

00:21:14.799 --> 00:21:17.279
this logic has something wrong.

00:21:18.200 --> 00:21:19.917
So for me, it's very useful,

00:21:20.000 --> 00:21:21.157
especially if you are the front end,

00:21:21.240 --> 00:21:24.359
you need to check all the data.

00:21:25.720 --> 00:21:27.120
Let's back to the slide.

00:21:31.679 --> 00:21:35.120
Okay, so another one like what I mentioned,

00:21:36.080 --> 00:21:39.199
we can connect to AWS, Azure,

00:21:40.000 --> 00:21:44.120
but other than that we can also directly use Cypress Cloud.

00:21:45.240 --> 00:21:49.877
Imagine we have a little team or big team,

00:21:49.960 --> 00:21:50.920
it depends on you.

00:21:51.120 --> 00:21:52.480
So if you are the leader,

00:21:52.600 --> 00:21:56.600
you can very easily check if your junior's work is correct,

00:21:57.440 --> 00:21:58.440
have bug or not,

00:21:58.600 --> 00:22:00.317
because everything we have the proof,

00:22:00.400 --> 00:22:01.237
they have the test case,

00:22:01.320 --> 00:22:02.720
they were running the test case.

00:22:02.880 --> 00:22:04.157
So if you are the manager level,

00:22:04.240 --> 00:22:06.196
it's easier for you to assess,

00:22:06.279 --> 00:22:08.720
and also very easy to let the client know that

00:22:09.039 --> 00:22:10.719
our data is correct.

00:22:11.600 --> 00:22:13.400
So have something, have proof.

00:22:14.559 --> 00:22:16.880
So how to connect to Cypress Cloud?

00:22:17.720 --> 00:22:20.079
You can just click this button when you first time,

00:22:20.880 --> 00:22:22.797
after you install existing project,

00:22:22.880 --> 00:22:24.400
you test run on your site,

00:22:24.679 --> 00:22:26.640
you just click to connect your project.

00:22:28.200 --> 00:22:29.999
Then they will show you,

00:22:30.159 --> 00:22:32.757
of course you need to register your organization,

00:22:32.840 --> 00:22:35.159
it's very easy, like just register the email.

00:22:36.880 --> 00:22:39.680
Then you just click the create new.

00:22:40.360 --> 00:22:44.997
So you can select your project name is public or private,

00:22:45.080 --> 00:22:46.119
it depends on you.

00:22:46.720 --> 00:22:48.240
After that you create a project,

00:22:48.559 --> 00:22:50.677
then you get the record key.

00:22:50.760 --> 00:22:52.239
You just copy the record key,

00:22:52.880 --> 00:22:56.920
and you try to run like this on your local,

00:22:57.320 --> 00:23:02.879
then after finish run they will show something.

00:23:03.159 --> 00:23:04.277
So after you run,

00:23:04.360 --> 00:23:06.759
they will show something like the quick setup.

00:23:07.480 --> 00:23:11.677
The quick setup will automatic detect your frontend framework,

00:23:11.760 --> 00:23:13.280
like my one is Next.js,

00:23:13.600 --> 00:23:14.877
like some people is Angular,

00:23:14.960 --> 00:23:16.196
they will automatic detect already,

00:23:16.279 --> 00:23:18.840
then you just click the detected.

00:23:19.200 --> 00:23:20.517
So you just click continue,

00:23:20.600 --> 00:23:22.920
install all dependency.

00:23:23.120 --> 00:23:26.520
So you just run your Cypress Cloud.

00:23:26.679 --> 00:23:27.557
If you want more detail,

00:23:27.640 --> 00:23:29.160
you can preview my YouTube.

00:23:29.640 --> 00:23:31.600
It's more detailed way how to connect

00:23:31.760 --> 00:23:34.759
your existing project to Cypress Cloud.

00:23:35.279 --> 00:23:37.959
I don't mind to get more subscriber, thank you so much.

00:23:40.799 --> 00:23:43.917
So other than how to connect Cypress Cloud,

00:23:44.000 --> 00:23:50.840
I also teach you all how to write test cases.

00:23:52.600 --> 00:23:54.360
Let me show you how to do Cypress Cloud first.

00:23:59.200 --> 00:24:05.877
So after you finish install Cypress Cloud,

00:24:05.960 --> 00:24:08.680
you will see the run here.

00:24:09.360 --> 00:24:10.320
They will view something,

00:24:10.919 --> 00:24:12.196
try to ignore the previous,

00:24:12.279 --> 00:24:14.117
I do some testing for myself

00:24:14.200 --> 00:24:16.117
because I want to give you the talk,

00:24:16.200 --> 00:24:18.000
so I try to do some testing.

00:24:18.559 --> 00:24:23.720
So we just click view runs in Cypress Cloud.

00:24:24.960 --> 00:24:27.117
You will see a lot of data over here,

00:24:27.200 --> 00:24:28.280
like how you testing run.

00:24:29.559 --> 00:24:33.199
And they detect by different branches.

00:24:33.559 --> 00:24:37.080
Like sometimes you have another branch,

00:24:37.360 --> 00:24:38.797
I have another branch,

00:24:38.880 --> 00:24:41.316
before we do the test case,

00:24:41.399 --> 00:24:44.239
we only merge the branch to main branch or master branch,

00:24:44.360 --> 00:24:45.279
and push to live.

00:24:46.360 --> 00:24:47.517
So this is one example,

00:24:47.600 --> 00:24:49.520
but now I just have one active branch.

00:24:51.399 --> 00:24:54.716
And every test case run,

00:24:54.799 --> 00:24:56.637
like some test case run have error,

00:24:56.720 --> 00:24:57.960
they will show the error.

00:24:58.559 --> 00:25:02.360
So you will see what kind of error over here.

00:25:02.960 --> 00:25:04.279
You can see the overview,

00:25:04.720 --> 00:25:07.277
this is previously I try test something,

00:25:07.360 --> 00:25:08.479
the incorrect data.

00:25:09.159 --> 00:25:10.716
And we can click this,

00:25:10.799 --> 00:25:14.759
you can see the test replay.

00:25:15.279 --> 00:25:16.440
They will show the video out.

00:25:21.520 --> 00:25:25.316
They have the video showing out, something like that.

00:25:25.399 --> 00:25:27.640
We can very easily preview that.

00:25:28.000 --> 00:25:30.679
And you see the video bar over here.

00:25:31.240 --> 00:25:34.159
They will show you this part have error.

00:25:34.559 --> 00:25:37.600
So it's very easy for you to debug.

00:25:39.399 --> 00:25:44.000
So okay, this is one example.

00:25:44.440 --> 00:25:48.037
And also here, they will show you what kind of code

00:25:48.120 --> 00:25:50.920
has issues, so you need to fix it very easily.

00:25:51.360 --> 00:25:53.237
And other than that, you also can preview

00:25:53.320 --> 00:25:54.320
the screenshot too.

00:25:55.200 --> 00:25:56.357
But this one, because of the error,

00:25:56.440 --> 00:25:57.720
I will show you the good one.

00:25:58.080 --> 00:25:58.360
Okay.

00:25:59.159 --> 00:26:03.039
And you can see the previous run, and what kind of

00:26:05.000 --> 00:26:07.960
environment, test code history,

00:26:08.320 --> 00:26:10.520
and who's pushing the code, something like that.

00:26:10.960 --> 00:26:13.879
And also, this is all the test result.

00:26:14.399 --> 00:26:20.559
And this is how the test result looks like,

00:26:20.799 --> 00:26:23.279
different scenario.

00:26:23.520 --> 00:26:26.357
So you can see this scenario here,

00:26:26.440 --> 00:26:28.956
because I try testing run few times,

00:26:29.039 --> 00:26:32.240
so yeah, sometimes it's overlapping.

00:26:32.360 --> 00:26:32.760
Okay.

00:26:33.039 --> 00:26:34.517
So you can see the status over here,

00:26:34.600 --> 00:26:38.720
you can filter what kind of pass status or fail status.

00:26:39.240 --> 00:26:41.200
And also you can filter the date,

00:26:41.559 --> 00:26:44.240
what kind of specific file you can just preview.

00:26:45.679 --> 00:26:45.999
Okay.

00:26:46.679 --> 00:26:48.439
And also what kind of spec.

00:26:49.039 --> 00:26:51.559
And you will know that per test case

00:26:51.679 --> 00:26:54.679
is running how many seconds.

00:26:55.000 --> 00:26:56.637
So if it's over the seconds,

00:26:56.720 --> 00:26:59.117
it means that yeah, is it internet issue

00:26:59.200 --> 00:27:00.559
or is it code issue?

00:27:01.000 --> 00:27:02.840
So you can slowly debug all that.

00:27:02.960 --> 00:27:05.279
And also, just now what kind of error.

00:27:05.799 --> 00:27:09.437
Okay, so other this is other stuff already.

00:27:09.520 --> 00:27:12.716
So yeah, I think this is very useful,

00:27:12.799 --> 00:27:14.196
especially if you run small team

00:27:14.279 --> 00:27:15.959
or you run bigger team, okay?

00:27:17.159 --> 00:27:19.000
It's quite suitable for you all.

00:27:19.760 --> 00:27:23.439
So also the analytics, you can see the analytics

00:27:23.799 --> 00:27:25.920
like total run is how many,

00:27:26.200 --> 00:27:28.879
like what kind of pass run, fail run.

00:27:29.480 --> 00:27:32.680
We can see the statistic over here.

00:27:33.360 --> 00:27:35.960
And the run durations, like what I mentioned,

00:27:36.159 --> 00:27:37.716
other than view in the latest run,

00:27:37.799 --> 00:27:40.560
we can preview over here with more details.

00:27:41.000 --> 00:27:44.479
And also the test suite size

00:27:45.159 --> 00:27:47.399
and what kind of top failures,

00:27:47.760 --> 00:27:50.000
and also what is the slowest test.

00:27:50.399 --> 00:27:51.836
Yeah, this is very important.

00:27:51.919 --> 00:27:53.316
So yeah, you can check that,

00:27:53.399 --> 00:27:54.840
oh what is the slowest test,

00:27:55.120 --> 00:27:57.357
because maybe the slowest test is because

00:27:57.440 --> 00:27:58.640
they have a lot of data,

00:27:58.799 --> 00:28:00.157
so maybe they will take more time.

00:28:00.240 --> 00:28:01.600
Does this make sense?

00:28:01.799 --> 00:28:04.640
Yeah, so you need to ask back by yourself.

00:28:05.000 --> 00:28:07.320
And also what is the most common error,

00:28:07.519 --> 00:28:10.436
because this is just now I'm doing the testing

00:28:10.519 --> 00:28:11.277
is the error one,

00:28:11.360 --> 00:28:12.397
so yeah they will show that,

00:28:12.480 --> 00:28:15.240
what is the common error over here.

00:28:15.840 --> 00:28:16.240
Okay?

00:28:16.440 --> 00:28:19.277
It's very easy to use and easy to understand,

00:28:19.360 --> 00:28:19.840
trust me.

00:28:20.320 --> 00:28:20.720
Yeah.

00:28:21.200 --> 00:28:25.596
So another one is the most easy way

00:28:25.679 --> 00:28:27.120
to writing the test case.

00:28:27.440 --> 00:28:30.557
If you are not front-end developer,

00:28:30.640 --> 00:28:31.960
or maybe you are a tester,

00:28:32.320 --> 00:28:34.720
but you need to try to write the test case,

00:28:34.840 --> 00:28:39.039
you can install this Cypress Chrome Recorder.

00:28:39.399 --> 00:28:42.239
So let me show you how to do that.

00:28:42.760 --> 00:28:44.159
Okay, let me log off first.

00:28:44.480 --> 00:28:47.839
After you install, you will see something like that.

00:28:48.519 --> 00:28:52.840
So we can just simply click the start recording.

00:28:53.279 --> 00:28:57.360
So I can click like this.

00:28:58.480 --> 00:29:02.877
Then I normally log in.

00:29:02.960 --> 00:29:05.040
So I just stop recording.

00:29:05.240 --> 00:29:09.640
You see that, I can just very simply copy this.

00:29:10.320 --> 00:29:10.720
Okay.

00:29:11.039 --> 00:29:12.677
That's why just now I mentioned that

00:29:12.760 --> 00:29:14.677
the best practice way is try to use

00:29:14.760 --> 00:29:18.400
the data-test-id or the data.cy

00:29:18.880 --> 00:29:20.797
to writing the test case, okay?

00:29:20.880 --> 00:29:22.397
Because you just very easy to copy,

00:29:22.480 --> 00:29:27.480
you don't have any duplicate class name, ID, yeah.

00:29:28.120 --> 00:29:30.160
Example, I can simply like this,

00:29:30.840 --> 00:29:34.000
then I can just paste over here.

00:29:34.600 --> 00:29:37.357
Yeah, it's very easy, especially for testers,

00:29:37.440 --> 00:29:41.917
because now slowly the testers try to learn

00:29:42.000 --> 00:29:43.079
this framework also.

00:29:44.399 --> 00:29:44.719
Okay.

00:29:45.399 --> 00:29:49.520
So other than that, okay, yup.

00:29:50.360 --> 00:29:53.157
We can every time copy and we can just reset

00:29:53.240 --> 00:29:54.836
or you want to resume also can.

00:29:54.919 --> 00:29:56.956
So this is one of the extensions in Chrome

00:29:57.039 --> 00:29:58.040
that is very easy to use.

00:30:01.559 --> 00:30:06.357
The next one is similar to Chrome extensions,

00:30:06.440 --> 00:30:09.039
but this happens on the control panel.

00:30:09.519 --> 00:30:11.680
In Chrome, you can right click,

00:30:12.200 --> 00:30:17.760
find More tools, and click Recorder.

00:30:18.399 --> 00:30:20.320
Let me show you how to do that.

00:30:27.279 --> 00:30:30.319
When you enter the page, it's something like that.

00:30:31.440 --> 00:30:34.079
Same, you just click Start recording.

00:30:34.440 --> 00:30:36.840
This depends on what kind of recording name you need.

00:30:37.519 --> 00:30:39.559
For me, I'll just randomly write this first.

00:30:40.320 --> 00:30:41.520
Start recording.

00:30:42.000 --> 00:30:46.600
I can click admin.

00:30:47.440 --> 00:30:48.759
Click the login.

00:30:49.440 --> 00:30:50.960
I stop recording.

00:30:51.519 --> 00:30:55.400
You will see all the code is here.

00:30:56.000 --> 00:31:03.479
You can just directly copy and paste over here.

00:31:04.399 --> 00:31:06.000
It makes your life easier.

00:31:06.240 --> 00:31:11.960
But I still prefer your scenario to be more official.

00:31:12.399 --> 00:31:16.359
Because it's impossible, your recording date is what.

00:31:18.360 --> 00:31:20.756
This is one of the ways.

00:31:20.840 --> 00:31:22.000
You can also replay.

00:31:23.519 --> 00:31:25.917
But this is different from the Cypress code.

00:31:26.000 --> 00:31:27.677
Cypress code is already recorded,

00:31:27.760 --> 00:31:29.277
you can preview multiple times.

00:31:29.360 --> 00:31:32.240
But if you refresh this one, it's gone.

00:31:33.960 --> 00:31:36.559
Other than that, you can download as what?

00:31:37.760 --> 00:31:40.320
Because we are using Cypress test, we can download.

00:31:41.279 --> 00:31:43.999
They have something like that.

00:31:51.279 --> 00:31:52.440
Very easy to open that.

00:31:53.559 --> 00:31:57.239
This is one way to make your life easier.

00:31:57.559 --> 00:31:58.920
This is the important point.

00:32:01.919 --> 00:32:06.840
Other than that, we can just delete.

00:32:07.360 --> 00:32:08.600
So it's back to normal.

00:32:10.120 --> 00:32:14.681
This is one way for you to write Cypress more easily.

00:32:14.839 --> 00:32:18.119
No need to think what to write next.

00:32:18.360 --> 00:32:27.639
But I suggest using 𝚍𝚊𝚝𝚊-𝚝𝚎𝚜𝚝-𝚒𝚍 or 𝚍𝚊𝚝𝚊-𝚝𝚎𝚜𝚝 𝚍𝚊𝚝𝚊-𝚌𝚢.

00:32:29.480 --> 00:32:35.400
It's easier to detect which input and button actions

00:32:35.760 --> 00:32:38.040
you are working on.

00:32:44.039 --> 00:32:48.799
Actually, I have an exciting gift for you all

00:32:49.080 --> 00:32:51.960
from Cypress, shipped from the US.

00:32:52.480 --> 00:32:54.880
You can scan this QR code.

00:32:56.120 --> 00:32:58.039
Help me do some survey here.

00:32:58.760 --> 00:33:02.237
We will select 5 to 10 winners.

00:33:02.320 --> 00:33:04.719
You will get swag from Cypress.

00:33:06.880 --> 00:33:07.600
They promise me.

00:33:08.880 --> 00:33:21.120
It's an early Christmas gift.

00:33:21.639 --> 00:33:24.400
I think my class is ending.

00:33:25.120 --> 00:33:26.720
If you have questions,

00:33:27.240 --> 00:33:32.120
you can ping me on LinkedIn or Twitter.

00:33:32.880 --> 00:33:36.840
Or ask me later as I'm still around here.

00:33:37.360 --> 00:33:39.836
If you want code examples,

00:33:39.919 --> 00:33:44.920
you can search my GitHub or ping me directly.

00:33:46.320 --> 00:33:47.959
I hope you enjoy the talk.

00:33:48.399 --> 00:33:49.999
I enjoy Bangkok also.

00:33:50.519 --> 00:33:51.436
Thank you so much.

00:33:51.519 --> 00:33:54.200
Thank you so much.

00:33:54.880 --> 00:33:58.120
Does anyone have any questions?

00:33:59.000 --> 00:34:01.119
I think they want to eat lunch already.

00:34:06.200 --> 00:34:06.917
Thank you so much.

00:34:07.000 --> 00:34:07.477
Thank you, Louis.

00:34:07.560 --> 00:34:12.520
Okay ครับ ขอบคุณครับทุกคน มีคำถาม 1 ท่าน

00:34:13.280 --> 00:34:16.559
Oh yeah, I see someone has questions.

00:34:16.839 --> 00:34:19.319
What is the event code for the survey?

00:34:19.839 --> 00:34:20.800
For the survey?

00:34:20.919 --> 00:34:21.119
Yeah.

00:34:22.440 --> 00:34:23.796
Do you have some example?

00:34:23.879 --> 00:34:27.877
I try to preview on your site.

00:34:27.960 --> 00:34:30.716
In the form, they ask for event code.

00:34:30.799 --> 00:34:30.957
In the form?

00:34:31.040 --> 00:34:31.556
Event code?

00:34:31.639 --> 00:34:33.799
Oh, maybe just write JavaScript 2.0.

00:34:36.679 --> 00:34:37.280
Okay, thank you.

00:34:38.440 --> 00:34:38.760
Yeah.

00:34:39.440 --> 00:34:40.349
Okay, thank you, Louis.

00:34:40.432 --> 00:34:44.479
You make difficult things become very easy.
