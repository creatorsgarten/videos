WEBVTT - Auto-generated by https://github.com/dtinth/autosub

00:00:04.319 --> 00:00:04.957
สวัสดีครับ

00:00:05.040 --> 00:00:06.316
ชื่อเม่นนะครับ

00:00:06.399 --> 00:00:10.320
ตอนนี้เป็น technical specialist อยู่ที่ Mohara นะครับ

00:00:11.320 --> 00:00:15.237
วันนี้ก็มา hiring - ล้อเล่นนะครับ

00:00:15.320 --> 00:00:18.000
ก็มาเล่าเรื่อง webAR เนี่ยแหละครับ

00:00:19.199 --> 00:00:22.436
ถ้าถามว่าอะไรคือ AR เนี่ย

00:00:22.519 --> 00:00:25.516
เราเข้าใจว่าทุกคนก็น่าจะรู้จัก AR กันมาแล้วแหละครับ

00:00:25.599 --> 00:00:27.917
แต่ว่าเผื่อมีบางคนอาจจะยังไม่รู้แล้วกัน

00:00:28.000 --> 00:00:29.160
เดี๋ยวอินโทรให้นิดนึง

00:00:29.960 --> 00:00:36.037
AR เนี่ยครับมันเป็นเทคโนโลยีที่เราเอา 3D ขึ้นมา overlay

00:00:36.120 --> 00:00:37.877
อยู่บน environment ของโลกความเป็นจริง

00:00:37.960 --> 00:00:40.839
โดยผ่านทางกล้องเนาะ

00:00:41.440 --> 00:00:44.037
AR เนี่ยมันจะแตกต่างจากสิ่งที่เรียกว่า VR

00:00:44.120 --> 00:00:46.519
ตรงที่เราไม่ต้องใส่ headset เนาะ

00:00:46.680 --> 00:00:48.119
หรือว่าแบบไม่ต้องใส่แว่นใช่มั้ย

00:00:48.360 --> 00:00:50.996
เพราะเราจะใช้โทรศัพท์หรือว่ากล้องมือถือเราเนี่ยแหละครับ

00:00:51.079 --> 00:00:55.120
ไม่ว่าจะเป็นกล้อง webcam หรือว่ากล้องมือถือก็ตามเนี่ย

00:00:55.840 --> 00:01:01.636
AR เนี่ยก็จะมาช่วยในการ deploy digital content ของเรา

00:01:01.719 --> 00:01:03.879
ไม่ว่าจะเป็น 2D 3D อะไรก็แล้วแต่ครับ

00:01:04.640 --> 00:01:05.960
ก็จะเข้ามาช่วยเราตรงนี้

00:01:06.080 --> 00:01:07.557
ถ้าเกิดดูอย่างในตัวอย่างเงี้ย

00:01:07.640 --> 00:01:12.597
เค้าก็จะใช้กล้องเค้านะครับ pan ไปที่หนังสือ

00:01:12.680 --> 00:01:17.676
หรือว่า content อะไรก็ตามที่อยู่บนโลกใบนี้เนี่ยครับ

00:01:17.759 --> 00:01:22.317
แล้วทีเนี้ยมันก็จะขึ้นเป็น digital content ขึ้นมาเนาะ

00:01:22.400 --> 00:01:24.200
สมมุติอันเนี้ยครับ

00:01:24.960 --> 00:01:26.437
ซึ่งเดี๋ยวเนี้ยก็มีแล้วแหละ

00:01:26.520 --> 00:01:29.040
อย่างตัวอย่างเนี้ยคือเป็นหนังสือใช่มั้ย

00:01:29.400 --> 00:01:32.197
หนังสือพวกประวัติศาสตร์ หนังสืออะไรก็แล้วแต่ครับ

00:01:32.280 --> 00:01:36.437
ก็สแกน เอากล้องไปจี้ที่ content นั้นใช่มั้ย

00:01:36.520 --> 00:01:38.719
แล้วก็จะขึ้นมาเป็น content 3 มิติ

00:01:39.360 --> 00:01:41.957
ก็ไม่ได้ช่วยเรื่องการเรียนรู้สำหรับเด็กๆ ยุคใหม่เนาะ

00:01:42.040 --> 00:01:44.797
แบบก็จะมีโอกาสที่ดีในการเรียนรู้ของพวกนี้

00:01:44.880 --> 00:01:47.320
เราจะได้รู้ว่าตรงเนี้ยมันคืออะไรใช่มั้ย

00:01:47.600 --> 00:01:48.396
แล้วตรงนี้มันเป็นยังไง

00:01:48.479 --> 00:01:50.840
กดคลิกเข้าไปดูมี info อะไรเงี้ยครับ

00:01:50.960 --> 00:01:55.399
ก็จะเป็นประโยชน์ของ AR ในปัจจุบันนี้นะครับที่เราใช้กัน

00:01:55.520 --> 00:01:58.277
อีกอย่างนึงก็คือเรื่องพวกทำ marketing นู่นนี่นั่น

00:01:58.360 --> 00:02:02.877
advertise ต่างๆ

00:02:02.960 --> 00:02:05.840
AR เนี่ยมันก็มีหลายชนิดเนาะ

00:02:06.520 --> 00:02:09.119
ชนิดของ AR เนี่ยมันก็จะมีแตกต่างกันไปนะ

00:02:09.479 --> 00:02:12.516
แต่ว่าตอนเนี้ยครับที่เค้าฮิตๆ กัน

00:02:12.599 --> 00:02:13.997
หรือว่าจริงๆ ทุกคนควรจะรู้จัก

00:02:14.080 --> 00:02:15.236
หรือว่าน่าจะรู้จักกันอยู่แล้ว

00:02:15.319 --> 00:02:17.796
คือ AR ที่มันต้องสแกนกับอะไรซักอย่างใช่มั้ยครับ

00:02:17.879 --> 00:02:19.357
เราเรียกว่า marker-based AR ครับ

00:02:19.440 --> 00:02:24.397
อันเนี้ย AR ตัวเนี้ยก็คือจะต้องมีรูปหรือว่า marker

00:02:24.480 --> 00:02:27.479
ให้รู้ว่าอันเนี้ยคือสิ่งที่เราจะสแกนใช่มั้ย

00:02:27.640 --> 00:02:31.236
แล้วก็จะไปขึ้น content ตาม QR code

00:02:31.319 --> 00:02:34.876
หรือว่า AR code ที่เราแบบทำไว้ครับ

00:02:34.959 --> 00:02:36.160
ก็แบบภาพแรกใช่มั้ย

00:02:36.280 --> 00:02:38.796
อีกอันนึงเนี่ยจะเป็นสิ่งที่เรียกว่า markerless AR

00:02:38.879 --> 00:02:40.957
ก็คือที่เราจะมาเล่นกันวันนี้แหละครับ

00:02:41.040 --> 00:02:42.477
ว่ามันทำยังไง

00:02:42.560 --> 00:02:51.917
markerless AR นี่คือผมไม่ต้องการอะไรเลยครับ

00:02:52.000 --> 00:02:55.156
ผมต้องการแค่กล้องที่เปิดอยู่ใช่มั้ย

00:02:55.239 --> 00:02:57.319
แล้วก็โลกความเป็นจริงของเรานี่แหละ

00:02:57.680 --> 00:02:59.200
เดี๋ยวเรามาดูกันว่ามันจะทำไง

00:02:59.840 --> 00:03:00.597
มีอีกอันนึงครับ

00:03:00.680 --> 00:03:03.839
อันนี้ถือว่าแบบเป็นอะไรที่ว้าวมาก

00:03:03.959 --> 00:03:07.479
ครั้งแรกที่ผมได้ไปเห็นก็คือ projection-based AR

00:03:07.840 --> 00:03:10.597
ก็คือเค้าจะเล่น AR กับตัวโปรเจคเตอร์เนี่ยแหละครับ

00:03:10.680 --> 00:03:15.880
ซึ่งไอ้อันเนี้ยมันดีตรงที่แบบมัน interact ได้เยอะกว่า

00:03:16.000 --> 00:03:20.317
หลายๆ คนอาจจะไม่รู้ว่าแบบฝั่งประเทศทางสิงคโปร์ครับ

00:03:20.400 --> 00:03:22.520
เค้าจะมีโปรเจคเตอร์ที่มัน touch ได้เนาะ

00:03:22.680 --> 00:03:25.076
ซึ่งไอ้เจ้าโปรเจคเตอร์พวกเนี้ยครับ มัน detect touch ได้

00:03:25.159 --> 00:03:28.440
กลายเป็นว่าเราเล่น AR กับ content แบบจริงๆ อ่ะ

00:03:29.879 --> 00:03:32.317
จะมีงานนึงที่ผมเคยทำกับฝั่งสิงคโปร์

00:03:32.400 --> 00:03:34.197
ก็คือเค้าจะใช้โปรเจคเตอร์นะครับ

00:03:34.280 --> 00:03:36.280
โปรเจคไปที่ wall เค้าเรียกว่า touch wall ใช่มั้ย

00:03:36.480 --> 00:03:39.800
ทีเนี้ย ก็จะเป็นการจิ้มไปตรงนี้ปุ๊บเนี่ย

00:03:40.159 --> 00:03:42.320
ก็มี content ขึ้นมาเลยบนกำแพง

00:03:44.239 --> 00:03:45.397
อันเนี้ยน่าสนใจมากครับ

00:03:45.480 --> 00:03:47.839
ก็หวังว่าจะได้เห็นในประเทศไทยในเร็วๆ นี้

00:03:48.200 --> 00:03:50.236
แล้วก็มีอันสุดท้ายเนี่ยครับ

00:03:50.319 --> 00:03:54.000
เป็นสิ่งที่เรียกว่า superimposition-based AR นะครับ

00:03:54.959 --> 00:03:57.360
ถามว่าแบบมันดีมั้ย

00:03:57.720 --> 00:04:00.716
ถ้าเราเห็นจากรูปหรือว่าใน screenshot เนี่ยครับ

00:04:00.799 --> 00:04:03.356
ก็ลองนึกภาพดูว่าโบราณสถานอ่ะครับ

00:04:03.439 --> 00:04:04.800
ถ้ามันพังๆ ไปแล้วอ่ะ

00:04:04.959 --> 00:04:07.559
แล้วถ้าเกิดเราอยากรู้ว่าตอนมันไม่พังเป็นยังไงอ่ะ

00:04:07.920 --> 00:04:09.880
เจ้าตัวเนี้ยแหละครับจะเข้ามาช่วยเราได้

00:04:10.200 --> 00:04:12.637
มันสามารถที่จะ detect เป็น object detection นะครับ

00:04:12.720 --> 00:04:15.957
แล้วก็สามารถ imposition model หรือว่า content

00:04:16.040 --> 00:04:16.836
ของเราเนี่ยเข้าไปได้เลย

00:04:16.919 --> 00:04:21.637
แล้วก็ด้วยข้อได้เปรียบของ AR ที่เป็น superimposition AR

00:04:21.720 --> 00:04:24.676
เนี่ยก็ตามชื่อเลยครับ

00:04:24.759 --> 00:04:27.000
ไม่ว่าจะเป็นแสงเงานู่นนี่นั่น detect ได้หมดเลย

00:04:28.360 --> 00:04:29.956
ถ้าแบบที่เห็นในรูปเนี่ย

00:04:30.039 --> 00:04:31.836
คือเค้าเอาไปสแกนที่โบราณสถานใช่มั้ย

00:04:31.919 --> 00:04:33.039
แล้วขึ้นมาเป็น silhouette ว่า

00:04:33.759 --> 00:04:36.237
ก่อนที่มันจะพัง หรือว่าก่อนที่มันจะมาอยู่ในสภาพเนี้ย

00:04:36.320 --> 00:04:37.799
มันเป็นยังไงมาก่อนใช่มั้ยครับ

00:04:40.520 --> 00:04:44.040
ทีนี้เนี่ย ถามว่า AR เนี่ยเค้าทำกันยังไงใช่ป่ะ

00:04:44.320 --> 00:04:46.917
หลายๆ คนก็น่าจะคุ้นเคยใช่มั้ย

00:04:47.000 --> 00:04:49.719
ว่า AR เนี่ยเราทำกันยังไงใช่ป่ะ

00:04:49.880 --> 00:04:52.600
ก็ส่วนใหญ่จะเห็นในมือถือใช่มั้ยครับ

00:04:52.800 --> 00:04:57.116
มือถือเนี่ยถ้าเป็น stack ไทย stack เราก็คือ React Native

00:04:57.199 --> 00:04:57.959
ใช่มั้ยครับ

00:04:58.160 --> 00:05:02.116
ก็มันก็จะมีพวก ARKit แล้วก็ ARCore นะครับ

00:05:02.199 --> 00:05:05.037
ซึ่ง ARKit เนี่ยก็เป็นของ iOS นั่นเอง

00:05:05.120 --> 00:05:06.797
หรือว่าเป็น Apple เป็น closed source นะครับ

00:05:06.880 --> 00:05:08.917
ก็ develop ด้วย Apple นี่แหละครับ

00:05:09.000 --> 00:05:11.877
ส่วนถัดมาเนี่ยจะเป็น ARCore นะครับ

00:05:11.960 --> 00:05:14.757
ARCore เนี่ยเป็น open source แล้วก็เป็นของ Google ครับ

00:05:14.840 --> 00:05:17.680
ก็ไปลองเล่นกันได้ถ้าใครจะทำลงมือถือ

00:05:18.199 --> 00:05:21.757
แต่ทีนี้เนี่ยครับ ประเด็นของทุกวันเนี้ยครับ

00:05:21.840 --> 00:05:27.200
ถามว่าคนส่วนใหญ่อ่ะครับ มีใครชอบโหลดแอปกันมั้ยครับ

00:05:27.520 --> 00:05:30.660
ก็คงไม่ใช่มั้ย

00:05:31.600 --> 00:05:34.439
เพราะว่าการโหลดแอปเนี่ย หนึ่งเลยเราต้องรอใช่ป่ะ

00:05:34.560 --> 00:05:37.040
กับ content ยุคเนี้ยครับ marketing หนักๆ

00:05:37.280 --> 00:05:41.197
ลองคิดดูว่า มี QR code มาให้เปิดกล้องสแกน

00:05:41.280 --> 00:05:42.197
แล้วลิงก์ไปที่เว็บ

00:05:42.280 --> 00:05:43.396
แล้วขึ้นมาเป็นหน้าตาแบบนี้

00:05:43.479 --> 00:05:46.160
อันไหนดีกว่ากันครับ

00:05:46.840 --> 00:05:47.680
ใช่มั้ย

00:05:48.160 --> 00:05:52.519
ก็ทีเนี้ยครับ มันก็จะมีอะไรครับ AR ที่มาใช้บนเว็บเนาะ

00:05:52.720 --> 00:05:55.360
ซึ่งเว็บ AR ทุกวันเนี้ย ถามว่ามันไปไกลมั้ย

00:05:55.600 --> 00:05:57.836
มันก็ไปไกลในระดับที่โอเคครับ

00:05:57.919 --> 00:06:01.080
แต่ว่าปัญหาของเจ้าเว็บ AR เนี่ยก็คือ

00:06:01.360 --> 00:06:05.799
ตอนเนี้ยเค้ายัง support ได้ไม่ค่อยเยอะเท่าไหร่เนาะ

00:06:06.479 --> 00:06:08.836
แต่ว่าข้อดีของเว็บ AR เนี่ยครับ

00:06:08.919 --> 00:06:09.917
ก็เหมือนที่บอกไปแล้วว่า

00:06:10.000 --> 00:06:11.477
หนึ่งเลยอ่ะ ไม่ต้องโหลดแอปใช่มั้ย

00:06:11.560 --> 00:06:15.157
สองก็คืออะไรครับ มัน access เร็วใช่ป่ะครับ

00:06:15.240 --> 00:06:16.920
ทุกคนสามารถแบบเข้าถึงได้

00:06:17.080 --> 00:06:19.637
แค่แบบ เฮ้ย มีเว็บ เข้าไปที่เว็บนี้สิ ปุ๊บ

00:06:19.720 --> 00:06:22.317
แล้วก็อ่ะมา แล้วลองๆ ไปสแกนดูใช่มั้ยครับ

00:06:22.400 --> 00:06:23.676
ก็ถ้าอย่างในตัวอย่างเนี่ย

00:06:23.759 --> 00:06:27.359
ก็คือเค้าจะเล่นกับพวก billboard ตามที่สาธารณะใช่มั้ยครับ

00:06:27.639 --> 00:06:29.637
ก็จริงๆ คอนเทนต์ในไทยเนี่ยครับ

00:06:29.720 --> 00:06:31.797
ตอนเนี้ยจะบอกว่าก็มีเยอะแล้วเหมือนกัน

00:06:31.880 --> 00:06:35.556
ไม่ว่าจะเป็นพวก advertise หรือว่าแคมเปญต่างๆ ครับ

00:06:35.639 --> 00:06:38.277
ก็สังเกตได้ว่าแบบตามขวดน้ำนู่นนี่นั่นอะไรเงี้ย

00:06:38.360 --> 00:06:41.437
ถ้าเค้ามี QR code ให้สแกนอยู่ข้างๆ ขวดอ่ะครับ

00:06:41.520 --> 00:06:43.960
ถ้าลองสแกนดูก็จะรู้เลยว่า อ๋อ

00:06:44.560 --> 00:06:48.997
เค้าก็จะลิงก์ไปหน้าเว็บเค้าที่มันเป็น AR คอนเทนต์ของเค้าอ่ะครับ

00:06:49.080 --> 00:06:50.637
แบบ เฮ้ย เล่นกับขวดเนี่ย

00:06:50.720 --> 00:06:53.956
หรือว่าแบบเราเล่นกับ marker billboard ตามข้างถนนเนี่ย

00:06:54.039 --> 00:06:55.277
มันจะได้อะไรใช่ป่ะครับ

00:06:55.360 --> 00:06:58.120
ก็อย่างพวกของ Nescafé นะครับ เค้าก็จะมีเยอะเนาะ

00:06:58.400 --> 00:07:01.280
แล้วก็จะมีอันล่าสุดที่เป็นของ Nestlé ครับ

00:07:01.919 --> 00:07:06.880
ก็มีเล่นสะสมแต้มเป็นเหมือน AR catalogue ของเค้าครับ

00:07:07.960 --> 00:07:10.357
ซึ่งเจ้าพวกเนี้ยครับ ก็จะเป็นเว็บ AR เนาะ

00:07:10.440 --> 00:07:13.637
แล้วก็เว็บ AR เนี่ยครับ ก็ถ้าเราอยากจะลองเล่นนะครับ

00:07:13.720 --> 00:07:16.160
แบบเราเป็นแบบงาน JavaScript ใช่มั้ย

00:07:16.360 --> 00:07:18.277
ก็จะมี AR.js ให้เราลองเล่นนะครับ

00:07:18.360 --> 00:07:22.319
ก็ AR.js เนี่ยจะเป็นแพลตฟอร์มที่เอาไว้สำหรับ

00:07:22.919 --> 00:07:25.157
ให้เราเล่น AR บนเว็บเนี่ยแหละครับ

00:07:25.240 --> 00:07:30.236
ก็จะเป็น npm package AR.js org เนี่ยนะครับ

00:07:30.319 --> 00:07:31.357
แล้วก็เป็น open source นะครับ

00:07:31.440 --> 00:07:34.800
อันนี้สามารถเข้าไปช่วย contribute ได้ เข้าไปโหลดได้

00:07:35.560 --> 00:07:40.519
แต่ว่าทีเนี้ยครับ อ้าว ดับไปแล้วครับ

00:07:41.160 --> 00:07:43.160
Come back in a sec

00:07:43.840 --> 00:07:47.520
โอเค ก็ทีเนี้ยพอพูดถึง AR.js ไปแล้วเนี่ย

00:07:48.000 --> 00:07:51.277
ก็อย่างที่บอกนะครับว่า AR.js เนี่ยมันไปไกลแล้วก็จริง

00:07:51.360 --> 00:07:54.037
แต่ว่าเทคโนโลยีที่เราจะทำ markerless AR เนี่ย

00:07:54.120 --> 00:07:56.239
มันยังไม่ support ไปถึง AR.js เนาะ

00:07:57.240 --> 00:08:01.116
ก็การที่เราจะทำเรื่อง markerless AR เนี่ย

00:08:01.199 --> 00:08:03.956
เค้าจะใช้แบบสิ่งที่เรียกว่า SLAM ครับ

00:08:04.039 --> 00:08:07.437
SLAM เนี่ยมาจากคำว่า simultaneous localization

00:08:07.520 --> 00:08:08.396
and mapping นะครับ

00:08:08.479 --> 00:08:12.037
ก็หลักการของไอ้เจ้าตัวเนี้ย หลักการของ SLAM เนี่ย

00:08:12.120 --> 00:08:14.917
เป็นเทคโนโลยีที่ทำให้เราแบบ map environment

00:08:15.000 --> 00:08:16.197
รอบๆ ตัวเราอ่ะครับ

00:08:16.280 --> 00:08:19.956
แล้ว stamp ไว้อ่ะ เป็นแบบ location ต่างๆ รอบตัวเรา

00:08:20.039 --> 00:08:24.396
ก็เดี๋ยวจะให้ดูว่า เฮ้ย จริงๆ แล้ว SLAM เนี่ยเค้าทำยังไง

00:08:24.479 --> 00:08:26.920
อันนี้คือ use case นะครับ use case ของ SLAM

00:08:27.440 --> 00:08:29.836
SLAM เนี่ย ก็เหมือนที่บอกไปแล้วว่า

00:08:29.919 --> 00:08:31.919
มันคือการ detect environment รอบตัวเราใช่มั้ย

00:08:32.120 --> 00:08:33.277
ก็ markerless AR ครับ

00:08:33.360 --> 00:08:35.477
แบบที่บอกไปแล้วว่า เฮ้ย ไม่ต้องการ object

00:08:35.560 --> 00:08:36.277
ไม่ต้องการอะไรเลย

00:08:36.360 --> 00:08:40.076
สิ่งที่ SLAM ทำนะครับ ก็คือการทำ keypoint detection ครับ

00:08:40.159 --> 00:08:42.919
ก็ใช้ image processing เนี่ยครับ กล้องใช่มั้ย

00:08:43.159 --> 00:08:44.037
กล้องของเราเนี่ย

00:08:44.120 --> 00:08:47.196
ก็คือในกล้อง feed อ่ะครับ

00:08:47.279 --> 00:08:50.200
ถ้าเกิดเราลงไปลึกๆ เนี่ย แต่ละเฟรมอ่ะครับ

00:08:50.600 --> 00:08:52.876
มันก็จะเอาไปถูก image processing เนาะ

00:08:52.959 --> 00:08:55.587
SLAM เนี่ยจะ image processing กล้องแต่ละเฟรม

00:08:55.680 --> 00:08:57.917
แล้วก็เป็น keypoint detection ออกมา

00:08:58.000 --> 00:09:01.160
อย่างในรูปเนี้ยครับ จะบอกว่าอันเนี้ยเป็นของ IKEA นะ

00:09:01.519 --> 00:09:04.760
เป็นแอปของ IKEA ที่แบบใช้ SLAM เข้ามาช่วย

00:09:05.160 --> 00:09:07.797
ลองคิดดูว่า เฮ้ย การที่เราจะซื้อเก้าอี้

00:09:07.880 --> 00:09:09.517
ซื้อเฟอร์นิเจอร์เข้าบ้านเนี่ยครับ

00:09:09.600 --> 00:09:12.117
ก็สิ่งที่มันลำบากคืออะไรครับ

00:09:12.200 --> 00:09:14.320
เราไม่รู้ว่าตอนวางแล้วมันจะเป็นยังไงใช่มั้ย

00:09:14.800 --> 00:09:17.316
แบบเราไปเจอใน Shopee อย่างเงี้ย เฮ้ย เราจะสั่ง

00:09:17.399 --> 00:09:19.277
เราไปเจอใน IKEA HomePro อะไรเงี้ย

00:09:19.360 --> 00:09:21.720
เราจะสั่ง แล้ววางแล้วมันจะเป็นยังไงอ่ะ ใช่ป่ะ

00:09:21.959 --> 00:09:24.680
แล้วขนาดมันจะพอดีมั้ยอะไรเงี้ย เราต้องไปวัดเหรอ

00:09:24.839 --> 00:09:26.756
ไม่ครับ เราอยู่ในยุค 2024 แล้ว

00:09:26.839 --> 00:09:29.200
ก็ IKEA เค้าก็มีแอปของตัวนี้ของเค้าใช่มั้ย

00:09:29.800 --> 00:09:32.397
ก็สิ่งที่ทำก็คือ อ่ะ อยากลองใช่มั้ย

00:09:32.480 --> 00:09:34.760
เปิดเลยครับ เปิดกล้องแล้วก็ลองเอาไป map ดู

00:09:34.959 --> 00:09:37.917
ใช่มั้ย ปุ๊บ ได้อันที่ต้องการปุ๊บ กดวาง

00:09:38.000 --> 00:09:39.480
อ้า รู้แล้วว่าเป็นยังไงทีนี้

00:09:39.640 --> 00:09:41.996
ก็อันนี้จะเป็นข้อได้เปรียบของ SLAM นะครับ

00:09:42.079 --> 00:09:44.477
เพราะว่าเหมือนที่บอกไปแล้วว่า SLAM เนี่ย

00:09:44.560 --> 00:09:46.797
จะไป detect environment รอบๆ ใช่มั้ย

00:09:46.880 --> 00:09:49.637
ด้วยแบบ keypoint detection ต่างๆ

00:09:49.720 --> 00:09:52.557
แล้วแบบ แล้วก็จะ map ว่า เฮ้ย รอบตัวเรามีอะไรใช่มั้ยครับ

00:09:52.640 --> 00:09:54.837
แล้วทีเนี้ยพอมันได้ keypoint มาแล้วอ่ะครับ

00:09:54.920 --> 00:09:56.717
เราก็สามารถที่จะวาง object ของเราเนี่ย

00:09:56.800 --> 00:09:59.040
ลงไปตรงที่ keypoint นั้นได้ใช่มั้ยครับ

00:09:59.680 --> 00:10:02.600
ก็อันนี้ก็จะเป็นหลักการของ SLAM แล้วก็ use case คร่าวๆ

00:10:02.880 --> 00:10:06.597
แล้วก็พวกเนี้ยครับ use case อ่ะไม่ได้มีแค่นี้นะครับ

00:10:06.680 --> 00:10:10.357
ก็ถ้าใครเคยเห็นพวก Pokemon Go อะไรพวกเนี้ยครับ

00:10:10.440 --> 00:10:12.237
ก็จะเป็น location-based ใช่มั้ยครับ

00:10:12.320 --> 00:10:13.917
แต่ว่า location-based เค้าอ่ะครับ

00:10:14.000 --> 00:10:15.756
ก็จะเอามารวมกับ SLAM ด้วยเช่นกัน

00:10:15.839 --> 00:10:18.436
ถ้าเราลองเปิดกล้องดูให้เป็นแบบ environment AR

00:10:18.519 --> 00:10:19.400
ของเค้าจริงๆ อ่ะ

00:10:20.480 --> 00:10:23.157
เจ้าตัว Pokemon Go เนี่ยก็จะ detect environment

00:10:23.240 --> 00:10:24.000
รอบๆ เราได้ใช่มั้ย

00:10:24.200 --> 00:10:27.040
ก็จะรู้ว่า เฮ้ย ตัวมันควรจะต้องขึ้นตรงไหนใช่มั้ยครับ

00:10:27.360 --> 00:10:29.360
อ่า อันนี้ก็จะเป็น use case ครับ

00:10:29.720 --> 00:10:33.196
แล้วทีนี้บางคนบอกว่า หน้าตามันเป็นยังไงครับ

00:10:33.279 --> 00:10:35.196
ก็อันนี้คือ ORB-SLAM นะครับ

00:10:35.279 --> 00:10:37.837
ก็เป็น library ของ SLAM อันนึง

00:10:37.920 --> 00:10:39.196
ที่พัฒนามาจาก OpenCV

00:10:39.279 --> 00:10:41.196
อ่า ชื่อนี้คุ้นๆ ใช่มั้ยครับ

00:10:41.279 --> 00:10:44.680
ก็หนีไม่พ้นนะครับ OpenCV ก็ทำ image processing ใช่ป่ะ

00:10:44.800 --> 00:10:47.316
ทีเนี้ยนะครับ เจ้าตัว ORB-SLAM เนี่ยมาจากคำว่า

00:10:47.399 --> 00:10:51.520
oriented FAST and rotated BRIEF SLAM ใช่มั้ยครับ

00:10:51.720 --> 00:10:55.637
ก็สิ่งที่มันทำนะครับ ก็คือ สิ่งที่ ORB ทำอ่ะครับ

00:10:55.720 --> 00:11:00.037
ก็คือจะ map object ต่างๆ ใช่มั้ย ที่อยู่รอบตัวเราครับ

00:11:00.120 --> 00:11:03.136
จะเห็นจากในกล้องทางซ้ายว่า เฮ้ย

00:11:03.219 --> 00:11:04.797
เค้าจะขึ้น keypoint detection

00:11:04.880 --> 00:11:08.996
ไม่ว่าจะเป็นแบบตามมุม ตาม edge ต่างๆ

00:11:09.079 --> 00:11:10.556
ของ object เราใช่มั้ยครับ

00:11:10.639 --> 00:11:15.640
แล้วทำการ map ไว้ใน space ของตัว AR

00:11:15.800 --> 00:11:17.157
ของ library เนี่ยครับ

00:11:17.240 --> 00:11:21.320
ก็เราก็จะเห็นว่า เฮ้ย เนี่ย พอมันจำๆๆๆ จำใช่มั้ย

00:11:21.519 --> 00:11:22.957
สิ่งที่เราได้กลับมาคืออะไรครับ

00:11:23.040 --> 00:11:25.640
เป็น point keypoint ของ data ใช่มั้ยครับ

00:11:26.040 --> 00:11:28.077
พอเราได้ keypoint ของ data พวกนี้มา

00:11:28.160 --> 00:11:29.637
เราไปทำอะไรต่อได้ครับ

00:11:29.720 --> 00:11:31.079
จริงๆ เราก็รู้แล้วใช่ป่ะ

00:11:31.360 --> 00:11:32.876
ทีเนี้ยกล้องเรารู้แล้วว่าอะไรครับ

00:11:32.959 --> 00:11:34.637
ว่า เฮ้ย โลกเรามันเป็นยังไงใช่ป่ะ

00:11:34.720 --> 00:11:36.640
หมายถึงสิ่งรอบตัวเรามันเป็นยังไงใช่มั้ย

00:11:37.279 --> 00:11:39.277
แล้วทีเนี้ยครับ นี่ก็จะเป็นเหตุผลว่า

00:11:39.360 --> 00:11:41.117
เฮ้ย ทำไม markerless AR เนี่ย

00:11:41.200 --> 00:11:43.797
มันถึงวางได้โดยไม่ต้องใช้ marker หรือว่าอะไรเลย

00:11:43.880 --> 00:11:44.517
เพราะว่าอะไรครับ

00:11:44.600 --> 00:11:46.677
เพราะมันรู้อยู่แล้วว่ารอบตัวเราเนี่ยมีอะไรบ้าง

00:11:46.760 --> 00:11:49.719
เราวางตรงไหนได้บ้างใช่มั้ยครับ

00:11:50.399 --> 00:11:53.797
แล้วก็อันนี้ครับจะเป็น key feature หลักๆ ของตัว ORB นะครับ

00:11:53.880 --> 00:11:57.677
ก็เหมือนที่บอกไปแล้วว่าตัว ORB เนี่ยจะใช้ keypoint detection

00:11:57.760 --> 00:11:58.157
ใช่มั้ยครับ

00:11:58.240 --> 00:12:00.597
เป็นการ detect ถ้าเราดูตาม screenshot เนี่ย

00:12:00.680 --> 00:12:02.436
ก็จะเป็น detect edge หรือว่า corner

00:12:02.519 --> 00:12:04.800
หรือว่า surface ต่างๆ ใช่มั้ยครับ

00:12:05.480 --> 00:12:08.840
ให้ library เนี่ยเอาไปใช้ต่อได้

00:12:09.240 --> 00:12:12.640
แล้วทีนี้ถัดมา ข้อดีของ ORB เนี่ยคืออะไร

00:12:12.800 --> 00:12:15.637
ORB เนี่ยมันจะดีกว่า image processing ทั่วไป

00:12:15.720 --> 00:12:17.120
ตรงที่มันเร็วใช่มั้ยครับ

00:12:17.320 --> 00:12:19.279
แล้วมันก็เป็น real-time tracking ด้วย

00:12:19.480 --> 00:12:21.397
พอมันเป็น real-time tracking เนี่ย

00:12:21.480 --> 00:12:24.196
การที่เราจะ image processing frame by frame

00:12:24.279 --> 00:12:28.000
จากกล้องเข้ามาที่เป็น feed มันก็ง่ายใช่มั้ยครับ

00:12:28.160 --> 00:12:31.079
ทีนี้พอเค้าได้ตรงนี้มาแล้ว

00:12:31.480 --> 00:12:32.996
สิ่งที่เค้าเอาไปทำครับ

00:12:33.079 --> 00:12:36.277
เค้าไม่ได้เก็บ data หรือว่า keypoint พวกนี้ไว้เฉยๆ

00:12:36.360 --> 00:12:38.157
สิ่งที่เค้าทำคือเค้าจะเอาไป map ครับ

00:12:38.240 --> 00:12:42.119
map กับตัว environment 3D ที่ตัว ORB ครับสร้างขึ้นมา

00:12:44.360 --> 00:12:46.196
ถ้าเกิดดูจาก visualize เนี่ยครับ

00:12:46.279 --> 00:12:49.320
เค้าก็จะเอา keypoint มา map ใช่มั้ย

00:12:49.519 --> 00:12:51.996
ว่าเฮ้ยตรงนี้มันอยู่ตรงไหน ตรงนี้อยู่ตรงไหนใช่มั้ยครับ

00:12:52.079 --> 00:12:57.160
ข้อดีของ ORB เนี่ยคือมันสามารถปิด loop ได้

00:12:57.720 --> 00:13:00.280
บางคนงงว่า เอ๊ย ปิด loop คืออะไรใช่ปะ

00:13:00.399 --> 00:13:02.599
loop closure เนี่ยครับมันสำคัญตรงไหนใช่มั้ย

00:13:03.240 --> 00:13:08.079
เคยถ่าย panorama แล้วแบบมันไม่จบซักทีปะ

00:13:08.399 --> 00:13:10.679
จริงๆ แล้วมันควรจะหมุนได้ 360 ใช่มั้ย

00:13:10.959 --> 00:13:13.160
แบบหมุนไปแล้วแบบ เอ๊ย มันเกินได้ยังไงวะ

00:13:13.519 --> 00:13:15.837
ก็นั่นก็คือ loop มันไม่ closure ใช่มั้ยครับ

00:13:15.920 --> 00:13:19.316
แต่ว่าด้วยความที่ ORB มันทำ keypoint detection

00:13:19.399 --> 00:13:20.797
แล้วก็ mapping ไว้ครับ

00:13:20.880 --> 00:13:23.797
มันทำให้มันรู้ว่า เอ๊ย ตรงไหนมันวนกลับมาแล้ว

00:13:23.880 --> 00:13:26.519
แล้วตรงไหนมันควรจะจบ หมายความว่าอะไรครับ

00:13:26.920 --> 00:13:29.279
ถ้าเราเดินรอบห้องนี้ด้วย ORB ครับ

00:13:29.680 --> 00:13:34.200
เราจะสามารถสร้าง keypoint ของห้องนี้เลยใช่มั้ยครับ

00:13:34.639 --> 00:13:36.440
แล้วพอมันเป็นถ้านี้ครับ

00:13:37.079 --> 00:13:40.000
กลายเป็นว่า เฮ้ย เราสามารถ deploy ของได้

00:13:40.240 --> 00:13:43.200
ไปบน keypoint นี้ใช่มั้ยครับ

00:13:44.360 --> 00:13:51.040
ทีนี้ถามว่า แล้วทำไมเราต้องทำขึ้นมาด้วย

00:13:51.199 --> 00:13:53.412
ทำไมต้องใช้ ORB เราใช้ third-party ได้มั้ย

00:13:54.466 --> 00:13:57.957
จริงๆ WebAR เนี่ยครับ ถ้าเป็นแบบ third-party

00:13:58.040 --> 00:14:00.196
ทุกวันนี้ครับที่ทำ SLAM ดีๆ ได้นะ

00:14:00.279 --> 00:14:02.157
ที่เป็นแบบทำ keypoint detection

00:14:02.240 --> 00:14:04.756
วางของไปบนโลกความเป็นจริง

00:14:04.839 --> 00:14:06.996
หรือว่า environment ที่เราต้องการเนี่ยครับ

00:14:07.079 --> 00:14:08.760
ก็มี 2 เจ้าใหญ่ๆ นะ

00:14:09.000 --> 00:14:11.277
ก็คือเจ้าแรกครับชื่อ 8th Wall

00:14:11.360 --> 00:14:15.637
8th Wall เนี่ยจะถูกใช้ตาม event หรือ campaign ต่างๆ

00:14:15.720 --> 00:14:18.480
ของแบรนด์ชั้นนำในโลกนี้แล้วกัน

00:14:18.839 --> 00:14:20.200
ไม่ว่าจะเป็นพวก Louis Vuitton

00:14:20.320 --> 00:14:21.756
หรือว่าพวก brand name ต่างๆ ครับ

00:14:21.839 --> 00:14:24.560
ก็จะใช้ตัว 8th Wall เนี่ยครับมาเล่น content ตัวเอง

00:14:28.519 --> 00:14:34.200
ราคาเนี่ยครับ 700 เหรียญต่อเดือนเนี่ยมันแบบว่า สุดมั้ย

00:14:35.040 --> 00:14:36.756
ก็ถ้าเราเอาไปทำ cloud function

00:14:36.839 --> 00:14:40.240
เราคงทำได้แบบว่า โอ้ สบายใช่มั้ยครับ

00:14:40.920 --> 00:14:44.680
แล้วแบบอีกตัวนึงก็คือจะเป็นตัวที่รองลงมาที่ว่า Zappar

00:14:45.120 --> 00:14:48.560
แต่ราคามันก็แบบ 255 เหรียญต่อเดือน

00:14:49.160 --> 00:14:51.957
แล้วแบบราคาพวกนี้คือราคา per month

00:14:52.040 --> 00:14:54.637
แล้วแบบนอกจากจะเป็นราคา per month ไม่พอ

00:14:54.720 --> 00:14:57.040
ถ้าเกิด view มันเกิน limit ของเค้าครับ

00:14:59.120 --> 00:15:03.637
ถ้าเราไปเทียบกับ request นะ

00:15:03.720 --> 00:15:05.996
ปกติเราคิดเป็น request กันใช่ปะ

00:15:06.079 --> 00:15:09.119
AR WebAR ต่างๆ เนี่ยครับคิดเป็น view

00:15:09.440 --> 00:15:12.157
ลองคิดดูว่าถ้าเรามี content view เกินแสนคน

00:15:12.240 --> 00:15:15.717
แล้วเค้า charge แบบ 10 เหรียญ per พัน view

00:15:15.800 --> 00:15:20.399
อย่างเงี้ยครับ มันจะบานปลายแค่ไหนใช่มั้ยครับ

00:15:24.519 --> 00:15:25.439
สุดยอดไปเลย

00:15:25.560 --> 00:15:27.960
ก็จริงๆ ก็ถามว่า charge โหดไหม

00:15:28.120 --> 00:15:31.519
โหดนะครับเพราะว่าจะบอกว่าอันนี้มันเป็น per project นะครับ

00:15:32.000 --> 00:15:35.200
มันไม่ใช่ว่าเราจ่ายแล้วแบบมา host เป็น service ไม่ใช่ครับ

00:15:35.360 --> 00:15:38.077
ก็ฟันกันโหดพอสมควรเลยทีเดียว

00:15:38.160 --> 00:15:40.357
ฝั่ง WebAR เนี่ยก็เลยเป็นเหตุผลที่ว่า

00:15:40.440 --> 00:15:45.797
เฮ้ย ทำไมเราถึงต้องแบบอยากลองหรือว่ามี session นี้ขึ้นมาใช่ไหมครับ

00:15:45.880 --> 00:15:51.319
ก็เราก็เลยรู้สึกว่า เฮ้ย แพงไม่มีประโยชน์เลยอะ ทำไมอะ ใช่ปะ

00:15:51.800 --> 00:15:54.277
ก็ทีเนี้ยครับ เราก็เลยไปศึกษาว่า

00:15:54.360 --> 00:15:58.480
เฮ้ย ฝั่ง web เนี่ยครับเขาใช้อะไรกัน ทำ AR กันใช่ไหมครับ

00:15:59.000 --> 00:16:01.480
ก็เราก็จะ intro ให้ก่อนเลยว่า

00:16:05.440 --> 00:16:08.436
การ render 3D หรือว่า 3D environment

00:16:08.519 --> 00:16:09.996
ในฝั่ง JavaScript เนี่ยครับ

00:16:10.079 --> 00:16:12.996
ไม่รู้ว่ามีใครเคยลองใช้ 𝚝𝚑𝚛𝚎𝚎.𝚓𝚜 มามั้ยใช่ไหม

00:16:13.079 --> 00:16:18.196
𝚝𝚑𝚛𝚎𝚎.𝚓𝚜 เนี่ยถามว่าดีไหม ก็ดีครับ

00:16:18.279 --> 00:16:21.400
ถ้าเราเขียนเจ้าตัว three มาใช่ปะ

00:16:21.959 --> 00:16:24.879
แต่ว่าถ้าเกิดเราแบบ อย่างเราเงี้ย เราแบบ muggle เลย

00:16:25.000 --> 00:16:29.280
บอกเลยว่า 𝚝𝚑𝚛𝚎𝚎.𝚓𝚜 เนี่ยคือแบบ โห ไม่เก่งเลยอะ ใช่ปะ

00:16:29.800 --> 00:16:34.277
แต่ว่าเราเคยเขียนแบบพวก 3D เขียน Unity

00:16:34.360 --> 00:16:35.920
เขียน graphic มาใช่ปะครับ

00:16:36.240 --> 00:16:38.116
เราแล้วเราทำ React อะ

00:16:38.199 --> 00:16:42.196
ทีเนี้ย เราก็เลยไปเจออีกสิ่งหนึ่งที่มันเรียกว่า

00:16:42.279 --> 00:16:44.200
𝚛𝚎𝚊𝚌𝚝-𝚝𝚑𝚛𝚎𝚎-𝚏𝚒𝚋𝚎𝚛 ครับ

00:16:44.880 --> 00:16:46.920
อ่า ทีนี้มาเข้าเรื่องเลยละกัน

00:16:47.600 --> 00:16:51.477
ก็เราก็เป็น React enjoyer ท่านหนึ่งเหมือนกันนะครับ

00:16:51.560 --> 00:16:53.559
ก็จริงๆ ก็คือรู้สึกว่ามันง่ายแหละ

00:16:53.880 --> 00:16:56.957
เพราะว่าถ้าถามเราแบบเข้ามาถึงมาใช้ three เงี้ย

00:16:57.040 --> 00:17:00.880
แบบเจอ 𝚞𝚜𝚎𝙵𝚛𝚊𝚖𝚎 เข้าไป ไปไม่ถูกเลยทีเดียวใช่ปะครับ

00:17:01.360 --> 00:17:04.200
อ่า ก็เลยแบบ อ่ะ โอเค

00:17:04.520 --> 00:17:06.959
เราเปลี่ยนจาก 𝚘𝚗𝙵𝚛𝚊𝚖𝚎 ของ 𝚝𝚑𝚛𝚎𝚎.𝚓𝚜

00:17:07.240 --> 00:17:09.277
มาเป็น 𝚞𝚜𝚎𝙵𝚛𝚊𝚖𝚎 ของ 𝚛𝚎𝚊𝚌𝚝-𝚝𝚑𝚛𝚎𝚎-𝚏𝚒𝚋𝚎𝚛 ละกัน

00:17:09.360 --> 00:17:13.920
ก็เจ้าตัวเนี้ยครับ สำหรับใครที่แบบเป็น React dev อยู่แล้วอะ

00:17:14.040 --> 00:17:14.840
แนะนำตัวนี้เลย

00:17:14.959 --> 00:17:18.919
ก็มันไม่ได้แค่เอาไว้ทำ AR จะบอกว่า

00:17:19.520 --> 00:17:21.797
เจ้าตัว React Three เนี่ยครับ มันทำได้หลายอย่างเลย

00:17:21.880 --> 00:17:24.679
ไม่ว่าจะเป็นแบบพวก showcase advertise campaign

00:17:24.799 --> 00:17:26.917
อะไรต่างๆ ที่มันต้องเป็น render เป็น 3D อะครับ

00:17:27.000 --> 00:17:28.356
ก็เจ้าตัวเนี้ยจะตอบโจทย์เลย

00:17:28.439 --> 00:17:32.517
เพราะว่าถ้าเกิดว่าลงไปลึกๆ เรื่อง performance ของ React

00:17:32.600 --> 00:17:33.157
แล้วอะครับ

00:17:33.240 --> 00:17:36.239
ถ้าเกิดมัน render เยอะๆ เนี่ย มัน crash ใช่ไหมครับ

00:17:36.960 --> 00:17:40.677
ก็ทีเนี้ย ด้วยความที่เป็น three อะครับ

00:17:40.760 --> 00:17:42.397
three เขาจะทำงานบน canvas เนาะ

00:17:42.480 --> 00:17:43.279
คล้ายๆ พวก Phaser

00:17:43.559 --> 00:17:44.956
ถ้าใครเคยใช้ Phaser ก็จะรู้ว่า

00:17:45.039 --> 00:17:48.596
เฮ้ย canvas เนี่ยมันช่วยเราเรื่องการ render

00:17:48.679 --> 00:17:51.200
ให้แบบเกิน 30 frame rate ได้ถูกปะครับ

00:17:51.919 --> 00:17:55.517
ก็ถ้าเกิดว่า use effect แล้วไม่ cap ไว้

00:17:55.600 --> 00:17:58.479
ก็ระเบิดกันไปเลยทีเดียวใช่ไหมครับ ถ้าไม่เป็น canvas เนาะ

00:17:58.840 --> 00:18:00.716
เพราะว่า web มันก็ไม่สามารถจะ re-render

00:18:00.799 --> 00:18:01.917
ได้บ่อยขนาดนั้นใช่ไหมครับ

00:18:02.000 --> 00:18:04.120
แต่ว่าด้วยความที่เป็น 3D อะครับ

00:18:05.720 --> 00:18:07.877
เรา dev กันลงไปถึงระดับ frame ใช่ไหมครับ

00:18:07.960 --> 00:18:15.560
ก็จะมีเจ้าตัวเนี้ยแหละครับที่เข้ามาช่วยเรื่องของ render 3D ครับ

00:18:15.799 --> 00:18:22.317
แล้วก็ทีเนี้ย เราก็ได้ลองใช้ตัว three อะครับ

00:18:22.400 --> 00:18:24.000
แล้วเราก็ implement ของเขามา

00:18:25.760 --> 00:18:26.637
เดี๋ยวให้ดูอันนี้

00:18:26.720 --> 00:18:29.841
ก็คือตัวเนี้ยครับ ทำการ implement ORB-SLAM เข้ามานะ

00:18:30.400 --> 00:18:34.279
กับเจ้าตัว three React Three ใช่ปะ

00:18:35.039 --> 00:18:37.476
ก็เราก็จะมี keypoint detection ขึ้นมาแล้ว

00:18:37.559 --> 00:18:39.040
อันนี้อัดเมื่อเช้าข้างหน้า

00:18:39.200 --> 00:18:41.157
ถ้าใครอยากลองเดี๋ยวแปะลิงก์ไว้ให้ครับ

00:18:41.240 --> 00:18:42.997
ก็ใช้ Vite build มา

00:18:43.080 --> 00:18:46.877
ก็จะเห็นว่า เฮ้ย อันเนี้ยก็จะมีเรื่อง keypoint detection

00:18:46.960 --> 00:18:47.437
ใช่ไหมครับ

00:18:47.520 --> 00:18:54.879
แล้วก็จะมี deploy model ลงไปบน Macbook ตัวเองใช่ปะครับ

00:18:55.799 --> 00:18:58.760
อ่ะ โอเคครับ ก็ทีเนี้ย

00:18:59.880 --> 00:19:02.797
ถามว่าตอนเนี้ยครับ สิ่งที่ทำไปเนี่ยครับ

00:19:02.880 --> 00:19:06.357
แบบอยากจะไปลองสู้กับ library ที่เป็น third-party

00:19:06.440 --> 00:19:07.197
พวกนั้นดูใช่ไหม

00:19:07.280 --> 00:19:09.280
ตอนเนี้ยทำอะไรไปแล้วบ้างใช่ไหมครับ

00:19:09.720 --> 00:19:15.157
ก็ roadmap ก็มีตอนเนี้ยยังขาดเรื่อง plane detection อยู่

00:19:15.240 --> 00:19:16.076
ก็คือตอนเนี้ยแหละครับ

00:19:16.159 --> 00:19:18.997
เราสามารถแบบ detect keypoint ต่างๆ นู่นนี่นั่นได้

00:19:19.080 --> 00:19:23.997
และแล้วก็มี real-time tracking เสร็จแล้ว

00:19:24.080 --> 00:19:26.076
AR object เสร็จแล้ววางได้ใช่ไหมครับ

00:19:26.159 --> 00:19:28.920
แล้วก็มี use AR นู่นนี่นั่นใช่ไหมครับ

00:19:29.280 --> 00:19:32.357
ทีเนี้ย to-do ถัดไปก็คือพวก plane detection

00:19:32.440 --> 00:19:33.277
แล้วก็แบบ anchor

00:19:33.360 --> 00:19:34.277
anchor เนี่ยคืออะไร

00:19:34.360 --> 00:19:36.596
ก็คือแบบสมมติว่าเราวางมันไว้ตรงนี้

00:19:36.679 --> 00:19:38.397
แล้วเดินไปตรงนู้น ใช่ไหมครับ

00:19:38.480 --> 00:19:40.040
เดินกลับมาก็ยังอยู่ตรงนี้อยู่

00:19:40.280 --> 00:19:42.476
อ่า ก็ตัวเนี้ยครับ

00:19:42.559 --> 00:19:46.479
ก็ยังเหลือขาดตัว mapping ของ ORB-SLAM ใช่ไหมครับ

00:19:47.159 --> 00:19:51.919
ก็เป็นคร่าวๆ นะครับว่า SLAM คืออะไรใน session นี้

00:19:52.679 --> 00:19:53.520
โดนกินเวลาไป

00:19:54.200 --> 00:19:55.360
แล้วก็มีคนถามว่า

00:19:55.520 --> 00:19:57.157
มันจะมีคำถามเสมอนะครับว่า

00:19:57.240 --> 00:20:00.877
เฮ้ย แล้วทำไม ARKit กับ ARCore ก็ใช้บน web ได้นะครับ

00:20:00.960 --> 00:20:02.476
แล้วทำไมไม่ใช้อะ ใช่ปะ

00:20:02.559 --> 00:20:04.880
ในเมื่อ ARCore เป็นของ Google ใช่ไหม

00:20:05.360 --> 00:20:06.959
แล้ว ARKit เป็นของ iOS

00:20:07.559 --> 00:20:09.476
ปัญหาคือเจ้า ARKit เนี่ยครับ

00:20:09.559 --> 00:20:14.080
มันใช้บน Safari ไม่ได้

00:20:14.840 --> 00:20:19.120
ถามว่า เฮ้ย ทำไมใช้บน Safari ไม่ได้ หมายความว่าอะไรวะ

00:20:19.960 --> 00:20:21.757
ก็ไปดู ticket เขามานะครับ

00:20:21.840 --> 00:20:26.997
ก็เขาบอกว่าเนี่ย เปิด ticket ไว้ตั้งแต่ 2020 อะครับ

00:20:27.080 --> 00:20:29.400
เขาบอกเหลืออยู่อีก 2 ticket จะเสร็จ

00:20:29.960 --> 00:20:32.319
ก็เนี่ยแหละครับ เป็นเรื่องตลกของฝั่ง iOS

00:20:32.919 --> 00:20:37.797
แล้วก็ถ้าใครลงไปลึกขนาดนั้นครับ

00:20:37.880 --> 00:20:39.720
ต่อให้ใช้ Chrome ไป run บน iOS

00:20:40.320 --> 00:20:42.677
มันก็คือ Safari ใส่หน้ากากมาอะครับ เข้าใจปะ

00:20:42.760 --> 00:20:44.600
มันก็ run ไม่ได้อยู่ดีครับ

00:20:45.280 --> 00:20:46.517
เพราะฉะนั้นมันก็เลยแบบ

00:20:46.600 --> 00:20:48.357
เออ ก็ต้องมีแบบ library ตัวนี้ขึ้นมา

00:20:48.440 --> 00:20:50.956
ก็คิดว่าอาจจะเปิดเป็น open source นะครับ

00:20:51.039 --> 00:20:53.039
ให้แบบช่วย contribute อะไรอย่างเงี้ย

00:20:53.559 --> 00:20:54.237
ก็จริงๆ ก็มี repo แล้วครับ

00:20:54.320 --> 00:20:55.640
แต่ยังไม่ได้เปิด public

00:20:56.000 --> 00:20:58.039
ก็มีตัวอันนี้นิดนึง

00:20:59.360 --> 00:21:03.557
แต่ว่าตอนเนี้ยเวลาหมดแล้ว

00:21:03.640 --> 00:21:05.557
อ่ะ อันนี้เป็น web test นะครับ

00:21:05.640 --> 00:21:07.160
เดี๋ยวแปะ deploy ให้อีกที

00:21:07.840 --> 00:21:10.479
ก็ขอบคุณครับ ถ้าใครมีคำถาม

00:21:12.279 --> 00:21:17.240
ครับ ขอบคุณคุณกิตติทัศน์มากนะครับสำหรับ session SLAM นะครับ
